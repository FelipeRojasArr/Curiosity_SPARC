

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 01 14:17:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  0000'                    __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for _e_c
    73  0000' 45                 	db	69
    74  0001' 6E                 	db	110
    75  0002' 74                 	db	116
    76  0003' 65                 	db	101
    77  0004' 72                 	db	114
    78  0005' 5F                 	db	95
    79  0006' 63                 	db	99
    80  0007' 6F                 	db	111
    81  0008' 6D                 	db	109
    82  0009' 6D                 	db	109
    83  000A' 61                 	db	97
    84  000B' 6E                 	db	110
    85  000C' 64                 	db	100
    86                           
    87                           ;initializer for _init
    88  000D' 57                 	db	87
    89  000E' 61                 	db	97
    90  000F' 69                 	db	105
    91  0010' 74                 	db	116
    92  0011' 69                 	db	105
    93  0012' 6E                 	db	110
    94  0013' 67                 	db	103
    95  0014' 2E                 	db	46
    96  0015' 2E                 	db	46
    97  0016' 2E                 	db	46
    98                           
    99                           ;initializer for _Error
   100  0017' 45                 	db	69
   101  0018' 72                 	db	114
   102  0019' 72                 	db	114
   103  001A' 6F                 	db	111
   104  001B' 72                 	db	114
   105                           
   106                           ;initializer for _okay
   107  001C' 4F                 	db	79
   108  001D' 6B                 	db	107
   109  001E' 61                 	db	97
   110  001F' 79                 	db	121
   111  0000                     _PORTCbits	set	3970
   112  0000                     _PORTDbits	set	3971
   113  0000                     _TRISC	set	3988
   114  0000                     _OSCCON	set	4051
   115  0000                     _RCREG	set	4014
   116  0000                     _TXREG	set	4013
   117  0000                     _PIR1bits	set	3998
   118  0000                     _RCSTAbits	set	4011
   119  0000                     _TXSTAbits	set	4012
   120  0000                     _SPBRG	set	4015
   121  0000                     _TRISCbits	set	3988
   122  0000                     _PORTC	set	3970
   123  0000                     _RCIF	set	31989
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  0000'                    __pcinit:
   129                           	opt callstack 0
   130  0000'                    start_initialization:
   131                           	opt callstack 0
   132  0000'                    __initialization:
   133                           	opt callstack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (32 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137  0000' 0E00'              	movlw	low __pidataCOMRAM
   138  0002' 6EF6               	movwf	tblptrl,c
   139  0004' 0E00'              	movlw	high __pidataCOMRAM
   140  0006' 6EF7               	movwf	tblptrh,c
   141  0008' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   142  000A' 6EF8               	movwf	tblptru,c
   143  000C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   144  0010' EE10 F020          	lfsr	1,32
   145  0014'                    copy_data0:
   146  0014' 0009               	tblrd		*+
   147  0016' CFF5 FFEE          	movff	tablat,postinc0
   148  001A' 50E5               	movf	postdec1,w,c
   149  001C' 50E1               	movf	fsr1l,w,c
   150  001E' E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (23 bytes)
   153  0020' EE00' F000'        	lfsr	0,__pbssCOMRAM
   154  0024' 0E17               	movlw	23
   155  0026'                    clear_0:
   156  0026' 6AEE               	clrf	postinc0,c
   157  0028' 06E8               	decf	wreg,f,c
   158  002A' E1FD               	bnz	clear_0
   159  002C'                    end_of_initialization:
   160                           	opt callstack 0
   161  002C'                    __end_of__initialization:
   162                           	opt callstack 0
   163  002C' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   164  002E' 6EF8               	movwf	tblptru,c
   165  0030' 0100               	movlb	0
   166  0032' EF00' F000'        	goto	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMRAM
   169  0000'                    __pbssCOMRAM:
   170                           	opt callstack 0
   171  0000'                    _ons:
   172                           	opt callstack 0
   173  0000'                    	ds	2
   174  0002'                    _PasosActuales:
   175                           	opt callstack 0
   176  0002'                    	ds	2
   177  0004'                    _pasosRecorridos:
   178                           	opt callstack 0
   179  0004'                    	ds	2
   180  0006'                    _CoordRelatY:
   181                           	opt callstack 0
   182  0006'                    	ds	2
   183  0008'                    _CoordRelatX:
   184                           	opt callstack 0
   185  0008'                    	ds	2
   186  000A'                    _CoordAntY:
   187                           	opt callstack 0
   188  000A'                    	ds	2
   189  000C'                    _CoordAntX:
   190                           	opt callstack 0
   191  000C'                    	ds	2
   192  000E'                    _click:
   193                           	opt callstack 0
   194  000E'                    	ds	1
   195  000F'                    _NextState:
   196                           	opt callstack 0
   197  000F'                    	ds	1
   198  0010'                    _cord_y:
   199                           	opt callstack 0
   200  0010'                    	ds	2
   201  0012'                    _cord_x:
   202                           	opt callstack 0
   203  0012'                    	ds	2
   204  0014'                    _Par2:
   205                           	opt callstack 0
   206  0014'                    	ds	1
   207  0015'                    _letter:
   208                           	opt callstack 0
   209  0015'                    	ds	1
   210  0016'                    _Par1:
   211                           	opt callstack 0
   212  0016'                    	ds	1
   213                           
   214                           	psect	dataCOMRAM
   215  0000'                    __pdataCOMRAM:
   216                           	opt callstack 0
   217  0000'                    _e_c:
   218                           	opt callstack 0
   219  0000'                    	ds	13
   220  000D'                    _init:
   221                           	opt callstack 0
   222  000D'                    	ds	10
   223  0017'                    _Error:
   224                           	opt callstack 0
   225  0017'                    	ds	5
   226  001C'                    _okay:
   227                           	opt callstack 0
   228  001C'                    	ds	4
   229                           
   230                           	psect	cstackCOMRAM
   231  0000'                    __pcstackCOMRAM:
   232                           	opt callstack 0
   233  0000'                    ?_ContarPulsos:
   234                           	opt callstack 0
   235  0000'                    ?__delay_ms:
   236                           	opt callstack 0
   237  0000'                    ?___lldiv:
   238                           	opt callstack 0
   239  0000'                    UARTWrite@data:
   240                           	opt callstack 0
   241  0000'                    coord@P1:
   242                           	opt callstack 0
   243  0000'                    ContarPulsos@pasos:
   244                           	opt callstack 0
   245  0000'                    ___lldiv@dividend:
   246                           	opt callstack 0
   247                           
   248                           ; 4 bytes @ 0x0
   249  0000'                    	ds	1
   250  0001'                    start@i:
   251                           	opt callstack 0
   252  0001'                    Par_Validated@i:
   253                           	opt callstack 0
   254  0001'                    Ins_Validated@i:
   255                           	opt callstack 0
   256  0001'                    Coord_Validated@i:
   257                           	opt callstack 0
   258  0001'                    end@i:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x1
   262  0001'                    	ds	1
   263  0002'                    ?_PWMx:
   264                           	opt callstack 0
   265  0002'                    ?_PWMy:
   266                           	opt callstack 0
   267  0002'                    coord@L:
   268                           	opt callstack 0
   269  0002'                    PWMx@distancia:
   270                           	opt callstack 0
   271  0002'                    PWMy@distancia:
   272                           	opt callstack 0
   273                           
   274                           ; 2 bytes @ 0x2
   275  0002'                    	ds	2
   276  0004'                    coord@x:
   277                           	opt callstack 0
   278  0004'                    PWMx@pasos:
   279                           	opt callstack 0
   280  0004'                    PWMy@pasos:
   281                           	opt callstack 0
   282  0004'                    ___lldiv@divisor:
   283                           	opt callstack 0
   284                           
   285                           ; 4 bytes @ 0x4
   286  0004'                    	ds	2
   287  0006'                    coord@y:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0x6
   291  0006'                    	ds	2
   292  0008'                    coord@P2:
   293                           	opt callstack 0
   294  0008'                    ___lldiv@quotient:
   295                           	opt callstack 0
   296                           
   297                           ; 4 bytes @ 0x8
   298  0008'                    	ds	2
   299  000A'                    ??_coord:
   300                           
   301                           ; 1 bytes @ 0xA
   302  000A'                    	ds	2
   303  000C'                    ___lldiv@counter:
   304                           	opt callstack 0
   305                           
   306                           ; 1 bytes @ 0xC
   307  000C'                    	ds	1
   308  000D'                    UARTConfi@BAUD:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0xD
   312  000D'                    	ds	1
   313  000E'                    coord@buffer:
   314                           	opt callstack 0
   315                           
   316                           ; 9 bytes @ 0xE
   317  000E'                    	ds	1
   318  000F'                    
   319                           ; 1 bytes @ 0xF
   320  000F'                    	ds	8
   321  0017'                    coord@read:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x17
   325  0017'                    	ds	1
   326  0018'                    coord@i:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x18
   330  0018'                    	ds	2
   331  001A'                    cmd@i:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x1A
   335  001A'                    	ds	2
   336  001C'                    ??_verification:
   337                           
   338                           ; 1 bytes @ 0x1C
   339  001C'                    	ds	2
   340  001E'                    
   341                           ; 1 bytes @ 0x1E
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 12 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   361 ;;      Params:         0       0       0       0       0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels required when called:    5
   367 ;; This function calls:
   368 ;;		_Movimiento
   369 ;;		_UARTConfi
   370 ;;		_verification
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377  0000'                    __ptext0:
   378                           	opt callstack 0
   379  0000'                    _main:
   380                           	opt callstack 26
   381  0000'                    
   382                           ;main.c: 13:     OSCCON=0x72;
   383  0000' 0E72               	movlw	114
   384  0002' 6ED3               	movwf	211,c	;volatile
   385  0004'                    
   386                           ;main.c: 14:     UARTConfi(9600);
   387  0004' 0E25               	movlw	37
   388  0006' 6E00'              	movwf	(UARTConfi@BAUD+1)^0,c
   389  0008' 0E80               	movlw	128
   390  000A' 6E00'              	movwf	UARTConfi@BAUD^0,c
   391  000C' EC00' F000'        	call	_UARTConfi	;wreg free
   392  0010'                    
   393                           ;main.c: 15:     TRISC=0X00;
   394  0010' 0E00               	movlw	0
   395  0012' 6E94               	movwf	148,c	;volatile
   396  0014'                    
   397                           ;main.c: 16:     verification();
   398  0014' EC00' F000'        	call	_verification	;wreg free
   399  0018'                    
   400                           ;main.c: 17:     Movimiento();
   401  0018' EC00' F000'        	call	_Movimiento	;wreg free
   402  001C' EF00' F000'        	goto	start
   403  0020'                    __end_of_main:
   404                           	opt callstack 0
   405                           
   406 ;; *************** function _verification *****************
   407 ;; Defined at:
   408 ;;		line 8 in file "verification.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    3
   429 ;; This function calls:
   430 ;;		_Coord_Validated
   431 ;;		_Ins_Validated
   432 ;;		_Par_Validated
   433 ;;		_cmd
   434 ;;		_end
   435 ;;		_start
   436 ;; This function is called by:
   437 ;;		_main
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text1
   442  0000'                    __ptext1:
   443                           	opt callstack 0
   444  0000'                    _verification:
   445                           	opt callstack 27
   446  0000'                    
   447                           ;verification.c: 9:     NextState = iddle_State;
   448  0000' 0E00               	movlw	0
   449  0002' 6E00'              	movwf	_NextState^0,c
   450                           
   451                           ;verification.c: 10:     switch(NextState)
   452  0004' EF00' F000'        	goto	l1494
   453  0008'                    l1480:
   454                           
   455                           ;verification.c: 13:                 NextState= start();
   456  0008' EC00' F000'        	call	_start	;wreg free
   457  000C' 6E00'              	movwf	_NextState^0,c
   458  000E'                    l1482:
   459                           
   460                           ;verification.c: 17:                 NextState=cmd();
   461  000E' EC00' F000'        	call	_cmd	;wreg free
   462  0012' 6E00'              	movwf	_NextState^0,c
   463  0014'                    l1484:
   464                           
   465                           ;verification.c: 21:                 NextState=Par_Validated();
   466  0014' EC00' F000'        	call	_Par_Validated	;wreg free
   467  0018' 6E00'              	movwf	_NextState^0,c
   468  001A'                    l1486:
   469                           
   470                           ;verification.c: 25:                 NextState=Ins_Validated();
   471  001A' EC00' F000'        	call	_Ins_Validated	;wreg free
   472  001E' 6E00'              	movwf	_NextState^0,c
   473  0020'                    l1488:
   474                           
   475                           ;verification.c: 29:                 NextState=Coord_Validated();
   476  0020' EC00' F000'        	call	_Coord_Validated	;wreg free
   477  0024' 6E00'              	movwf	_NextState^0,c
   478  0026'                    l1490:
   479                           
   480                           ;verification.c: 33:                 end();
   481  0026' EC00' F000'        	call	_end	;wreg free
   482                           
   483                           ;verification.c: 34:             }break;
   484  002A' EF00' F000'        	goto	l264
   485  002E'                    l1494:
   486  002E' 0E00               	movlw	0
   487  0030' 6E00'              	movwf	??_verification^0,c
   488  0032' 0E00               	movlw	0
   489  0034' 6E00'              	movwf	(??_verification+1)^0,c
   490                           
   491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   492                           ; Switch size 1, requested type "simple"
   493                           ; Number of cases is 1, Range of values is 0 to 0
   494                           ; switch strategies available:
   495                           ; Name         Instructions Cycles
   496                           ; simple_byte            4     3 (average)
   497                           ;	Chosen strategy is simple_byte
   498  0036' 5000'              	movf	(??_verification+1)^0,w,c
   499  0038' 0A00               	xorlw	0	; case 0
   500  003A' B4D8               	btfsc	status,2,c
   501  003C' EF00' F000'        	goto	l1532
   502  0040' EF00' F000'        	goto	l264
   503  0044'                    l1532:
   504                           
   505                           ; Switch size 1, requested type "simple"
   506                           ; Number of cases is 6, Range of values is 0 to 6
   507                           ; switch strategies available:
   508                           ; Name         Instructions Cycles
   509                           ; simple_byte           19    10 (average)
   510                           ;	Chosen strategy is simple_byte
   511  0044' 5000'              	movf	??_verification^0,w,c
   512  0046' 0A00               	xorlw	0	; case 0
   513  0048' B4D8               	btfsc	status,2,c
   514  004A' EF00' F000'        	goto	l1480
   515  004E' 0A01               	xorlw	1	; case 1
   516  0050' B4D8               	btfsc	status,2,c
   517  0052' EF00' F000'        	goto	l1482
   518  0056' 0A03               	xorlw	3	; case 2
   519  0058' B4D8               	btfsc	status,2,c
   520  005A' EF00' F000'        	goto	l1484
   521  005E' 0A01               	xorlw	1	; case 3
   522  0060' B4D8               	btfsc	status,2,c
   523  0062' EF00' F000'        	goto	l1486
   524  0066' 0A07               	xorlw	7	; case 4
   525  0068' B4D8               	btfsc	status,2,c
   526  006A' EF00' F000'        	goto	l1488
   527  006E' 0A02               	xorlw	2	; case 6
   528  0070' B4D8               	btfsc	status,2,c
   529  0072' EF00' F000'        	goto	l1490
   530  0076' EF00' F000'        	goto	l264
   531  007A'                    l264:
   532  007A' 0012               	return		;funcret
   533  007C'                    __end_of_verification:
   534                           	opt callstack 0
   535                           
   536 ;; *************** function _start *****************
   537 ;; Defined at:
   538 ;;		line 17 in file "cases.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  i               2    1[COMRAM] int 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      unsigned char 
   545 ;; Registers used:
   546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   552 ;;      Params:         0       0       0       0       0       0       0       0       0
   553 ;;      Locals:         2       0       0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0
   555 ;;      Totals:         2       0       0       0       0       0       0       0       0
   556 ;;Total ram usage:        2 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    1
   559 ;; This function calls:
   560 ;;		_UARTWrite
   561 ;; This function is called by:
   562 ;;		_verification
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text2
   567  0000'                    __ptext2:
   568                           	opt callstack 0
   569  0000'                    _start:
   570                           	opt callstack 28
   571  0000'                    
   572                           ;cases.c: 18:      for(int i=0;i<10;i++){
   573  0000' 0E00               	movlw	0
   574  0002' 6E00'              	movwf	(start@i+1)^0,c
   575  0004' 0E00               	movlw	0
   576  0006' 6E00'              	movwf	start@i^0,c
   577  0008'                    l1070:
   578                           
   579                           ;cases.c: 19:         UARTWrite(init[i]);
   580  0008' 0E00'              	movlw	low _init
   581  000A' 2400'              	addwf	start@i^0,w,c
   582  000C' 6ED9               	movwf	fsr2l,c
   583  000E' 0E00'              	movlw	high _init
   584  0010' 2000'              	addwfc	(start@i+1)^0,w,c
   585  0012' 6EDA               	movwf	fsr2h,c
   586  0014' 50DF               	movf	indf2,w,c
   587  0016' EC00' F000'        	call	_UARTWrite
   588  001A'                    
   589                           ;cases.c: 20:     }
   590  001A' 4A00'              	infsnz	start@i^0,f,c
   591  001C' 2A00'              	incf	(start@i+1)^0,f,c
   592  001E' BE00'              	btfsc	(start@i+1)^0,7,c
   593  0020' EF00' F000'        	goto	u131
   594  0024' 5000'              	movf	(start@i+1)^0,w,c
   595  0026' E109               	bnz	u130
   596  0028' 0E0A               	movlw	10
   597  002A' 5C00'              	subwf	start@i^0,w,c
   598  002C' A0D8               	btfss	status,0,c
   599  002E' EF00' F000'        	goto	u131
   600  0032' EF00' F000'        	goto	u130
   601  0036'                    u131:
   602  0036' EF00' F000'        	goto	l1070
   603  003A'                    u130:
   604  003A'                    
   605                           ;cases.c: 21:      PORTC = 0xff;
   606  003A' 6882               	setf	130,c	;volatile
   607  003C'                    
   608                           ;cases.c: 22:      return wait_cmd_State;
   609  003C' 0E01               	movlw	1
   610  003E' 0012               	return		;funcret
   611  0040'                    __end_of_start:
   612                           	opt callstack 0
   613                           
   614 ;; *************** function _end *****************
   615 ;; Defined at:
   616 ;;		line 90 in file "cases.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  i               2    1[COMRAM] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         2       0       0       0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0
   633 ;;      Totals:         2       0       0       0       0       0       0       0       0
   634 ;;Total ram usage:        2 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		_UARTWrite
   639 ;; This function is called by:
   640 ;;		_verification
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text3
   645  0000'                    __ptext3:
   646                           	opt callstack 0
   647  0000'                    _end:
   648                           	opt callstack 28
   649  0000'                    
   650                           ;cases.c: 91:     for(int i=0;i<4;i++){
   651  0000' 0E00               	movlw	0
   652  0002' 6E00'              	movwf	(end@i+1)^0,c
   653  0004' 0E00               	movlw	0
   654  0006' 6E00'              	movwf	end@i^0,c
   655  0008'                    l1214:
   656                           
   657                           ;cases.c: 92:         UARTWrite(okay[i]);
   658  0008' 0E00'              	movlw	low _okay
   659  000A' 2400'              	addwf	end@i^0,w,c
   660  000C' 6ED9               	movwf	fsr2l,c
   661  000E' 0E00'              	movlw	high _okay
   662  0010' 2000'              	addwfc	(end@i+1)^0,w,c
   663  0012' 6EDA               	movwf	fsr2h,c
   664  0014' 50DF               	movf	indf2,w,c
   665  0016' EC00' F000'        	call	_UARTWrite
   666  001A'                    
   667                           ;cases.c: 93:     }
   668  001A' 4A00'              	infsnz	end@i^0,f,c
   669  001C' 2A00'              	incf	(end@i+1)^0,f,c
   670  001E' BE00'              	btfsc	(end@i+1)^0,7,c
   671  0020' EF00' F000'        	goto	u241
   672  0024' 5000'              	movf	(end@i+1)^0,w,c
   673  0026' E109               	bnz	u240
   674  0028' 0E04               	movlw	4
   675  002A' 5C00'              	subwf	end@i^0,w,c
   676  002C' A0D8               	btfss	status,0,c
   677  002E' EF00' F000'        	goto	u241
   678  0032' EF00' F000'        	goto	u240
   679  0036'                    u241:
   680  0036' EF00' F000'        	goto	l1214
   681  003A'                    u240:
   682  003A'                    
   683                           ;cases.c: 94:     PORTC=0XFF;
   684  003A' 6882               	setf	130,c	;volatile
   685  003C' 0012               	return		;funcret
   686  003E'                    __end_of_end:
   687                           	opt callstack 0
   688                           
   689 ;; *************** function _cmd *****************
   690 ;; Defined at:
   691 ;;		line 26 in file "cases.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  i               2   26[COMRAM] int 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      unsigned char 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:         2       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         2       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        2 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    2
   712 ;; This function calls:
   713 ;;		_UARTWrite
   714 ;;		_coord
   715 ;; This function is called by:
   716 ;;		_verification
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text4
   721  0000'                    __ptext4:
   722                           	opt callstack 0
   723  0000'                    _cmd:
   724                           	opt callstack 27
   725  0000'                    
   726                           ;cases.c: 27:     UARTWrite(13);
   727  0000' 0E0D               	movlw	13
   728  0002' EC00' F000'        	call	_UARTWrite
   729  0006'                    
   730                           ;cases.c: 28:     PORTC = 0x00;
   731  0006' 0E00               	movlw	0
   732  0008' 6E82               	movwf	130,c	;volatile
   733  000A'                    
   734                           ;cases.c: 29:     for(int i=0;i<10;i++){
   735  000A' 0E00               	movlw	0
   736  000C' 6E00'              	movwf	(cmd@i+1)^0,c
   737  000E' 0E00               	movlw	0
   738  0010' 6E00'              	movwf	cmd@i^0,c
   739  0012'                    l1402:
   740                           
   741                           ;cases.c: 30:         UARTWrite(e_c[i]);
   742  0012' 0E00'              	movlw	low _e_c
   743  0014' 2400'              	addwf	cmd@i^0,w,c
   744  0016' 6ED9               	movwf	fsr2l,c
   745  0018' 0E00'              	movlw	high _e_c
   746  001A' 2000'              	addwfc	(cmd@i+1)^0,w,c
   747  001C' 6EDA               	movwf	fsr2h,c
   748  001E' 50DF               	movf	indf2,w,c
   749  0020' EC00' F000'        	call	_UARTWrite
   750  0024'                    
   751                           ;cases.c: 31:     }
   752  0024' 4A00'              	infsnz	cmd@i^0,f,c
   753  0026' 2A00'              	incf	(cmd@i+1)^0,f,c
   754  0028' BE00'              	btfsc	(cmd@i+1)^0,7,c
   755  002A' EF00' F000'        	goto	u401
   756  002E' 5000'              	movf	(cmd@i+1)^0,w,c
   757  0030' E109               	bnz	u400
   758  0032' 0E0A               	movlw	10
   759  0034' 5C00'              	subwf	cmd@i^0,w,c
   760  0036' A0D8               	btfss	status,0,c
   761  0038' EF00' F000'        	goto	u401
   762  003C' EF00' F000'        	goto	u400
   763  0040'                    u401:
   764  0040' EF00' F000'        	goto	l1402
   765  0044'                    u400:
   766  0044'                    
   767                           ;cases.c: 32:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
   768  0044' 0E00'              	movlw	low _Par1
   769  0046' 6E00'              	movwf	coord@P1^0,c
   770  0048' 0E00'              	movlw	high _Par1
   771  004A' 6E00'              	movwf	(coord@P1+1)^0,c
   772  004C' 0E00'              	movlw	low _letter
   773  004E' 6E00'              	movwf	coord@L^0,c
   774  0050' 0E00'              	movlw	high _letter
   775  0052' 6E00'              	movwf	(coord@L+1)^0,c
   776  0054' 0E00'              	movlw	low _cord_x
   777  0056' 6E00'              	movwf	coord@x^0,c
   778  0058' 0E00'              	movlw	high _cord_x
   779  005A' 6E00'              	movwf	(coord@x+1)^0,c
   780  005C' 0E00'              	movlw	low _cord_y
   781  005E' 6E00'              	movwf	coord@y^0,c
   782  0060' 0E00'              	movlw	high _cord_y
   783  0062' 6E00'              	movwf	(coord@y+1)^0,c
   784  0064' 0E00'              	movlw	low _Par2
   785  0066' 6E00'              	movwf	coord@P2^0,c
   786  0068' 0E00'              	movlw	high _Par2
   787  006A' 6E00'              	movwf	(coord@P2+1)^0,c
   788  006C' EC00' F000'        	call	_coord	;wreg free
   789  0070'                    
   790                           ;cases.c: 33:     PORTC =0Xff;
   791  0070' 6882               	setf	130,c	;volatile
   792  0072'                    
   793                           ;cases.c: 34:     return validate_Par_State;
   794  0072' 0E02               	movlw	2
   795  0074' 0012               	return		;funcret
   796  0076'                    __end_of_cmd:
   797                           	opt callstack 0
   798                           
   799 ;; *************** function _coord *****************
   800 ;; Defined at:
   801 ;;		line 12 in file "coordenadas.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  P1              2    0[COMRAM] PTR unsigned char 
   804 ;;		 -> Par1(1), 
   805 ;;  L               2    2[COMRAM] PTR unsigned char 
   806 ;;		 -> letter(1), 
   807 ;;  x               2    4[COMRAM] PTR unsigned short 
   808 ;;		 -> cord_x(2), 
   809 ;;  y               2    6[COMRAM] PTR unsigned short 
   810 ;;		 -> cord_y(2), 
   811 ;;  P2              2    8[COMRAM] PTR unsigned char 
   812 ;;		 -> Par2(1), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  i               2   24[COMRAM] int 
   815 ;;  buffer          9   14[COMRAM] unsigned char [9]
   816 ;;  read            1   23[COMRAM] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  2    0[COMRAM] int 
   819 ;; Registers used:
   820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   826 ;;      Params:        10       0       0       0       0       0       0       0       0
   827 ;;      Locals:        12       0       0       0       0       0       0       0       0
   828 ;;      Temps:          4       0       0       0       0       0       0       0       0
   829 ;;      Totals:        26       0       0       0       0       0       0       0       0
   830 ;;Total ram usage:       26 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		_UARTRead
   835 ;; This function is called by:
   836 ;;		_cmd
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text5
   841  0000'                    __ptext5:
   842                           	opt callstack 0
   843  0000'                    _coord:
   844                           	opt callstack 27
   845  0000'                    
   846                           ;coordenadas.c: 13:   char buffer [9];;coordenadas.c: 14:         char read;;coordenadas
      +                          .c: 16:         for(int i=0; i<=8; i++){
   847  0000' 0E00               	movlw	0
   848  0002' 6E00'              	movwf	(coord@i+1)^0,c
   849  0004' 0E00               	movlw	0
   850  0006' 6E00'              	movwf	coord@i^0,c
   851  0008'                    l1354:
   852                           
   853                           ;coordenadas.c: 17:             read= UARTRead();
   854  0008' EC00' F000'        	call	_UARTRead	;wreg free
   855  000C' 6E00'              	movwf	coord@read^0,c
   856  000E'                    
   857                           ;coordenadas.c: 18:             buffer[i]=read;
   858  000E' 0E00'              	movlw	low coord@buffer
   859  0010' 2400'              	addwf	coord@i^0,w,c
   860  0012' 6ED9               	movwf	fsr2l,c
   861  0014' 0E00'              	movlw	high coord@buffer
   862  0016' 2000'              	addwfc	(coord@i+1)^0,w,c
   863  0018' 6EDA               	movwf	fsr2h,c
   864  001A' C017' FFDF         	movff	coord@read,indf2
   865  001E'                    
   866                           ;coordenadas.c: 19:         }
   867  001E' 4A00'              	infsnz	coord@i^0,f,c
   868  0020' 2A00'              	incf	(coord@i+1)^0,f,c
   869  0022' BE00'              	btfsc	(coord@i+1)^0,7,c
   870  0024' EF00' F000'        	goto	u371
   871  0028' 5000'              	movf	(coord@i+1)^0,w,c
   872  002A' E109               	bnz	u370
   873  002C' 0E09               	movlw	9
   874  002E' 5C00'              	subwf	coord@i^0,w,c
   875  0030' A0D8               	btfss	status,0,c
   876  0032' EF00' F000'        	goto	u371
   877  0036' EF00' F000'        	goto	u370
   878  003A'                    u371:
   879  003A' EF00' F000'        	goto	l1354
   880  003E'                    u370:
   881  003E'                    
   882                           ;coordenadas.c: 20:         *P1= buffer[0];
   883  003E' C000' FFD9         	movff	coord@P1,fsr2l
   884  0042' C001' FFDA         	movff	coord@P1+1,fsr2h
   885  0046' C00E' FFDF         	movff	coord@buffer,indf2
   886                           
   887                           ;coordenadas.c: 21:         *L= buffer[1];
   888  004A' C002' FFD9         	movff	coord@L,fsr2l
   889  004E' C003' FFDA         	movff	coord@L+1,fsr2h
   890  0052' C00F' FFDF         	movff	coord@buffer+1,indf2
   891  0056'                    
   892                           ;coordenadas.c: 22:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
   893  0056' 0E30               	movlw	48
   894  0058' 6E00'              	movwf	??_coord^0,c
   895  005A' 0EEB               	movlw	235
   896  005C' 6E00'              	movwf	(??_coord+1)^0,c
   897  005E' 5000'              	movf	(coord@buffer+2)^0,w,c
   898  0060' 0D64               	mullw	100
   899  0062' CFF3 F00C'         	movff	prodl,??_coord+2
   900  0066' CFF4 F00D'         	movff	prodh,??_coord+3
   901  006A' 5000'              	movf	(coord@buffer+3)^0,w,c
   902  006C' 0D0A               	mullw	10
   903  006E' 50F3               	movf	243,w,c
   904  0070' 2600'              	addwf	(??_coord+2)^0,f,c
   905  0072' 50F4               	movf	244,w,c
   906  0074' 2200'              	addwfc	(??_coord+3)^0,f,c
   907  0076' 5000'              	movf	(coord@buffer+4)^0,w,c
   908  0078' 2600'              	addwf	(??_coord+2)^0,f,c
   909  007A' 0E00               	movlw	0
   910  007C' 2200'              	addwfc	(??_coord+3)^0,f,c
   911  007E' 5000'              	movf	??_coord^0,w,c
   912  0080' 2600'              	addwf	(??_coord+2)^0,f,c
   913  0082' 5000'              	movf	(??_coord+1)^0,w,c
   914  0084' 2200'              	addwfc	(??_coord+3)^0,f,c
   915  0086' C004' FFD9         	movff	coord@x,fsr2l
   916  008A' C005' FFDA         	movff	coord@x+1,fsr2h
   917  008E' C00C' FFDE         	movff	??_coord+2,postinc2
   918  0092' C00D' FFDD         	movff	??_coord+3,postdec2
   919  0096'                    
   920                           ;coordenadas.c: 23:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
   921  0096' 0E30               	movlw	48
   922  0098' 6E00'              	movwf	??_coord^0,c
   923  009A' 0EEB               	movlw	235
   924  009C' 6E00'              	movwf	(??_coord+1)^0,c
   925  009E' 5000'              	movf	(coord@buffer+5)^0,w,c
   926  00A0' 0D64               	mullw	100
   927  00A2' CFF3 F00C'         	movff	prodl,??_coord+2
   928  00A6' CFF4 F00D'         	movff	prodh,??_coord+3
   929  00AA' 5000'              	movf	(coord@buffer+6)^0,w,c
   930  00AC' 0D0A               	mullw	10
   931  00AE' 50F3               	movf	243,w,c
   932  00B0' 2600'              	addwf	(??_coord+2)^0,f,c
   933  00B2' 50F4               	movf	244,w,c
   934  00B4' 2200'              	addwfc	(??_coord+3)^0,f,c
   935  00B6' 5000'              	movf	(coord@buffer+7)^0,w,c
   936  00B8' 2600'              	addwf	(??_coord+2)^0,f,c
   937  00BA' 0E00               	movlw	0
   938  00BC' 2200'              	addwfc	(??_coord+3)^0,f,c
   939  00BE' 5000'              	movf	??_coord^0,w,c
   940  00C0' 2600'              	addwf	(??_coord+2)^0,f,c
   941  00C2' 5000'              	movf	(??_coord+1)^0,w,c
   942  00C4' 2200'              	addwfc	(??_coord+3)^0,f,c
   943  00C6' C006' FFD9         	movff	coord@y,fsr2l
   944  00CA' C007' FFDA         	movff	coord@y+1,fsr2h
   945  00CE' C00C' FFDE         	movff	??_coord+2,postinc2
   946  00D2' C00D' FFDD         	movff	??_coord+3,postdec2
   947                           
   948                           ;coordenadas.c: 24:   *P2= buffer[8];
   949  00D6' C008' FFD9         	movff	coord@P2,fsr2l
   950  00DA' C009' FFDA         	movff	coord@P2+1,fsr2h
   951  00DE' C016' FFDF         	movff	coord@buffer+8,indf2
   952  00E2' 0012               	return		;funcret
   953  00E4'                    __end_of_coord:
   954                           	opt callstack 0
   955                           
   956 ;; *************** function _UARTRead *****************
   957 ;; Defined at:
   958 ;;		line 32 in file "UART.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      unsigned char 
   965 ;; Registers used:
   966 ;;		wreg, status,2
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         0       0       0       0       0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_coord
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text6
   986  0000'                    __ptext6:
   987                           	opt callstack 0
   988  0000'                    _UARTRead:
   989                           	opt callstack 27
   990  0000'                    l94:
   991  0000' AA9E               	btfss	3998,5,c	;volatile
   992  0002' EF00' F000'        	goto	u51
   993  0006' EF00' F000'        	goto	u50
   994  000A'                    u51:
   995  000A' EF00' F000'        	goto	l94
   996  000E'                    u50:
   997  000E'                    
   998                           ;UART.c: 34:     return RCREG;
   999  000E' 50AE               	movf	174,w,c	;volatile
  1000  0010' 0012               	return		;funcret
  1001  0012'                    __end_of_UARTRead:
  1002                           	opt callstack 0
  1003                           
  1004 ;; *************** function _Par_Validated *****************
  1005 ;; Defined at:
  1006 ;;		line 37 in file "cases.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  i               2    1[COMRAM] int 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      unsigned char 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1020 ;;      Params:         0       0       0       0       0       0       0       0       0
  1021 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1023 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1024 ;;Total ram usage:        2 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    1
  1027 ;; This function calls:
  1028 ;;		_UARTWrite
  1029 ;; This function is called by:
  1030 ;;		_verification
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text7
  1035  0000'                    __ptext7:
  1036                           	opt callstack 0
  1037  0000'                    _Par_Validated:
  1038                           	opt callstack 28
  1039  0000'                    
  1040                           ;cases.c: 38:     PORTC=0x00;
  1041  0000' 0E00               	movlw	0
  1042  0002' 6E82               	movwf	130,c	;volatile
  1043  0004'                    
  1044                           ;cases.c: 39:     if(Par1==0X3C && Par2==0x3E){
  1045  0004' 0E3C               	movlw	60
  1046  0006' 1800'              	xorwf	_Par1^0,w,c
  1047  0008' A4D8               	btfss	status,2,c
  1048  000A' EF00' F000'        	goto	u151
  1049  000E' EF00' F000'        	goto	u150
  1050  0012'                    u151:
  1051  0012' EF00' F000'        	goto	l1118
  1052  0016'                    u150:
  1053  0016' 0E3E               	movlw	62
  1054  0018' 1800'              	xorwf	_Par2^0,w,c
  1055  001A' A4D8               	btfss	status,2,c
  1056  001C' EF00' F000'        	goto	u161
  1057  0020' EF00' F000'        	goto	u160
  1058  0024'                    u161:
  1059  0024' EF00' F000'        	goto	l1118
  1060  0028'                    u160:
  1061  0028'                    
  1062                           ;cases.c: 40:         PORTC=0X02;
  1063  0028' 0E02               	movlw	2
  1064  002A' 6E82               	movwf	130,c	;volatile
  1065  002C'                    
  1066                           ;cases.c: 41:         return validate_Instruct_State;
  1067  002C' 0E03               	movlw	3
  1068  002E' EF00' F000'        	goto	l42
  1069  0032'                    l1118:
  1070                           
  1071                           ;cases.c: 44:         for(int i=0;i<5;i++){
  1072  0032' 0E00               	movlw	0
  1073  0034' 6E00'              	movwf	(Par_Validated@i+1)^0,c
  1074  0036' 0E00               	movlw	0
  1075  0038' 6E00'              	movwf	Par_Validated@i^0,c
  1076  003A'                    l1124:
  1077                           
  1078                           ;cases.c: 45:             UARTWrite(Error[i]);
  1079  003A' 0E00'              	movlw	low _Error
  1080  003C' 2400'              	addwf	Par_Validated@i^0,w,c
  1081  003E' 6ED9               	movwf	fsr2l,c
  1082  0040' 0E00'              	movlw	high _Error
  1083  0042' 2000'              	addwfc	(Par_Validated@i+1)^0,w,c
  1084  0044' 6EDA               	movwf	fsr2h,c
  1085  0046' 50DF               	movf	indf2,w,c
  1086  0048' EC00' F000'        	call	_UARTWrite
  1087  004C'                    
  1088                           ;cases.c: 46:         }
  1089  004C' 4A00'              	infsnz	Par_Validated@i^0,f,c
  1090  004E' 2A00'              	incf	(Par_Validated@i+1)^0,f,c
  1091  0050' BE00'              	btfsc	(Par_Validated@i+1)^0,7,c
  1092  0052' EF00' F000'        	goto	u171
  1093  0056' 5000'              	movf	(Par_Validated@i+1)^0,w,c
  1094  0058' E109               	bnz	u170
  1095  005A' 0E05               	movlw	5
  1096  005C' 5C00'              	subwf	Par_Validated@i^0,w,c
  1097  005E' A0D8               	btfss	status,0,c
  1098  0060' EF00' F000'        	goto	u171
  1099  0064' EF00' F000'        	goto	u170
  1100  0068'                    u171:
  1101  0068' EF00' F000'        	goto	l1124
  1102  006C'                    u170:
  1103  006C'                    
  1104                           ;cases.c: 47:         PORTC= 0X04;
  1105  006C' 0E04               	movlw	4
  1106  006E' 6E82               	movwf	130,c	;volatile
  1107  0070'                    
  1108                           ;cases.c: 48:         return wait_cmd_State;
  1109  0070' 0E01               	movlw	1
  1110  0072'                    l42:
  1111  0072' 0012               	return		;funcret
  1112  0074'                    __end_of_Par_Validated:
  1113                           	opt callstack 0
  1114                           
  1115 ;; *************** function _Ins_Validated *****************
  1116 ;; Defined at:
  1117 ;;		line 52 in file "cases.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  i               2    1[COMRAM] int 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      unsigned char 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0
  1132 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1134 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1135 ;;Total ram usage:        2 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    1
  1138 ;; This function calls:
  1139 ;;		_UARTWrite
  1140 ;; This function is called by:
  1141 ;;		_verification
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text8
  1146  0000'                    __ptext8:
  1147                           	opt callstack 0
  1148  0000'                    _Ins_Validated:
  1149                           	opt callstack 28
  1150  0000'                    
  1151                           ;cases.c: 53:     PORTC=0x00;
  1152  0000' 0E00               	movlw	0
  1153  0002' 6E82               	movwf	130,c	;volatile
  1154  0004'                    
  1155                           ;cases.c: 54:     if(letter==0x43){
  1156  0004' 0E43               	movlw	67
  1157  0006' 1800'              	xorwf	_letter^0,w,c
  1158  0008' A4D8               	btfss	status,2,c
  1159  000A' EF00' F000'        	goto	u181
  1160  000E' EF00' F000'        	goto	u180
  1161  0012'                    u181:
  1162  0012' EF00' F000'        	goto	l1148
  1163  0016'                    u180:
  1164  0016'                    
  1165                           ;cases.c: 55:         PORTC=0X02;
  1166  0016' 0E02               	movlw	2
  1167  0018' 6E82               	movwf	130,c	;volatile
  1168                           
  1169                           ;cases.c: 56:         click=1;
  1170  001A' 0E01               	movlw	1
  1171  001C' 6E00'              	movwf	_click^0,c
  1172  001E'                    l1142:
  1173                           
  1174                           ;cases.c: 57:         return validate_Coord_State;
  1175  001E' 0E04               	movlw	4
  1176  0020' EF00' F000'        	goto	l49
  1177  0024'                    l1148:
  1178  0024' 0E53               	movlw	83
  1179  0026' 1800'              	xorwf	_letter^0,w,c
  1180  0028' A4D8               	btfss	status,2,c
  1181  002A' EF00' F000'        	goto	u191
  1182  002E' EF00' F000'        	goto	u190
  1183  0032'                    u191:
  1184  0032' EF00' F000'        	goto	l1158
  1185  0036'                    u190:
  1186  0036'                    
  1187                           ;cases.c: 61:         PORTC=0X02;
  1188  0036' 0E02               	movlw	2
  1189  0038' 6E82               	movwf	130,c	;volatile
  1190                           
  1191                           ;cases.c: 62:         click=0;
  1192  003A' 0E00               	movlw	0
  1193  003C' 6E00'              	movwf	_click^0,c
  1194  003E' EF00' F000'        	goto	l1142
  1195  0042'                    l1158:
  1196                           
  1197                           ;cases.c: 66:         for(int i=0;i<5;i++){
  1198  0042' 0E00               	movlw	0
  1199  0044' 6E00'              	movwf	(Ins_Validated@i+1)^0,c
  1200  0046' 0E00               	movlw	0
  1201  0048' 6E00'              	movwf	Ins_Validated@i^0,c
  1202  004A'                    l1164:
  1203                           
  1204                           ;cases.c: 67:             UARTWrite(Error[i]);
  1205  004A' 0E00'              	movlw	low _Error
  1206  004C' 2400'              	addwf	Ins_Validated@i^0,w,c
  1207  004E' 6ED9               	movwf	fsr2l,c
  1208  0050' 0E00'              	movlw	high _Error
  1209  0052' 2000'              	addwfc	(Ins_Validated@i+1)^0,w,c
  1210  0054' 6EDA               	movwf	fsr2h,c
  1211  0056' 50DF               	movf	indf2,w,c
  1212  0058' EC00' F000'        	call	_UARTWrite
  1213  005C'                    
  1214                           ;cases.c: 68:         }
  1215  005C' 4A00'              	infsnz	Ins_Validated@i^0,f,c
  1216  005E' 2A00'              	incf	(Ins_Validated@i+1)^0,f,c
  1217  0060' BE00'              	btfsc	(Ins_Validated@i+1)^0,7,c
  1218  0062' EF00' F000'        	goto	u201
  1219  0066' 5000'              	movf	(Ins_Validated@i+1)^0,w,c
  1220  0068' E109               	bnz	u200
  1221  006A' 0E05               	movlw	5
  1222  006C' 5C00'              	subwf	Ins_Validated@i^0,w,c
  1223  006E' A0D8               	btfss	status,0,c
  1224  0070' EF00' F000'        	goto	u201
  1225  0074' EF00' F000'        	goto	u200
  1226  0078'                    u201:
  1227  0078' EF00' F000'        	goto	l1164
  1228  007C'                    u200:
  1229  007C'                    
  1230                           ;cases.c: 69:         PORTC= 0X04;
  1231  007C' 0E04               	movlw	4
  1232  007E' 6E82               	movwf	130,c	;volatile
  1233  0080'                    
  1234                           ;cases.c: 70:         return wait_cmd_State;
  1235  0080' 0E01               	movlw	1
  1236  0082'                    l49:
  1237  0082' 0012               	return		;funcret
  1238  0084'                    __end_of_Ins_Validated:
  1239                           	opt callstack 0
  1240                           
  1241 ;; *************** function _Coord_Validated *****************
  1242 ;; Defined at:
  1243 ;;		line 74 in file "cases.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  i               2    1[COMRAM] int 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      unsigned char 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0
  1258 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1260 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1261 ;;Total ram usage:        2 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    1
  1264 ;; This function calls:
  1265 ;;		_UARTWrite
  1266 ;; This function is called by:
  1267 ;;		_verification
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text9
  1272  0000'                    __ptext9:
  1273                           	opt callstack 0
  1274  0000'                    _Coord_Validated:
  1275                           	opt callstack 28
  1276  0000'                    
  1277                           ;cases.c: 75:     PORTC=0x00;
  1278  0000' 0E00               	movlw	0
  1279  0002' 6E82               	movwf	130,c	;volatile
  1280  0004'                    
  1281                           ;cases.c: 76:     if(cord_x<=300 && cord_y<=300){
  1282  0004' 0E2D               	movlw	45
  1283  0006' 5C00'              	subwf	_cord_x^0,w,c
  1284  0008' 0E01               	movlw	1
  1285  000A' 5800'              	subwfb	(_cord_x+1)^0,w,c
  1286  000C' B0D8               	btfsc	status,0,c
  1287  000E' EF00' F000'        	goto	u211
  1288  0012' EF00' F000'        	goto	u210
  1289  0016'                    u211:
  1290  0016' EF00' F000'        	goto	l1190
  1291  001A'                    u210:
  1292  001A' 0E2D               	movlw	45
  1293  001C' 5C00'              	subwf	_cord_y^0,w,c
  1294  001E' 0E01               	movlw	1
  1295  0020' 5800'              	subwfb	(_cord_y+1)^0,w,c
  1296  0022' B0D8               	btfsc	status,0,c
  1297  0024' EF00' F000'        	goto	u221
  1298  0028' EF00' F000'        	goto	u220
  1299  002C'                    u221:
  1300  002C' EF00' F000'        	goto	l1190
  1301  0030'                    u220:
  1302  0030'                    
  1303                           ;cases.c: 77:         PORTC=0X02;
  1304  0030' 0E02               	movlw	2
  1305  0032' 6E82               	movwf	130,c	;volatile
  1306  0034'                    
  1307                           ;cases.c: 78:         return end_State;
  1308  0034' 0E06               	movlw	6
  1309  0036' EF00' F000'        	goto	l58
  1310  003A'                    l1190:
  1311                           
  1312                           ;cases.c: 81:         for(int i=0;i<5;i++){
  1313  003A' 0E00               	movlw	0
  1314  003C' 6E00'              	movwf	(Coord_Validated@i+1)^0,c
  1315  003E' 0E00               	movlw	0
  1316  0040' 6E00'              	movwf	Coord_Validated@i^0,c
  1317  0042'                    l1196:
  1318                           
  1319                           ;cases.c: 82:             UARTWrite(Error[i]);
  1320  0042' 0E00'              	movlw	low _Error
  1321  0044' 2400'              	addwf	Coord_Validated@i^0,w,c
  1322  0046' 6ED9               	movwf	fsr2l,c
  1323  0048' 0E00'              	movlw	high _Error
  1324  004A' 2000'              	addwfc	(Coord_Validated@i+1)^0,w,c
  1325  004C' 6EDA               	movwf	fsr2h,c
  1326  004E' 50DF               	movf	indf2,w,c
  1327  0050' EC00' F000'        	call	_UARTWrite
  1328  0054'                    
  1329                           ;cases.c: 83:         }
  1330  0054' 4A00'              	infsnz	Coord_Validated@i^0,f,c
  1331  0056' 2A00'              	incf	(Coord_Validated@i+1)^0,f,c
  1332  0058' BE00'              	btfsc	(Coord_Validated@i+1)^0,7,c
  1333  005A' EF00' F000'        	goto	u231
  1334  005E' 5000'              	movf	(Coord_Validated@i+1)^0,w,c
  1335  0060' E109               	bnz	u230
  1336  0062' 0E05               	movlw	5
  1337  0064' 5C00'              	subwf	Coord_Validated@i^0,w,c
  1338  0066' A0D8               	btfss	status,0,c
  1339  0068' EF00' F000'        	goto	u231
  1340  006C' EF00' F000'        	goto	u230
  1341  0070'                    u231:
  1342  0070' EF00' F000'        	goto	l1196
  1343  0074'                    u230:
  1344  0074'                    
  1345                           ;cases.c: 84:         PORTC= 0X04;
  1346  0074' 0E04               	movlw	4
  1347  0076' 6E82               	movwf	130,c	;volatile
  1348  0078'                    
  1349                           ;cases.c: 85:        return wait_cmd_State;
  1350  0078' 0E01               	movlw	1
  1351  007A'                    l58:
  1352  007A' 0012               	return		;funcret
  1353  007C'                    __end_of_Coord_Validated:
  1354                           	opt callstack 0
  1355                           
  1356 ;; *************** function _UARTWrite *****************
  1357 ;; Defined at:
  1358 ;;		line 26 in file "UART.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  data            1    wreg     unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  data            1    0[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0
  1373 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1375 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        1 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_start
  1382 ;;		_cmd
  1383 ;;		_Par_Validated
  1384 ;;		_Ins_Validated
  1385 ;;		_Coord_Validated
  1386 ;;		_end
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text10
  1391  0000'                    __ptext10:
  1392                           	opt callstack 0
  1393  0000'                    _UARTWrite:
  1394                           	opt callstack 28
  1395                           
  1396                           ;incstack = 0
  1397                           ;UARTWrite@data stored from wreg
  1398  0000' 6E00'              	movwf	UARTWrite@data^0,c
  1399  0002'                    l88:
  1400  0002' A89E               	btfss	158,4,c	;volatile
  1401  0004' EF00' F000'        	goto	u91
  1402  0008' EF00' F000'        	goto	u90
  1403  000C'                    u91:
  1404  000C' EF00' F000'        	goto	l88
  1405  0010'                    u90:
  1406  0010'                    
  1407                           ;UART.c: 28:     TXREG= data;
  1408  0010' C000' FFAD         	movff	UARTWrite@data,4013	;volatile
  1409  0014' 0012               	return		;funcret
  1410  0016'                    __end_of_UARTWrite:
  1411                           	opt callstack 0
  1412                           
  1413 ;; *************** function _UARTConfi *****************
  1414 ;; Defined at:
  1415 ;;		line 7 in file "UART.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  BAUD            2   13[COMRAM] int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    1
  1436 ;; This function calls:
  1437 ;;		___lldiv
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text11
  1444  0000'                    __ptext11:
  1445                           	opt callstack 0
  1446  0000'                    _UARTConfi:
  1447                           	opt callstack 29
  1448  0000'                    
  1449                           ;UART.c: 9:     TRISCbits.RC6=0;
  1450  0000' 9C94               	bcf	148,6,c	;volatile
  1451                           
  1452                           ;UART.c: 10:     TRISCbits.RC7=1;
  1453  0002' 8E94               	bsf	148,7,c	;volatile
  1454  0004'                    
  1455                           ;UART.c: 12:     SPBRG = (unsigned char)((4000000UL/BAUD)/64)-1;
  1456  0004' 0E00               	movlw	0
  1457  0006' 6E00'              	movwf	___lldiv@dividend^0,c
  1458  0008' 0E09               	movlw	9
  1459  000A' 6E00'              	movwf	(___lldiv@dividend+1)^0,c
  1460  000C' 0E3D               	movlw	61
  1461  000E' 6E00'              	movwf	(___lldiv@dividend+2)^0,c
  1462  0010' 0E00               	movlw	0
  1463  0012' 6E00'              	movwf	(___lldiv@dividend+3)^0,c
  1464  0014' C00D' F004'        	movff	UARTConfi@BAUD,___lldiv@divisor
  1465  0018' C00E' F005'        	movff	UARTConfi@BAUD+1,___lldiv@divisor+1
  1466  001C' 0E00               	movlw	0
  1467  001E' BE00'              	btfsc	(___lldiv@divisor+1)^0,7,c
  1468  0020' 0EFF               	movlw	-1
  1469  0022' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  1470  0024' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  1471  0026' EC00' F000'        	call	___lldiv	;wreg free
  1472  002A' 0E07               	movlw	7
  1473  002C' EF00' F000'        	goto	u470
  1474  0030'                    u475:
  1475  0030' 90D8               	bcf	status,0,c
  1476  0032' 3200'              	rrcf	(?___lldiv+3)^0,f,c
  1477  0034' 3200'              	rrcf	(?___lldiv+2)^0,f,c
  1478  0036' 3200'              	rrcf	(?___lldiv+1)^0,f,c
  1479  0038' 3200'              	rrcf	?___lldiv^0,f,c
  1480  003A'                    u470:
  1481  003A' 2EE8               	decfsz	wreg,f,c
  1482  003C' EF00' F000'        	goto	u475
  1483  0040' 0400'              	decf	?___lldiv^0,w,c
  1484  0042' 6EAF               	movwf	175,c	;volatile
  1485  0044'                    
  1486                           ;UART.c: 13:     TXSTAbits.BRGH = 0;
  1487  0044' 94AC               	bcf	172,2,c	;volatile
  1488  0046'                    
  1489                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  1490  0046' 98AC               	bcf	172,4,c	;volatile
  1491  0048'                    
  1492                           ;UART.c: 15:     RCSTAbits.SPEN = 1;
  1493  0048' 8EAB               	bsf	171,7,c	;volatile
  1494  004A'                    
  1495                           ;UART.c: 18:     TXSTAbits.TX9 = 0;
  1496  004A' 9CAC               	bcf	172,6,c	;volatile
  1497  004C'                    
  1498                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  1499  004C' 8AAC               	bsf	172,5,c	;volatile
  1500  004E'                    
  1501                           ;UART.c: 22:     RCSTAbits.RC9 = 0;
  1502  004E' 9CAB               	bcf	171,6,c	;volatile
  1503  0050'                    
  1504                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1505  0050' 88AB               	bsf	171,4,c	;volatile
  1506  0052' 0012               	return		;funcret
  1507  0054'                    __end_of_UARTConfi:
  1508                           	opt callstack 0
  1509                           
  1510 ;; *************** function ___lldiv *****************
  1511 ;; Defined at:
  1512 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  dividend        4    0[COMRAM] unsigned long 
  1515 ;;  divisor         4    4[COMRAM] unsigned long 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  quotient        4    8[COMRAM] unsigned long 
  1518 ;;  counter         1   12[COMRAM] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  4    0[COMRAM] unsigned long 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         8       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1531 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:       13 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_UARTConfi
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text12
  1542  0000'                    __ptext12:
  1543                           	opt callstack 0
  1544  0000'                    ___lldiv:
  1545                           	opt callstack 29
  1546  0000' 0E00               	movlw	0
  1547  0002' 6E00'              	movwf	___lldiv@quotient^0,c
  1548  0004' 0E00               	movlw	0
  1549  0006' 6E00'              	movwf	(___lldiv@quotient+1)^0,c
  1550  0008' 0E00               	movlw	0
  1551  000A' 6E00'              	movwf	(___lldiv@quotient+2)^0,c
  1552  000C' 0E00               	movlw	0
  1553  000E' 6E00'              	movwf	(___lldiv@quotient+3)^0,c
  1554  0010' 5000'              	movf	___lldiv@divisor^0,w,c
  1555  0012' 1000'              	iorwf	(___lldiv@divisor+1)^0,w,c
  1556  0014' 1000'              	iorwf	(___lldiv@divisor+2)^0,w,c
  1557  0016' 1000'              	iorwf	(___lldiv@divisor+3)^0,w,c
  1558  0018' B4D8               	btfsc	status,2,c
  1559  001A' EF00' F000'        	goto	u441
  1560  001E' EF00' F000'        	goto	u440
  1561  0022'                    u441:
  1562  0022' EF00' F000'        	goto	l334
  1563  0026'                    u440:
  1564  0026' 0E01               	movlw	1
  1565  0028' 6E00'              	movwf	___lldiv@counter^0,c
  1566  002A' EF00' F000'        	goto	l1446
  1567  002E'                    l1444:
  1568  002E' 90D8               	bcf	status,0,c
  1569  0030' 3600'              	rlcf	___lldiv@divisor^0,f,c
  1570  0032' 3600'              	rlcf	(___lldiv@divisor+1)^0,f,c
  1571  0034' 3600'              	rlcf	(___lldiv@divisor+2)^0,f,c
  1572  0036' 3600'              	rlcf	(___lldiv@divisor+3)^0,f,c
  1573  0038' 2A00'              	incf	___lldiv@counter^0,f,c
  1574  003A'                    l1446:
  1575  003A' AE00'              	btfss	(___lldiv@divisor+3)^0,7,c
  1576  003C' EF00' F000'        	goto	u451
  1577  0040' EF00' F000'        	goto	u450
  1578  0044'                    u451:
  1579  0044' EF00' F000'        	goto	l1444
  1580  0048'                    u450:
  1581  0048'                    l1448:
  1582  0048' 90D8               	bcf	status,0,c
  1583  004A' 3600'              	rlcf	___lldiv@quotient^0,f,c
  1584  004C' 3600'              	rlcf	(___lldiv@quotient+1)^0,f,c
  1585  004E' 3600'              	rlcf	(___lldiv@quotient+2)^0,f,c
  1586  0050' 3600'              	rlcf	(___lldiv@quotient+3)^0,f,c
  1587  0052' 5000'              	movf	___lldiv@divisor^0,w,c
  1588  0054' 5C00'              	subwf	___lldiv@dividend^0,w,c
  1589  0056' 5000'              	movf	(___lldiv@divisor+1)^0,w,c
  1590  0058' 5800'              	subwfb	(___lldiv@dividend+1)^0,w,c
  1591  005A' 5000'              	movf	(___lldiv@divisor+2)^0,w,c
  1592  005C' 5800'              	subwfb	(___lldiv@dividend+2)^0,w,c
  1593  005E' 5000'              	movf	(___lldiv@divisor+3)^0,w,c
  1594  0060' 5800'              	subwfb	(___lldiv@dividend+3)^0,w,c
  1595  0062' A0D8               	btfss	status,0,c
  1596  0064' EF00' F000'        	goto	u461
  1597  0068' EF00' F000'        	goto	u460
  1598  006C'                    u461:
  1599  006C' EF00' F000'        	goto	l1456
  1600  0070'                    u460:
  1601  0070' 5000'              	movf	___lldiv@divisor^0,w,c
  1602  0072' 5E00'              	subwf	___lldiv@dividend^0,f,c
  1603  0074' 5000'              	movf	(___lldiv@divisor+1)^0,w,c
  1604  0076' 5A00'              	subwfb	(___lldiv@dividend+1)^0,f,c
  1605  0078' 5000'              	movf	(___lldiv@divisor+2)^0,w,c
  1606  007A' 5A00'              	subwfb	(___lldiv@dividend+2)^0,f,c
  1607  007C' 5000'              	movf	(___lldiv@divisor+3)^0,w,c
  1608  007E' 5A00'              	subwfb	(___lldiv@dividend+3)^0,f,c
  1609  0080' 8000'              	bsf	___lldiv@quotient^0,0,c
  1610  0082'                    l1456:
  1611  0082' 90D8               	bcf	status,0,c
  1612  0084' 3200'              	rrcf	(___lldiv@divisor+3)^0,f,c
  1613  0086' 3200'              	rrcf	(___lldiv@divisor+2)^0,f,c
  1614  0088' 3200'              	rrcf	(___lldiv@divisor+1)^0,f,c
  1615  008A' 3200'              	rrcf	___lldiv@divisor^0,f,c
  1616  008C' 2E00'              	decfsz	___lldiv@counter^0,f,c
  1617  008E' EF00' F000'        	goto	l1448
  1618  0092'                    l334:
  1619  0092' C008' F000'        	movff	___lldiv@quotient,?___lldiv
  1620  0096' C009' F001'        	movff	___lldiv@quotient+1,?___lldiv+1
  1621  009A' C00A' F002'        	movff	___lldiv@quotient+2,?___lldiv+2
  1622  009E' C00B' F003'        	movff	___lldiv@quotient+3,?___lldiv+3
  1623  00A2' 0012               	return		;funcret
  1624  00A4'                    __end_of___lldiv:
  1625                           	opt callstack 0
  1626                           
  1627 ;; *************** function _Movimiento *****************
  1628 ;; Defined at:
  1629 ;;		line 8 in file "Movimiento.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2  128[None  ] int 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    4
  1650 ;; This function calls:
  1651 ;;		_PWM
  1652 ;;		__delay_ms
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text13
  1659  0000'                    __ptext13:
  1660                           	opt callstack 0
  1661  0000'                    _Movimiento:
  1662                           	opt callstack 26
  1663  0000'                    
  1664                           ;Movimiento.c: 9:     if(click==1){
  1665  0000' 0400'              	decf	_click^0,w,c
  1666  0002' A4D8               	btfss	status,2,c
  1667  0004' EF00' F000'        	goto	u481
  1668  0008' EF00' F000'        	goto	u480
  1669  000C'                    u481:
  1670  000C' EF00' F000'        	goto	l1510
  1671  0010'                    u480:
  1672  0010'                    
  1673                           ;Movimiento.c: 10:         PWM();
  1674  0010' EC00' F000'        	call	_PWM	;wreg free
  1675  0014'                    
  1676                           ;Movimiento.c: 11:         PORTDbits.RD7=1;
  1677  0014' 8E83               	bsf	131,7,c	;volatile
  1678  0016'                    
  1679                           ;Movimiento.c: 12:         _delay_ms(100);
  1680  0016' 0E00               	movlw	0
  1681  0018' 6E00'              	movwf	(?__delay_ms+1)^0,c
  1682  001A' 0E64               	movlw	100
  1683  001C' 6E00'              	movwf	?__delay_ms^0,c
  1684  001E' EC00' F000'        	call	__delay_ms	;wreg free
  1685  0022'                    
  1686                           ;Movimiento.c: 13:         PORTDbits.RD7=0;
  1687  0022' 9E83               	bcf	131,7,c	;volatile
  1688                           
  1689                           ;Movimiento.c: 15:     }
  1690  0024' EF00' F000'        	goto	l304
  1691  0028'                    l1510:
  1692  0028' 5000'              	movf	_click^0,w,c
  1693  002A' A4D8               	btfss	status,2,c
  1694  002C' EF00' F000'        	goto	u491
  1695  0030' EF00' F000'        	goto	u490
  1696  0034'                    u491:
  1697  0034' EF00' F000'        	goto	l304
  1698  0038'                    u490:
  1699  0038'                    
  1700                           ;Movimiento.c: 17:         PORTDbits.RD7=1;
  1701  0038' 8E83               	bsf	131,7,c	;volatile
  1702  003A'                    
  1703                           ;Movimiento.c: 18:         PWM();
  1704  003A' EC00' F000'        	call	_PWM	;wreg free
  1705  003E'                    
  1706                           ;Movimiento.c: 19:         PORTDbits.RD7=0;
  1707  003E' 9E83               	bcf	131,7,c	;volatile
  1708  0040'                    l304:
  1709  0040' 0012               	return		;funcret
  1710  0042'                    __end_of_Movimiento:
  1711                           	opt callstack 0
  1712                           
  1713 ;; *************** function _PWM *****************
  1714 ;; Defined at:
  1715 ;;		line 17 in file "PWM.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    3
  1736 ;; This function calls:
  1737 ;;		_PWMx
  1738 ;;		_PWMy
  1739 ;; This function is called by:
  1740 ;;		_Movimiento
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text14
  1745  0000'                    __ptext14:
  1746                           	opt callstack 0
  1747  0000'                    _PWM:
  1748                           	opt callstack 26
  1749  0000'                    
  1750                           ;PWM.c: 19:     CoordRelatX=CoordAntX-cord_x;
  1751  0000' 5000'              	movf	_cord_x^0,w,c
  1752  0002' 5C00'              	subwf	_CoordAntX^0,w,c
  1753  0004' 6E00'              	movwf	_CoordRelatX^0,c
  1754  0006' 5000'              	movf	(_cord_x+1)^0,w,c
  1755  0008' 5800'              	subwfb	(_CoordAntX+1)^0,w,c
  1756  000A' 6E00'              	movwf	(_CoordRelatX+1)^0,c
  1757                           
  1758                           ;PWM.c: 20:     CoordRelatX=CoordAntX-cord_x;
  1759  000C' 5000'              	movf	_cord_x^0,w,c
  1760  000E' 5C00'              	subwf	_CoordAntX^0,w,c
  1761  0010' 6E00'              	movwf	_CoordRelatX^0,c
  1762  0012' 5000'              	movf	(_cord_x+1)^0,w,c
  1763  0014' 5800'              	subwfb	(_CoordAntX+1)^0,w,c
  1764  0016' 6E00'              	movwf	(_CoordRelatX+1)^0,c
  1765  0018'                    
  1766                           ;PWM.c: 23:     pasosRecorridos=PWMx(CoordRelatX);
  1767  0018' C008' F002'        	movff	_CoordRelatX,PWMx@distancia
  1768  001C' C009' F003'        	movff	_CoordRelatX+1,PWMx@distancia+1
  1769  0020' EC00' F000'        	call	_PWMx	;wreg free
  1770  0024' C002' F004'        	movff	?_PWMx,_pasosRecorridos
  1771  0028' C003' F005'        	movff	?_PWMx+1,_pasosRecorridos+1
  1772  002C'                    
  1773                           ;PWM.c: 26:     if(CoordRelatX<0) CoordAntX= CoordAntX-pasosRecorridos;
  1774  002C' BE00'              	btfsc	(_CoordRelatX+1)^0,7,c
  1775  002E' EF00' F000'        	goto	u410
  1776  0032' EF00' F000'        	goto	u411
  1777  0036'                    u411:
  1778  0036' EF00' F000'        	goto	l1424
  1779  003A'                    u410:
  1780  003A' 5000'              	movf	_pasosRecorridos^0,w,c
  1781  003C' 5C00'              	subwf	_CoordAntX^0,w,c
  1782  003E' 6E00'              	movwf	_CoordAntX^0,c
  1783  0040' 5000'              	movf	(_pasosRecorridos+1)^0,w,c
  1784  0042' 5800'              	subwfb	(_CoordAntX+1)^0,w,c
  1785  0044' 6E00'              	movwf	(_CoordAntX+1)^0,c
  1786  0046' EF00' F000'        	goto	l1428
  1787  004A'                    l1424:
  1788                           
  1789                           ;PWM.c: 28:         if (CoordRelatX>0) CoordAntX=CoordAntX+pasosRecorridos;
  1790  004A' BE00'              	btfsc	(_CoordRelatX+1)^0,7,c
  1791  004C' EF00' F000'        	goto	u421
  1792  0050' 5000'              	movf	(_CoordRelatX+1)^0,w,c
  1793  0052' E108               	bnz	u420
  1794  0054' 0400'              	decf	_CoordRelatX^0,w,c
  1795  0056' A0D8               	btfss	status,0,c
  1796  0058' EF00' F000'        	goto	u421
  1797  005C' EF00' F000'        	goto	u420
  1798  0060'                    u421:
  1799  0060' EF00' F000'        	goto	l1428
  1800  0064'                    u420:
  1801  0064' 5000'              	movf	_CoordAntX^0,w,c
  1802  0066' 2400'              	addwf	_pasosRecorridos^0,w,c
  1803  0068' 6E00'              	movwf	_CoordAntX^0,c
  1804  006A' 5000'              	movf	(_CoordAntX+1)^0,w,c
  1805  006C' 2000'              	addwfc	(_pasosRecorridos+1)^0,w,c
  1806  006E' 6E00'              	movwf	(_CoordAntX+1)^0,c
  1807  0070'                    l1428:
  1808                           
  1809                           ;PWM.c: 32:     pasosRecorridos=PWMy(CoordRelatY);
  1810  0070' 0E00               	movlw	0
  1811  0072' 6E00'              	movwf	(PWMy@distancia+1)^0,c
  1812  0074' 0E00               	movlw	0
  1813  0076' 6E00'              	movwf	PWMy@distancia^0,c
  1814  0078' EC00' F000'        	call	_PWMy	;wreg free
  1815  007C' C002' F004'        	movff	?_PWMy,_pasosRecorridos
  1816  0080' C003' F005'        	movff	?_PWMy+1,_pasosRecorridos+1
  1817  0084'                    
  1818                           ;PWM.c: 39:         if (CoordAntY>0) CoordAntY=CoordAntY+pasosRecorridos;
  1819  0084' 5000'              	movf	_CoordAntY^0,w,c
  1820  0086' 1000'              	iorwf	(_CoordAntY+1)^0,w,c
  1821  0088' B4D8               	btfsc	status,2,c
  1822  008A' EF00' F000'        	goto	u431
  1823  008E' EF00' F000'        	goto	u430
  1824  0092'                    u431:
  1825  0092' EF00' F000'        	goto	l198
  1826  0096'                    u430:
  1827  0096' 5000'              	movf	_CoordAntY^0,w,c
  1828  0098' 2400'              	addwf	_pasosRecorridos^0,w,c
  1829  009A' 6E00'              	movwf	_CoordAntY^0,c
  1830  009C' 5000'              	movf	(_CoordAntY+1)^0,w,c
  1831  009E' 2000'              	addwfc	(_pasosRecorridos+1)^0,w,c
  1832  00A0' 6E00'              	movwf	(_CoordAntY+1)^0,c
  1833  00A2'                    l198:
  1834  00A2' 0012               	return		;funcret
  1835  00A4'                    __end_of_PWM:
  1836                           	opt callstack 0
  1837                           
  1838 ;; *************** function _PWMy *****************
  1839 ;; Defined at:
  1840 ;;		line 58 in file "PWM.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  distancia       2    2[COMRAM] int 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  pasos           2    4[COMRAM] int 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    2[COMRAM] int 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1854 ;;      Params:         2       0       0       0       0       0       0       0       0
  1855 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1857 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:        4 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    2
  1861 ;; This function calls:
  1862 ;;		_ContarPulsos
  1863 ;; This function is called by:
  1864 ;;		_PWM
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text15
  1869  0000'                    __ptext15:
  1870                           	opt callstack 0
  1871  0000'                    _PWMy:
  1872                           	opt callstack 26
  1873  0000'                    
  1874                           ;PWM.c: 59:     if (distancia<0){
  1875  0000' BE00'              	btfsc	(PWMy@distancia+1)^0,7,c
  1876  0002' EF00' F000'        	goto	u390
  1877  0006' EF00' F000'        	goto	u391
  1878  000A'                    u391:
  1879  000A' EF00' F000'        	goto	l206
  1880  000E'                    u390:
  1881  000E'                    
  1882                           ;PWM.c: 60:         PORTDbits.RD0=0;
  1883  000E' 9083               	bcf	131,0,c	;volatile
  1884                           
  1885                           ;PWM.c: 61:         PORTDbits.RD1=1;
  1886  0010' 8283               	bsf	131,1,c	;volatile
  1887  0012'                    
  1888                           ;PWM.c: 62:         distancia=distancia*(-1);
  1889  0012' 6C00'              	negf	PWMy@distancia^0,c
  1890  0014' 1E00'              	comf	(PWMy@distancia+1)^0,f,c
  1891  0016' B0D8               	btfsc	status,0,c
  1892  0018' 2A00'              	incf	(PWMy@distancia+1)^0,f,c
  1893                           
  1894                           ;PWM.c: 63:     }
  1895  001A' EF00' F000'        	goto	l1386
  1896  001E'                    l206:
  1897                           
  1898                           ;PWM.c: 65:         PORTDbits.RD0=1;
  1899  001E' 8083               	bsf	131,0,c	;volatile
  1900                           
  1901                           ;PWM.c: 66:         PORTDbits.RD1=1;
  1902  0020' 8283               	bsf	131,1,c	;volatile
  1903  0022'                    l1386:
  1904                           
  1905                           ;PWM.c: 68:    int pasos= ContarPulsos(distancia);
  1906  0022' C002' F000'        	movff	PWMy@distancia,ContarPulsos@pasos
  1907  0026' C003' F001'        	movff	PWMy@distancia+1,ContarPulsos@pasos+1
  1908  002A' EC00' F000'        	call	_ContarPulsos	;wreg free
  1909  002E' C000' F004'        	movff	?_ContarPulsos,PWMy@pasos
  1910  0032' C001' F005'        	movff	?_ContarPulsos+1,PWMy@pasos+1
  1911  0036'                    
  1912                           ;PWM.c: 69:     return(pasos);
  1913  0036' C004' F002'        	movff	PWMy@pasos,?_PWMy
  1914  003A' C005' F003'        	movff	PWMy@pasos+1,?_PWMy+1
  1915  003E' 0012               	return		;funcret
  1916  0040'                    __end_of_PWMy:
  1917                           	opt callstack 0
  1918                           
  1919 ;; *************** function _PWMx *****************
  1920 ;; Defined at:
  1921 ;;		line 44 in file "PWM.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  distancia       2    2[COMRAM] int 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  pasos           2    4[COMRAM] int 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2    2[COMRAM] int 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1935 ;;      Params:         2       0       0       0       0       0       0       0       0
  1936 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1938 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1939 ;;Total ram usage:        4 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    2
  1942 ;; This function calls:
  1943 ;;		_ContarPulsos
  1944 ;; This function is called by:
  1945 ;;		_PWM
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text16
  1950  0000'                    __ptext16:
  1951                           	opt callstack 0
  1952  0000'                    _PWMx:
  1953                           	opt callstack 26
  1954  0000'                    
  1955                           ;PWM.c: 45:     if (distancia<0){
  1956  0000' BE00'              	btfsc	(PWMx@distancia+1)^0,7,c
  1957  0002' EF00' F000'        	goto	u380
  1958  0006' EF00' F000'        	goto	u381
  1959  000A'                    u381:
  1960  000A' EF00' F000'        	goto	l201
  1961  000E'                    u380:
  1962  000E'                    
  1963                           ;PWM.c: 46:         PORTDbits.RD0=0;
  1964  000E' 9083               	bcf	131,0,c	;volatile
  1965                           
  1966                           ;PWM.c: 47:         PORTDbits.RD1=0;
  1967  0010' 9283               	bcf	131,1,c	;volatile
  1968  0012'                    
  1969                           ;PWM.c: 48:         distancia=distancia*(-1);
  1970  0012' 6C00'              	negf	PWMx@distancia^0,c
  1971  0014' 1E00'              	comf	(PWMx@distancia+1)^0,f,c
  1972  0016' B0D8               	btfsc	status,0,c
  1973  0018' 2A00'              	incf	(PWMx@distancia+1)^0,f,c
  1974                           
  1975                           ;PWM.c: 49:     }
  1976  001A' EF00' F000'        	goto	l1374
  1977  001E'                    l201:
  1978                           
  1979                           ;PWM.c: 51:         PORTDbits.RD0=1;
  1980  001E' 8083               	bsf	131,0,c	;volatile
  1981                           
  1982                           ;PWM.c: 52:         PORTDbits.RD1=1;
  1983  0020' 8283               	bsf	131,1,c	;volatile
  1984  0022'                    l1374:
  1985                           
  1986                           ;PWM.c: 54:     int pasos= ContarPulsos(distancia);
  1987  0022' C002' F000'        	movff	PWMx@distancia,ContarPulsos@pasos
  1988  0026' C003' F001'        	movff	PWMx@distancia+1,ContarPulsos@pasos+1
  1989  002A' EC00' F000'        	call	_ContarPulsos	;wreg free
  1990  002E' C000' F004'        	movff	?_ContarPulsos,PWMx@pasos
  1991  0032' C001' F005'        	movff	?_ContarPulsos+1,PWMx@pasos+1
  1992  0036'                    
  1993                           ;PWM.c: 55:     return(pasos);
  1994  0036' C004' F002'        	movff	PWMx@pasos,?_PWMx
  1995  003A' C005' F003'        	movff	PWMx@pasos+1,?_PWMx+1
  1996  003E' 0012               	return		;funcret
  1997  0040'                    __end_of_PWMx:
  1998                           	opt callstack 0
  1999                           
  2000 ;; *************** function _ContarPulsos *****************
  2001 ;; Defined at:
  2002 ;;		line 71 in file "PWM.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  pasos           2    0[COMRAM] int 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2    0[COMRAM] int 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2016 ;;      Params:         2       0       0       0       0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2019 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		_OneShot
  2025 ;;		_ResetOneShot
  2026 ;; This function is called by:
  2027 ;;		_PWMx
  2028 ;;		_PWMy
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text17
  2033  0000'                    __ptext17:
  2034                           	opt callstack 0
  2035  0000'                    _ContarPulsos:
  2036                           	opt callstack 26
  2037  0000'                    
  2038                           ;PWM.c: 72:     PasosActuales=0;
  2039  0000' 0E00               	movlw	0
  2040  0002' 6E00'              	movwf	(_PasosActuales+1)^0,c
  2041  0004' 0E00               	movlw	0
  2042  0006' 6E00'              	movwf	_PasosActuales^0,c
  2043                           
  2044                           ;PWM.c: 73:     ons=0;
  2045  0008' 0E00               	movlw	0
  2046  000A' 6E00'              	movwf	(_ons+1)^0,c
  2047  000C' 0E00               	movlw	0
  2048  000E' 6E00'              	movwf	_ons^0,c
  2049  0010'                    
  2050                           ;PWM.c: 74:     PORTDbits.RD2=0;
  2051  0010' 9483               	bcf	131,2,c	;volatile
  2052                           
  2053                           ;PWM.c: 75:     while(PasosActuales<= pasos)
  2054  0012' EF00' F000'        	goto	l1346
  2055  0016'                    l212:
  2056                           
  2057                           ;PWM.c: 76:     {;PWM.c: 77:         if (PORTCbits.CCP1==1) OneShot();
  2058  0016' A482               	btfss	130,2,c	;volatile
  2059  0018' EF00' F000'        	goto	u341
  2060  001C' EF00' F000'        	goto	u340
  2061  0020'                    u341:
  2062  0020' EF00' F000'        	goto	l1342
  2063  0024'                    u340:
  2064  0024' EC00' F000'        	call	_OneShot	;wreg free
  2065  0028'                    l1342:
  2066                           
  2067                           ;PWM.c: 78:         if(ons==1) ResetOneShot();
  2068  0028' 0400'              	decf	_ons^0,w,c
  2069  002A' 1000'              	iorwf	(_ons+1)^0,w,c
  2070  002C' A4D8               	btfss	status,2,c
  2071  002E' EF00' F000'        	goto	u351
  2072  0032' EF00' F000'        	goto	u350
  2073  0036'                    u351:
  2074  0036' EF00' F000'        	goto	l1346
  2075  003A'                    u350:
  2076  003A' EC00' F000'        	call	_ResetOneShot	;wreg free
  2077  003E'                    l1346:
  2078                           
  2079                           ;PWM.c: 75:     while(PasosActuales<= pasos)
  2080  003E' 5000'              	movf	_PasosActuales^0,w,c
  2081  0040' 5C00'              	subwf	ContarPulsos@pasos^0,w,c
  2082  0042' 5000'              	movf	(_PasosActuales+1)^0,w,c
  2083  0044' 5800'              	subwfb	(ContarPulsos@pasos+1)^0,w,c
  2084  0046' B0D8               	btfsc	status,0,c
  2085  0048' EF00' F000'        	goto	u361
  2086  004C' EF00' F000'        	goto	u360
  2087  0050'                    u361:
  2088  0050' EF00' F000'        	goto	l212
  2089  0054'                    u360:
  2090  0054'                    
  2091                           ;PWM.c: 81:     PORTDbits.RD2=1;
  2092  0054' 8483               	bsf	131,2,c	;volatile
  2093                           
  2094                           ;PWM.c: 82:     return(PasosActuales);
  2095  0056' C002' F000'        	movff	_PasosActuales,?_ContarPulsos
  2096  005A' C003' F001'        	movff	_PasosActuales+1,?_ContarPulsos+1
  2097  005E' 0012               	return		;funcret
  2098  0060'                    __end_of_ContarPulsos:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _ResetOneShot *****************
  2102 ;; Defined at:
  2103 ;;		line 93 in file "PWM.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_ContarPulsos
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text18
  2131  0000'                    __ptext18:
  2132                           	opt callstack 0
  2133  0000'                    _ResetOneShot:
  2134                           	opt callstack 26
  2135  0000'                    
  2136                           ;PWM.c: 94:     if(PORTCbits.CCP1==1)return;
  2137  0000' A482               	btfss	130,2,c	;volatile
  2138  0002' EF00' F000'        	goto	u31
  2139  0006' EF00' F000'        	goto	u30
  2140  000A'                    u31:
  2141  000A' EF00' F000'        	goto	l224
  2142  000E'                    u30:
  2143  000E' EF00' F000'        	goto	l225
  2144  0012'                    l224:
  2145                           
  2146                           ;PWM.c: 95:     if(PORTCbits.CCP1==0)ons=0;
  2147  0012' B482               	btfsc	130,2,c	;volatile
  2148  0014' EF00' F000'        	goto	u41
  2149  0018' EF00' F000'        	goto	u40
  2150  001C'                    u41:
  2151  001C' EF00' F000'        	goto	l225
  2152  0020'                    u40:
  2153  0020' 0E00               	movlw	0
  2154  0022' 6E00'              	movwf	(_ons+1)^0,c
  2155  0024' 0E00               	movlw	0
  2156  0026' 6E00'              	movwf	_ons^0,c
  2157  0028'                    l225:
  2158  0028' 0012               	return		;funcret
  2159  002A'                    __end_of_ResetOneShot:
  2160                           	opt callstack 0
  2161                           
  2162 ;; *************** function _OneShot *****************
  2163 ;; Defined at:
  2164 ;;		line 84 in file "PWM.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_ContarPulsos
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text19
  2192  0000'                    __ptext19:
  2193                           	opt callstack 0
  2194  0000'                    _OneShot:
  2195                           	opt callstack 26
  2196  0000'                    
  2197                           ;PWM.c: 85:     if(ons==1) return;
  2198  0000' 0400'              	decf	_ons^0,w,c
  2199  0002' 1000'              	iorwf	(_ons+1)^0,w,c
  2200  0004' A4D8               	btfss	status,2,c
  2201  0006' EF00' F000'        	goto	u11
  2202  000A' EF00' F000'        	goto	u10
  2203  000E'                    u11:
  2204  000E' EF00' F000'        	goto	l219
  2205  0012'                    u10:
  2206  0012' EF00' F000'        	goto	l220
  2207  0016'                    l219:
  2208                           
  2209                           ;PWM.c: 86:     if(PORTCbits.CCP1==1)
  2210  0016' A482               	btfss	130,2,c	;volatile
  2211  0018' EF00' F000'        	goto	u21
  2212  001C' EF00' F000'        	goto	u20
  2213  0020'                    u21:
  2214  0020' EF00' F000'        	goto	l220
  2215  0024'                    u20:
  2216  0024'                    
  2217                           ;PWM.c: 87:     {;PWM.c: 88:         PasosActuales++;
  2218  0024' 4A00'              	infsnz	_PasosActuales^0,f,c
  2219  0026' 2A00'              	incf	(_PasosActuales+1)^0,f,c
  2220  0028'                    
  2221                           ;PWM.c: 89:         ons=1;
  2222  0028' 0E00               	movlw	0
  2223  002A' 6E00'              	movwf	(_ons+1)^0,c
  2224  002C' 0E01               	movlw	1
  2225  002E' 6E00'              	movwf	_ons^0,c
  2226  0030'                    l220:
  2227  0030' 0012               	return		;funcret
  2228  0032'                    __end_of_OneShot:
  2229                           	opt callstack 0
  2230  0000                     
  2231                           	psect	rparam
  2232  0000                     tosu	equ	0xFFF
  2233                           tosh	equ	0xFFE
  2234                           tosl	equ	0xFFD
  2235                           stkptr	equ	0xFFC
  2236                           pclatu	equ	0xFFB
  2237                           pclath	equ	0xFFA
  2238                           pcl	equ	0xFF9
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           prodh	equ	0xFF4
  2244                           prodl	equ	0xFF3
  2245                           indf0	equ	0xFEF
  2246                           postinc0	equ	0xFEE
  2247                           postdec0	equ	0xFED
  2248                           preinc0	equ	0xFEC
  2249                           plusw0	equ	0xFEB
  2250                           fsr0h	equ	0xFEA
  2251                           fsr0l	equ	0xFE9
  2252                           wreg	equ	0xFE8
  2253                           indf1	equ	0xFE7
  2254                           postinc1	equ	0xFE6
  2255                           postdec1	equ	0xFE5
  2256                           preinc1	equ	0xFE4
  2257                           plusw1	equ	0xFE3
  2258                           fsr1h	equ	0xFE2
  2259                           fsr1l	equ	0xFE1
  2260                           bsr	equ	0xFE0
  2261                           indf2	equ	0xFDF
  2262                           postinc2	equ	0xFDE
  2263                           postdec2	equ	0xFDD
  2264                           preinc2	equ	0xFDC
  2265                           plusw2	equ	0xFDB
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _verification->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite
    _UARTConfi->___lldiv
    _PWM->_PWMx
    _PWM->_PWMy
    _PWMy->_ContarPulsos
    _PWMx->_ContarPulsos

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2286
                         _Movimiento
                          _UARTConfi
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    1194
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _end                                                  2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0     894
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (3) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (3) _UARTWrite                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTConfi                                            2     0      2     412
                                             13 COMRAM     2     0      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                           0     0      0     680
                                _PWM
                          __delay_ms
 ---------------------------------------------------------------------------------
 (2) __delay_ms                                            2     0      2       0
 ---------------------------------------------------------------------------------
 (2) _PWM                                                  0     0      0     680
                               _PWMx
                               _PWMy
 ---------------------------------------------------------------------------------
 (3) _PWMy                                                 4     2      2     340
                                              2 COMRAM     4     2      2
                       _ContarPulsos
 ---------------------------------------------------------------------------------
 (3) _PWMx                                                 4     2      2     340
                                              2 COMRAM     4     2      2
                       _ContarPulsos
 ---------------------------------------------------------------------------------
 (4) _ContarPulsos                                         2     0      2     174
                                              0 COMRAM     2     0      2
                            _OneShot
                       _ResetOneShot
 ---------------------------------------------------------------------------------
 (5) _ResetOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _OneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Movimiento
     _PWM
       _PWMx
         _ContarPulsos
           _OneShot
           _ResetOneShot
       _PWMy
         _ContarPulsos
           _OneShot
           _ResetOneShot
     __delay_ms
   _UARTConfi
     ___lldiv
   _verification
     _Coord_Validated
       _UARTWrite
     _Ins_Validated
       _UARTWrite
     _Par_Validated
       _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
     _end
       _UARTWrite
     _start
       _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      55       1       89.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      20        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 01 14:17:58 2019

                      l32 00003A                        l33 00003E                        l42 000072  
                      l38 000074                        l49 000082                        l65 00003A  
                      l58 00007A                        l66 00003C                        l91 000014  
                      l85 000052                        l94 000000                        l88 000002  
                      l97 000010                        u10 000012                        u11 00000E  
                      u20 000024                        u21 000020                        u30 00000E  
                      u31 00000A                        u40 000020                        u41 00001C  
                      u50 00000E                        u51 00000A                        u90 000010  
                      u91 00000C                       l201 00001E                       l203 00003E  
                     l220 000030                       l212 000016                       l206 00001E  
                     l118 0000E2                       l215 000054                       l224 000012  
                     l216 00005E                       l208 00003E                       l304 000040  
                     l225 000028                       l219 000016                       l147 00001C  
                     l341 0000A2                       l334 000092                       l264 00007A  
                     l198 0000A2                       l980 000000                       l990 000000  
                     l984 000024                       l986 000028                       l994 000020  
                     l998 000000                       u200 00007C                       u201 000078  
                     u210 00001A                       u130 00003A                       u211 000016  
                     u131 000036                       u220 000030                       u221 00002C  
                     u230 000074                       u150 000016                       u231 000070  
                     u151 000012                       u160 000028                       u400 000044  
                     u240 00003A                       u161 000024                       u401 000040  
                     u241 000036                       u410 00003A                       u170 00006C  
                     u411 000036                       u171 000068                       u340 000024  
                     u420 000064                       u180 000016                       u341 000020  
                     u421 000060                       u181 000012                       u350 00003A  
                     u430 000096                       u190 000036                       u351 000036  
                     u431 000092                       u191 000032                       u360 000054  
                     u440 000026                       u361 000050                       u441 000022  
                     u450 000048                       u370 00003E                       u451 000044  
                     u371 00003A                       u380 00000E                       u460 000070  
                     u381 00000A                       u461 00006C                       u390 00000E  
                     u470 00003A                       u391 00000A                       u480 000010  
                     u481 00000C                       u490 000038                       u491 000034  
                     u475 000030                       _PWM 000000            ??_ContarPulsos 000002  
                     _e_c 000000                       _cmd 000000                       _end 000000  
                     _ons 000000                       wreg 000FE8              __CFG_LVP$OFF 000000  
                    ?_PWM 000000               coord@buffer 00000E              __CFG_WDT$OFF 000000  
                    l1000 00000E                      l1110 000028                      l1016 000002  
                    l1200 000058                      l1112 00002C                      l1104 000000  
                    l1018 000010                      l1202 000074                      l1130 00006C  
                    l1106 000004                      l1204 000078                      l1140 000016  
                    l1132 000070                      l1124 00003A                      l1108 000016  
                    l1150 000036                      l1142 00001E                      l1126 00004C  
                    l1118 000032                      l1214 000008                      l1070 000008  
                    l1136 000000                      l1128 000050                      l1216 00001A  
                    l1208 000000                      l1072 00001A                      l1064 000000  
                    l1170 00007C                      l1138 000004                      l1410 000070  
                    l1402 000012                      l1218 00001E                      l1074 00001E  
                    l1340 000024                      l1420 00002C                      l1500 000000  
                    l1180 00001A                      l1172 000080                      l1164 00004A  
                    l1148 000024                      l1412 000072                      l1404 000024  
                    l1076 00003C                      l1342 000028                      l1422 00003A  
                    l1502 000010                      l1510 000028                      l1182 000030  
                    l1190 00003A                      l1166 00005C                      l1158 000042  
                    l1406 000028                      l1344 00003A                      l1336 000000  
                    l1432 000084                      l1424 00004A                      l1416 000000  
                    l1512 000038                      l1504 000014                      l1440 000010  
                    l1184 000034                      l1176 000000                      l1168 000060  
                    l1360 000022                      l1408 000044                      l1520 000004  
                    l1346 00003E                      l1338 000010                      l1370 00000E  
                    l1434 000096                      l1426 000064                      l1418 000018  
                    l1514 00003A                      l1506 000016                      l1450 000052  
                    l1442 000026                      l1178 000004                      l1362 00003E  
                    l1354 000008                      l1522 000010                      ?_cmd 000000  
                    l1372 000012                      l1380 000000                      l1428 000070  
                    l1516 00003E                      l1508 000022                      l1452 000070  
                    l1444 00002E                      l1460 000000                      l1196 000042  
                    l1364 000056                      l1356 00000E                      l1348 000000  
                    l1532 000044                      l1524 000014                      l1374 000022  
                    l1382 00000E                      l1454 000080                      l1446 00003A  
                    l1438 000000                      l1470 00004A                      l1462 000004  
                    l1198 000054                      l1366 000096                      l1358 00001E  
                    l1526 000018                      l1518 000000                      l1376 000036  
                    l1368 000000                      l1384 000012                      l1456 000082  
                    l1448 000048                      l1472 00004C                      l1464 000044  
                    l1392 000000                      l1480 000008                      l1386 000022  
                    l1458 00008C                      l1474 00004E                      l1466 000046  
                    l1394 000006                      l1490 000026                      l1482 00000E  
                    l1388 000036                      l1476 000050                      l1468 000048  
                    l1396 00000A                      l1484 000014                      ?_end 000000  
                    l1486 00001A                      l1494 00002E                      l1478 000000  
                    l1488 000020                      _RCIF 007CF5                      _PWMx 000000  
                    _PWMy 000000                      _Par1 000016                      _Par2 000014  
                    cmd@i 00001A                      _main 000000                      _init 00000D  
                    end@i 000001                      _okay 00001C                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
       ??_Coord_Validated 000001                      prodh 000FF4                      prodl 000FF3  
                    start 000000*             ___param_bank 000000                     ??_PWM 000006  
         __end_of_OneShot 000032             _Ins_Validated 000000                     ??_cmd 00001A  
                   ??_end 000001             __CFG_PLLDIV$2 000000                     ?_PWMx 000002  
                   ?_PWMy 000002                     ?_main 000000           __end_of___lldiv 0000A4  
                   _RCREG 000FAE             _Par_Validated 000000                     _SPBRG 000FAF  
                   _PORTC 000F82                     _TRISC 000F94                     _TXREG 000FAD  
      __size_of_UARTConfi 000000                     _Error 000017          __end_of_UARTRead 000012  
      __size_of_UARTWrite 000000                     _click 00000E                     _coord 000000  
                   _start 000000                     tablat 000FF5                     status 000FD8  
          __CFG_MCLRE$OFF 000000              __end_of_PWMx 000040              __end_of_PWMy 000040  
         __initialization 000000              __end_of_main 000020            ?_Ins_Validated 000000  
                  ??_PWMx 000004                    ??_PWMy 000004                    ??_main 00001E  
          ?_Par_Validated 000000             __activetblptr 000002                    ?_coord 000000  
                  ?_start 000000                    _OSCCON 000FD3                 ??_OneShot 000000  
    __end_of_ContarPulsos 000060         __end_of_UARTConfi 000054                _Movimiento 000000  
             _CoordRelatX 000008               _CoordRelatY 000006         __end_of_UARTWrite 000016  
               ??___lldiv 000008                    _cord_x 000012                    _cord_y 000010  
                  _letter 000015                    clear_0 000026                    coord@L 000002  
                  coord@i 000018                    coord@x 000004                    coord@y 000006  
            __pdataCOMRAM 000000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    start@i 000001                __accesstop 000000* 
 __end_of__initialization 00002C           __CFG_PBADEN$OFF 000000             ___rparam_used 000001  
         ??_Ins_Validated 000001            __pcstackCOMRAM 000000                 ?_UARTRead 000000  
           __end_of_coord 0000E4             __end_of_start 000040           ??_Par_Validated 000001  
           ?_ResetOneShot 000000             _PasosActuales 000002           _Coord_Validated 000000  
                 ??_coord 00000A                   ??_start 000001               ?_Movimiento 000000  
              ??_UARTRead 000000            ??_ResetOneShot 000000          Coord_Validated@i 000001  
   __size_of_ContarPulsos 000000                   _OneShot 000000                   __Hparam 000000  
                 __Lparam 000000                   ___lldiv 000000                   __pcinit 000000  
                 __ramtop 000000*                  __ptext0 000000                   __ptext1 000000  
                 __ptext2 000000                   __ptext3 000000                   __ptext4 000000  
                 __ptext5 000000                   __ptext6 000000                   __ptext7 000000  
                 __ptext8 000000                   __ptext9 000000   __end_of_Coord_Validated 00007C  
            __size_of_PWM 000000                 PWMx@pasos 000004              __size_of_cmd 000000  
            __size_of_end 000000                 PWMy@pasos 000004              _ContarPulsos 000000  
                 coord@P1 000000                   coord@P2 000008       __size_of_Movimiento 000000  
    end_of_initialization 00002C             __Lmediumconst 000000*          ___lldiv@divisor 000004  
         ___lldiv@counter 00000C                 _RCSTAbits 000FAB                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _UARTConfi 000000                 _UARTWrite 000000                 _PORTCbits 000F82  
               _PORTDbits 000F83                 _TRISCbits 000F94             ?_verification 000000  
               _TXSTAbits 000FAC      __end_of_ResetOneShot 00002A                ?_UARTConfi 00000D  
           __pidataCOMRAM 000000                 _CoordAntX 00000C                 _CoordAntY 00000A  
       __size_of_UARTRead 000000                ?_UARTWrite 000000          ?_Coord_Validated 000000  
     start_initialization 000000               __end_of_PWM 0000A4               __end_of_cmd 000076  
             __end_of_end 00003E            ??_verification 00001C             UARTConfi@BAUD 00000D  
               _NextState 00000F              ??_Movimiento 000006     __end_of_Ins_Validated 000084  
   __end_of_Par_Validated 000074               __pbssCOMRAM 000000                 __delay_ms 000000* 
      __end_of_Movimiento 000042                  ?_OneShot 000000                  ?___lldiv 000000  
             ??_UARTConfi 00000F               ??_UARTWrite 000000                ?__delay_ms 000000  
          __size_of_coord 000000     __size_of_ResetOneShot 000000            __size_of_start 000000  
                _PIR1bits 000F9E                  _UARTRead 000000      __end_of_verification 00007C  
            _ResetOneShot 000000                 coord@read 000017             UARTWrite@data 000000  
               copy_data0 000014             PWMx@distancia 000002                  __Hrparam 000000* 
        __size_of_OneShot 000000                  __Lrparam 000000*            PWMy@distancia 000002  
        __size_of___lldiv 000000         ContarPulsos@pasos 000000     __CFG_FOSC$INTOSCIO_EC 000000  
             ??__delay_ms 000000                  __ptext10 000000                  __ptext11 000000  
                __ptext12 000000                  __ptext13 000000                  __ptext14 000000  
                __ptext15 000000                  __ptext16 000000                  __ptext17 000000  
                __ptext18 000000                  __ptext19 000000            Ins_Validated@i 000001  
           __size_of_PWMx 000000             __size_of_PWMy 000000             __size_of_main 000000  
          Par_Validated@i 000001  __size_of_Coord_Validated 000000          ___lldiv@dividend 000000  
   __size_of_verification 000000          ___lldiv@quotient 000008             ?_ContarPulsos 000000  
  __size_of_Ins_Validated 000000              _verification 000000           _pasosRecorridos 000004  
  __size_of_Par_Validated 000000  
