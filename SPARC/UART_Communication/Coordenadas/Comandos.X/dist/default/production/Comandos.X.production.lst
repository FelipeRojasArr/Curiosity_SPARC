

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 13:22:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  007A0B                     __pidataCOMRAM:
    65                           	opt callstack 0
    66                           
    67                           ;initializer for _init
    68  007A0B  57                 	db	87
    69  007A0C  61                 	db	97
    70  007A0D  69                 	db	105
    71  007A0E  74                 	db	116
    72  007A0F  69                 	db	105
    73  007A10  6E                 	db	110
    74  007A11  67                 	db	103
    75  007A12  2E                 	db	46
    76  007A13  2E                 	db	46
    77  007A14  2E                 	db	46
    78                           
    79                           ;initializer for _Error
    80  007A15  45                 	db	69
    81  007A16  72                 	db	114
    82  007A17  72                 	db	114
    83  007A18  6F                 	db	111
    84  007A19  72                 	db	114
    85                           
    86                           ;initializer for _okay
    87  007A1A  4F                 	db	79
    88  007A1B  6B                 	db	107
    89  007A1C  61                 	db	97
    90  007A1D  79                 	db	121
    91                           
    92                           	psect	idataBANK0
    93  0079EB                     __pidataBANK0:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for _e_c
    97  0079EB  45                 	db	69
    98  0079EC  6E                 	db	110
    99  0079ED  74                 	db	116
   100  0079EE  65                 	db	101
   101  0079EF  72                 	db	114
   102  0079F0  5F                 	db	95
   103  0079F1  63                 	db	99
   104  0079F2  6F                 	db	111
   105  0079F3  6D                 	db	109
   106  0079F4  6D                 	db	109
   107  0079F5  61                 	db	97
   108  0079F6  6E                 	db	110
   109  0079F7  64                 	db	100
   110  0000                     _PORTCbits	set	3970
   111  0000                     _PORTDbits	set	3971
   112  0000                     _TRISC	set	3988
   113  0000                     _OSCCON	set	4051
   114  0000                     _RCREG	set	4014
   115  0000                     _TXREG	set	4013
   116  0000                     _PIR1bits	set	3998
   117  0000                     _RCSTAbits	set	4011
   118  0000                     _TXSTAbits	set	4012
   119  0000                     _SPBRG	set	4015
   120  0000                     _TRISCbits	set	3988
   121  0000                     _PORTC	set	3970
   122  0000                     _RCIF	set	31989
   123                           
   124                           ; #config settings
   125  0000                     
   126                           	psect	cinit
   127  007ACE                     __pcinit:
   128                           	opt callstack 0
   129  007ACE                     start_initialization:
   130                           	opt callstack 0
   131  007ACE                     __initialization:
   132                           	opt callstack 0
   133                           
   134                           ; Initialize objects allocated to BANK0 (13 bytes)
   135                           ; load TBLPTR registers with __pidataBANK0
   136  007ACE  0EEB               	movlw	low __pidataBANK0
   137  007AD0  6EF6               	movwf	tblptrl,c
   138  007AD2  0E79               	movlw	high __pidataBANK0
   139  007AD4  6EF7               	movwf	tblptrh,c
   140  007AD6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   141  007AD8  6EF8               	movwf	tblptru,c
   142  007ADA  EE00  F060         	lfsr	0,__pdataBANK0
   143  007ADE  EE10 F00D          	lfsr	1,13
   144  007AE2                     copy_data0:
   145  007AE2  0009               	tblrd		*+
   146  007AE4  CFF5 FFEE          	movff	tablat,postinc0
   147  007AE8  50E5               	movf	postdec1,w,c
   148  007AEA  50E1               	movf	fsr1l,w,c
   149  007AEC  E1FA               	bnz	copy_data0
   150                           
   151                           ; Initialize objects allocated to COMRAM (19 bytes)
   152                           ; load TBLPTR registers with __pidataCOMRAM
   153  007AEE  0E0B               	movlw	low __pidataCOMRAM
   154  007AF0  6EF6               	movwf	tblptrl,c
   155  007AF2  0E7A               	movlw	high __pidataCOMRAM
   156  007AF4  6EF7               	movwf	tblptrh,c
   157  007AF6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   158  007AF8  6EF8               	movwf	tblptru,c
   159  007AFA  EE00  F04A         	lfsr	0,__pdataCOMRAM
   160  007AFE  EE10 F013          	lfsr	1,19
   161  007B02                     copy_data1:
   162  007B02  0009               	tblrd		*+
   163  007B04  CFF5 FFEE          	movff	tablat,postinc0
   164  007B08  50E5               	movf	postdec1,w,c
   165  007B0A  50E1               	movf	fsr1l,w,c
   166  007B0C  E1FA               	bnz	copy_data1
   167                           
   168                           ; Clear objects allocated to COMRAM (43 bytes)
   169  007B0E  EE00  F001         	lfsr	0,__pbssCOMRAM
   170  007B12  0E2B               	movlw	43
   171  007B14                     clear_0:
   172  007B14  6AEE               	clrf	postinc0,c
   173  007B16  06E8               	decf	wreg,f,c
   174  007B18  E1FD               	bnz	clear_0
   175  007B1A                     end_of_initialization:
   176                           	opt callstack 0
   177  007B1A                     __end_of__initialization:
   178                           	opt callstack 0
   179  007B1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  007B1C  6EF8               	movwf	tblptru,c
   181  007B1E  0100               	movlb	0
   182  007B20  EF1A  F03D         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000001                     __pbssCOMRAM:
   186                           	opt callstack 0
   187  000001                     _ons:
   188                           	opt callstack 0
   189  000001                     	ds	2
   190  000003                     _LedIsOn1:
   191                           	opt callstack 0
   192  000003                     	ds	2
   193  000005                     _LedIsOn2:
   194                           	opt callstack 0
   195  000005                     	ds	2
   196  000007                     _PasosActualesB:
   197                           	opt callstack 0
   198  000007                     	ds	2
   199  000009                     _PasosActuales:
   200                           	opt callstack 0
   201  000009                     	ds	2
   202  00000B                     _pasosB:
   203                           	opt callstack 0
   204  00000B                     	ds	2
   205  00000D                     _pasosA:
   206                           	opt callstack 0
   207  00000D                     	ds	2
   208  00000F                     _dirB:
   209                           	opt callstack 0
   210  00000F                     	ds	2
   211  000011                     _dirA:
   212                           	opt callstack 0
   213  000011                     	ds	2
   214  000013                     _MovMotorB:
   215                           	opt callstack 0
   216  000013                     	ds	2
   217  000015                     _MovMotorA:
   218                           	opt callstack 0
   219  000015                     	ds	2
   220  000017                     _CoordRelatY:
   221                           	opt callstack 0
   222  000017                     	ds	2
   223  000019                     _CoordRelatX:
   224                           	opt callstack 0
   225  000019                     	ds	2
   226  00001B                     _CoordNewX:
   227                           	opt callstack 0
   228  00001B                     	ds	2
   229  00001D                     _CoordNewY:
   230                           	opt callstack 0
   231  00001D                     	ds	2
   232  00001F                     _CoordAntY:
   233                           	opt callstack 0
   234  00001F                     	ds	2
   235  000021                     _CoordAntX:
   236                           	opt callstack 0
   237  000021                     	ds	2
   238  000023                     _click:
   239                           	opt callstack 0
   240  000023                     	ds	1
   241  000024                     _NextState:
   242                           	opt callstack 0
   243  000024                     	ds	1
   244  000025                     _cord_y:
   245                           	opt callstack 0
   246  000025                     	ds	2
   247  000027                     _cord_x:
   248                           	opt callstack 0
   249  000027                     	ds	2
   250  000029                     _Par2:
   251                           	opt callstack 0
   252  000029                     	ds	1
   253  00002A                     _letter:
   254                           	opt callstack 0
   255  00002A                     	ds	1
   256  00002B                     _Par1:
   257                           	opt callstack 0
   258  00002B                     	ds	1
   259                           
   260                           	psect	dataCOMRAM
   261  00004A                     __pdataCOMRAM:
   262                           	opt callstack 0
   263  00004A                     _init:
   264                           	opt callstack 0
   265  00004A                     	ds	10
   266  000054                     _Error:
   267                           	opt callstack 0
   268  000054                     	ds	5
   269  000059                     _okay:
   270                           	opt callstack 0
   271  000059                     	ds	4
   272                           
   273                           	psect	dataBANK0
   274  000060                     __pdataBANK0:
   275                           	opt callstack 0
   276  000060                     _e_c:
   277                           	opt callstack 0
   278  000060                     	ds	13
   279                           
   280                           	psect	cstackCOMRAM
   281  00002C                     __pcstackCOMRAM:
   282                           	opt callstack 0
   283  00002C                     ?___aldiv:
   284                           	opt callstack 0
   285  00002C                     UARTWrite@data:
   286                           	opt callstack 0
   287  00002C                     coord@P1:
   288                           	opt callstack 0
   289  00002C                     ___aldiv@dividend:
   290                           	opt callstack 0
   291                           
   292                           ; 4 bytes @ 0x0
   293  00002C                     	ds	1
   294  00002D                     start@i:
   295                           	opt callstack 0
   296  00002D                     Par_Validated@i:
   297                           	opt callstack 0
   298  00002D                     Ins_Validated@i:
   299                           	opt callstack 0
   300  00002D                     Coord_Validated@i:
   301                           	opt callstack 0
   302  00002D                     end@i:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0x1
   306  00002D                     	ds	1
   307  00002E                     coord@L:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x2
   311  00002E                     	ds	2
   312  000030                     coord@x:
   313                           	opt callstack 0
   314  000030                     ___aldiv@divisor:
   315                           	opt callstack 0
   316                           
   317                           ; 4 bytes @ 0x4
   318  000030                     	ds	2
   319  000032                     coord@y:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x6
   323  000032                     	ds	2
   324  000034                     ___aldiv@counter:
   325                           	opt callstack 0
   326  000034                     coord@P2:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x8
   330  000034                     	ds	1
   331  000035                     ___aldiv@sign:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x9
   335  000035                     	ds	1
   336  000036                     ??_coord:
   337  000036                     ___aldiv@quotient:
   338                           	opt callstack 0
   339                           
   340                           ; 4 bytes @ 0xA
   341  000036                     	ds	4
   342  00003A                     UARTConfi@BAUD:
   343                           	opt callstack 0
   344  00003A                     coord@buffer:
   345                           	opt callstack 0
   346                           
   347                           ; 9 bytes @ 0xE
   348  00003A                     	ds	2
   349  00003C                     _UARTConfi$1169:
   350                           	opt callstack 0
   351                           
   352                           ; 4 bytes @ 0x10
   353  00003C                     	ds	7
   354  000043                     coord@read:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0x17
   358  000043                     	ds	1
   359  000044                     coord@i:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x18
   363  000044                     	ds	2
   364  000046                     cmd@i:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x1A
   368  000046                     	ds	2
   369  000048                     ??_verification:
   370                           
   371                           ; 1 bytes @ 0x1C
   372  000048                     	ds	2
   373  00004A                     
   374                           ; 1 bytes @ 0x1E
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 11 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   394 ;;      Params:         0       0       0       0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels required when called:    4
   400 ;; This function calls:
   401 ;;		_UARTConfi
   402 ;;		_verification
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text0
   409  007A34                     __ptext0:
   410                           	opt callstack 0
   411  007A34                     _main:
   412                           	opt callstack 27
   413  007A34                     
   414                           ;main.c: 12:     OSCCON=0x72;
   415  007A34  0E72               	movlw	114
   416  007A36  6ED3               	movwf	211,c	;volatile
   417  007A38                     
   418                           ;main.c: 13:     UARTConfi(9600);
   419  007A38  0E25               	movlw	37
   420  007A3A  6E3B               	movwf	(UARTConfi@BAUD+1)^0,c
   421  007A3C  0E80               	movlw	128
   422  007A3E  6E3A               	movwf	UARTConfi@BAUD^0,c
   423  007A40  EC92  F03D         	call	_UARTConfi	;wreg free
   424  007A44                     
   425                           ;main.c: 14:     TRISC=0X00;
   426  007A44  0E00               	movlw	0
   427  007A46  6E94               	movwf	148,c	;volatile
   428  007A48                     
   429                           ;main.c: 15:     verification();
   430  007A48  ECC0  F03E         	call	_verification	;wreg free
   431  007A4C  EF00  F000         	goto	start
   432  007A50                     __end_of_main:
   433                           	opt callstack 0
   434                           
   435 ;; *************** function _verification *****************
   436 ;; Defined at:
   437 ;;		line 6 in file "verification.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   451 ;;      Params:         0       0       0       0       0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0
   453 ;;      Temps:          2       0       0       0       0       0       0       0       0
   454 ;;      Totals:         2       0       0       0       0       0       0       0       0
   455 ;;Total ram usage:        2 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; Hardware stack levels required when called:    3
   458 ;; This function calls:
   459 ;;		_Coord_Validated
   460 ;;		_Ins_Validated
   461 ;;		_Par_Validated
   462 ;;		_cmd
   463 ;;		_end
   464 ;;		_start
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text1
   471  007D80                     __ptext1:
   472                           	opt callstack 0
   473  007D80                     _verification:
   474                           	opt callstack 27
   475  007D80                     
   476                           ;verification.c: 7:     NextState = iddle_State;
   477  007D80  0E00               	movlw	0
   478  007D82  6E24               	movwf	_NextState^0,c
   479                           
   480                           ;verification.c: 8:     switch(NextState)
   481  007D84  EFE1  F03E         	goto	l1531
   482  007D88                     l1513:
   483                           
   484                           ;verification.c: 11:                 NextState= start();
   485  007D88  EC47  F03D         	call	_start	;wreg free
   486  007D8C  6E24               	movwf	_NextState^0,c
   487                           
   488                           ;verification.c: 12:             }break;
   489  007D8E  EF07  F03F         	goto	l254
   490  007D92                     l1515:
   491                           
   492                           ;verification.c: 15:                 NextState=cmd();
   493  007D92  EC05  F03E         	call	_cmd	;wreg free
   494  007D96  6E24               	movwf	_NextState^0,c
   495                           
   496                           ;verification.c: 16:             }break;
   497  007D98  EF07  F03F         	goto	l254
   498  007D9C                     l1517:
   499                           
   500                           ;verification.c: 19:                 NextState=Par_Validated();
   501  007D9C  ECCB  F03D         	call	_Par_Validated	;wreg free
   502  007DA0  6E24               	movwf	_NextState^0,c
   503                           
   504                           ;verification.c: 20:             }break;
   505  007DA2  EF07  F03F         	goto	l254
   506  007DA6                     l1519:
   507                           
   508                           ;verification.c: 23:                 NextState=Ins_Validated();
   509  007DA6  EC7E  F03E         	call	_Ins_Validated	;wreg free
   510  007DAA  6E24               	movwf	_NextState^0,c
   511                           
   512                           ;verification.c: 24:             }break;
   513  007DAC  EF07  F03F         	goto	l254
   514  007DB0                     l1521:
   515                           
   516                           ;verification.c: 27:                 NextState=Coord_Validated();
   517  007DB0  EC40  F03E         	call	_Coord_Validated	;wreg free
   518  007DB4  6E24               	movwf	_NextState^0,c
   519                           
   520                           ;verification.c: 28:             }break;
   521  007DB6  EF07  F03F         	goto	l254
   522  007DBA                     l1523:
   523                           
   524                           ;verification.c: 31:                 end();
   525  007DBA  EC28  F03D         	call	_end	;wreg free
   526  007DBE  EF07  F03F         	goto	l254
   527  007DC2                     l1531:
   528  007DC2  0E00               	movlw	0
   529  007DC4  6E48               	movwf	??_verification^0,c
   530  007DC6  0E00               	movlw	0
   531  007DC8  6E49               	movwf	(??_verification+1)^0,c
   532                           
   533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   534                           ; Switch size 1, requested type "simple"
   535                           ; Number of cases is 1, Range of values is 0 to 0
   536                           ; switch strategies available:
   537                           ; Name         Instructions Cycles
   538                           ; simple_byte            4     3 (average)
   539                           ;	Chosen strategy is simple_byte
   540  007DCA  5049               	movf	(??_verification+1)^0,w,c
   541  007DCC  0A00               	xorlw	0	; case 0
   542  007DCE  B4D8               	btfsc	status,2,c
   543  007DD0  EFEC  F03E         	goto	l1549
   544  007DD4  EF07  F03F         	goto	l254
   545  007DD8                     l1549:
   546                           
   547                           ; Switch size 1, requested type "simple"
   548                           ; Number of cases is 6, Range of values is 0 to 6
   549                           ; switch strategies available:
   550                           ; Name         Instructions Cycles
   551                           ; simple_byte           19    10 (average)
   552                           ;	Chosen strategy is simple_byte
   553  007DD8  5048               	movf	??_verification^0,w,c
   554  007DDA  0A00               	xorlw	0	; case 0
   555  007DDC  B4D8               	btfsc	status,2,c
   556  007DDE  EFC4  F03E         	goto	l1513
   557  007DE2  0A01               	xorlw	1	; case 1
   558  007DE4  B4D8               	btfsc	status,2,c
   559  007DE6  EFC9  F03E         	goto	l1515
   560  007DEA  0A03               	xorlw	3	; case 2
   561  007DEC  B4D8               	btfsc	status,2,c
   562  007DEE  EFCE  F03E         	goto	l1517
   563  007DF2  0A01               	xorlw	1	; case 3
   564  007DF4  B4D8               	btfsc	status,2,c
   565  007DF6  EFD3  F03E         	goto	l1519
   566  007DFA  0A07               	xorlw	7	; case 4
   567  007DFC  B4D8               	btfsc	status,2,c
   568  007DFE  EFD8  F03E         	goto	l1521
   569  007E02  0A02               	xorlw	2	; case 6
   570  007E04  B4D8               	btfsc	status,2,c
   571  007E06  EFDD  F03E         	goto	l1523
   572  007E0A  EF07  F03F         	goto	l254
   573  007E0E                     l254:
   574  007E0E  0012               	return		;funcret
   575  007E10                     __end_of_verification:
   576                           	opt callstack 0
   577                           
   578 ;; *************** function _start *****************
   579 ;; Defined at:
   580 ;;		line 16 in file "cases.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  i               2    1[COMRAM] int 
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      unsigned char 
   587 ;; Registers used:
   588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   594 ;;      Params:         0       0       0       0       0       0       0       0       0
   595 ;;      Locals:         2       0       0       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0       0       0
   597 ;;      Totals:         2       0       0       0       0       0       0       0       0
   598 ;;Total ram usage:        2 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; Hardware stack levels required when called:    1
   601 ;; This function calls:
   602 ;;		_UARTWrite
   603 ;; This function is called by:
   604 ;;		_verification
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text2
   609  007A8E                     __ptext2:
   610                           	opt callstack 0
   611  007A8E                     _start:
   612                           	opt callstack 28
   613  007A8E                     
   614                           ;cases.c: 17:      for(int i=0;i<10;i++){
   615  007A8E  0E00               	movlw	0
   616  007A90  6E2E               	movwf	(start@i+1)^0,c
   617  007A92  0E00               	movlw	0
   618  007A94  6E2D               	movwf	start@i^0,c
   619  007A96                     l1299:
   620                           
   621                           ;cases.c: 18:         UARTWrite(init[i]);
   622  007A96  0E4A               	movlw	low _init
   623  007A98  242D               	addwf	start@i^0,w,c
   624  007A9A  6ED9               	movwf	fsr2l,c
   625  007A9C  0E00               	movlw	high _init
   626  007A9E  202E               	addwfc	(start@i+1)^0,w,c
   627  007AA0  6EDA               	movwf	fsr2h,c
   628  007AA2  50DF               	movf	indf2,w,c
   629  007AA4  EC0F  F03D         	call	_UARTWrite
   630  007AA8                     
   631                           ;cases.c: 19:     }
   632  007AA8  4A2D               	infsnz	start@i^0,f,c
   633  007AAA  2A2E               	incf	(start@i+1)^0,f,c
   634  007AAC  BE2E               	btfsc	(start@i+1)^0,7,c
   635  007AAE  EF62  F03D         	goto	u341
   636  007AB2  502E               	movf	(start@i+1)^0,w,c
   637  007AB4  E109               	bnz	u340
   638  007AB6  0E0A               	movlw	10
   639  007AB8  5C2D               	subwf	start@i^0,w,c
   640  007ABA  A0D8               	btfss	status,0,c
   641  007ABC  EF62  F03D         	goto	u341
   642  007AC0  EF64  F03D         	goto	u340
   643  007AC4                     u341:
   644  007AC4  EF4B  F03D         	goto	l1299
   645  007AC8                     u340:
   646  007AC8                     
   647                           ;cases.c: 20:      PORTC = 0xff;
   648  007AC8  6882               	setf	130,c	;volatile
   649  007ACA                     
   650                           ;cases.c: 21:      return wait_cmd_State;
   651  007ACA  0E01               	movlw	1
   652  007ACC  0012               	return		;funcret
   653  007ACE                     __end_of_start:
   654                           	opt callstack 0
   655                           
   656 ;; *************** function _end *****************
   657 ;; Defined at:
   658 ;;		line 89 in file "cases.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  i               2    1[COMRAM] int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         0       0       0       0       0       0       0       0       0
   673 ;;      Locals:         2       0       0       0       0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0
   675 ;;      Totals:         2       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    1
   679 ;; This function calls:
   680 ;;		_UARTWrite
   681 ;; This function is called by:
   682 ;;		_verification
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text3
   687  007A50                     __ptext3:
   688                           	opt callstack 0
   689  007A50                     _end:
   690                           	opt callstack 28
   691  007A50                     
   692                           ;cases.c: 90:     for(int i=0;i<4;i++){
   693  007A50  0E00               	movlw	0
   694  007A52  6E2E               	movwf	(end@i+1)^0,c
   695  007A54  0E00               	movlw	0
   696  007A56  6E2D               	movwf	end@i^0,c
   697  007A58                     l1443:
   698                           
   699                           ;cases.c: 91:         UARTWrite(okay[i]);
   700  007A58  0E59               	movlw	low _okay
   701  007A5A  242D               	addwf	end@i^0,w,c
   702  007A5C  6ED9               	movwf	fsr2l,c
   703  007A5E  0E00               	movlw	high _okay
   704  007A60  202E               	addwfc	(end@i+1)^0,w,c
   705  007A62  6EDA               	movwf	fsr2h,c
   706  007A64  50DF               	movf	indf2,w,c
   707  007A66  EC0F  F03D         	call	_UARTWrite
   708  007A6A                     
   709                           ;cases.c: 92:     }
   710  007A6A  4A2D               	infsnz	end@i^0,f,c
   711  007A6C  2A2E               	incf	(end@i+1)^0,f,c
   712  007A6E  BE2E               	btfsc	(end@i+1)^0,7,c
   713  007A70  EF43  F03D         	goto	u451
   714  007A74  502E               	movf	(end@i+1)^0,w,c
   715  007A76  E109               	bnz	u450
   716  007A78  0E04               	movlw	4
   717  007A7A  5C2D               	subwf	end@i^0,w,c
   718  007A7C  A0D8               	btfss	status,0,c
   719  007A7E  EF43  F03D         	goto	u451
   720  007A82  EF45  F03D         	goto	u450
   721  007A86                     u451:
   722  007A86  EF2C  F03D         	goto	l1443
   723  007A8A                     u450:
   724  007A8A                     
   725                           ;cases.c: 93:     PORTC=0XFF;
   726  007A8A  6882               	setf	130,c	;volatile
   727  007A8C  0012               	return		;funcret
   728  007A8E                     __end_of_end:
   729                           	opt callstack 0
   730                           
   731 ;; *************** function _cmd *****************
   732 ;; Defined at:
   733 ;;		line 25 in file "cases.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  i               2   26[COMRAM] int 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      unsigned char 
   740 ;; Registers used:
   741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   747 ;;      Params:         0       0       0       0       0       0       0       0       0
   748 ;;      Locals:         2       0       0       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0
   750 ;;      Totals:         2       0       0       0       0       0       0       0       0
   751 ;;Total ram usage:        2 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		_UARTWrite
   756 ;;		_coord
   757 ;; This function is called by:
   758 ;;		_verification
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text4
   763  007C0A                     __ptext4:
   764                           	opt callstack 0
   765  007C0A                     _cmd:
   766                           	opt callstack 27
   767  007C0A                     
   768                           ;cases.c: 26:     UARTWrite(13);
   769  007C0A  0E0D               	movlw	13
   770  007C0C  EC0F  F03D         	call	_UARTWrite
   771  007C10                     
   772                           ;cases.c: 27:     PORTC = 0x00;
   773  007C10  0E00               	movlw	0
   774  007C12  6E82               	movwf	130,c	;volatile
   775  007C14                     
   776                           ;cases.c: 28:     for(int i=0;i<10;i++){
   777  007C14  0E00               	movlw	0
   778  007C16  6E47               	movwf	(cmd@i+1)^0,c
   779  007C18  0E00               	movlw	0
   780  007C1A  6E46               	movwf	cmd@i^0,c
   781  007C1C                     l1319:
   782                           
   783                           ;cases.c: 29:         UARTWrite(e_c[i]);
   784  007C1C  0E60               	movlw	low _e_c
   785  007C1E  2446               	addwf	cmd@i^0,w,c
   786  007C20  6ED9               	movwf	fsr2l,c
   787  007C22  0E00               	movlw	high _e_c
   788  007C24  2047               	addwfc	(cmd@i+1)^0,w,c
   789  007C26  6EDA               	movwf	fsr2h,c
   790  007C28  50DF               	movf	indf2,w,c
   791  007C2A  EC0F  F03D         	call	_UARTWrite
   792  007C2E                     
   793                           ;cases.c: 30:     }
   794  007C2E  4A46               	infsnz	cmd@i^0,f,c
   795  007C30  2A47               	incf	(cmd@i+1)^0,f,c
   796  007C32  BE47               	btfsc	(cmd@i+1)^0,7,c
   797  007C34  EF25  F03E         	goto	u351
   798  007C38  5047               	movf	(cmd@i+1)^0,w,c
   799  007C3A  E109               	bnz	u350
   800  007C3C  0E0A               	movlw	10
   801  007C3E  5C46               	subwf	cmd@i^0,w,c
   802  007C40  A0D8               	btfss	status,0,c
   803  007C42  EF25  F03E         	goto	u351
   804  007C46  EF27  F03E         	goto	u350
   805  007C4A                     u351:
   806  007C4A  EF0E  F03E         	goto	l1319
   807  007C4E                     u350:
   808  007C4E                     
   809                           ;cases.c: 31:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
   810  007C4E  0E2B               	movlw	low _Par1
   811  007C50  6E2C               	movwf	coord@P1^0,c
   812  007C52  0E00               	movlw	high _Par1
   813  007C54  6E2D               	movwf	(coord@P1+1)^0,c
   814  007C56  0E2A               	movlw	low _letter
   815  007C58  6E2E               	movwf	coord@L^0,c
   816  007C5A  0E00               	movlw	high _letter
   817  007C5C  6E2F               	movwf	(coord@L+1)^0,c
   818  007C5E  0E27               	movlw	low _cord_x
   819  007C60  6E30               	movwf	coord@x^0,c
   820  007C62  0E00               	movlw	high _cord_x
   821  007C64  6E31               	movwf	(coord@x+1)^0,c
   822  007C66  0E25               	movlw	low _cord_y
   823  007C68  6E32               	movwf	coord@y^0,c
   824  007C6A  0E00               	movlw	high _cord_y
   825  007C6C  6E33               	movwf	(coord@y+1)^0,c
   826  007C6E  0E29               	movlw	low _Par2
   827  007C70  6E34               	movwf	coord@P2^0,c
   828  007C72  0E00               	movlw	high _Par2
   829  007C74  6E35               	movwf	(coord@P2+1)^0,c
   830  007C76  EC08  F03F         	call	_coord	;wreg free
   831  007C7A                     
   832                           ;cases.c: 32:     PORTC =0Xff;
   833  007C7A  6882               	setf	130,c	;volatile
   834  007C7C                     
   835                           ;cases.c: 33:     return validate_Par_State;
   836  007C7C  0E02               	movlw	2
   837  007C7E  0012               	return		;funcret
   838  007C80                     __end_of_cmd:
   839                           	opt callstack 0
   840                           
   841 ;; *************** function _coord *****************
   842 ;; Defined at:
   843 ;;		line 9 in file "coordenadas.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  P1              2    0[COMRAM] PTR unsigned char 
   846 ;;		 -> Par1(1), 
   847 ;;  L               2    2[COMRAM] PTR unsigned char 
   848 ;;		 -> letter(1), 
   849 ;;  x               2    4[COMRAM] PTR unsigned short 
   850 ;;		 -> cord_x(2), 
   851 ;;  y               2    6[COMRAM] PTR unsigned short 
   852 ;;		 -> cord_y(2), 
   853 ;;  P2              2    8[COMRAM] PTR unsigned char 
   854 ;;		 -> Par2(1), 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  i               2   24[COMRAM] int 
   857 ;;  buffer          9   14[COMRAM] unsigned char [9]
   858 ;;  read            1   23[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  2    0[COMRAM] int 
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:        10       0       0       0       0       0       0       0       0
   869 ;;      Locals:        12       0       0       0       0       0       0       0       0
   870 ;;      Temps:          4       0       0       0       0       0       0       0       0
   871 ;;      Totals:        26       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:       26 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		_UARTRead
   877 ;; This function is called by:
   878 ;;		_cmd
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text5
   883  007E10                     __ptext5:
   884                           	opt callstack 0
   885  007E10                     _coord:
   886                           	opt callstack 27
   887  007E10                     
   888                           ;coordenadas.c: 10:   char buffer [9];;coordenadas.c: 11:         char read;;coordenadas
      +                          .c: 13:         for(int i=0; i<=8; i++){
   889  007E10  0E00               	movlw	0
   890  007E12  6E45               	movwf	(coord@i+1)^0,c
   891  007E14  0E00               	movlw	0
   892  007E16  6E44               	movwf	coord@i^0,c
   893  007E18                     l1279:
   894                           
   895                           ;coordenadas.c: 14:             read= UARTRead();
   896  007E18  ECFC  F03C         	call	_UARTRead	;wreg free
   897  007E1C  6E43               	movwf	coord@read^0,c
   898  007E1E                     
   899                           ;coordenadas.c: 15:             buffer[i]=read;
   900  007E1E  0E3A               	movlw	low coord@buffer
   901  007E20  2444               	addwf	coord@i^0,w,c
   902  007E22  6ED9               	movwf	fsr2l,c
   903  007E24  0E00               	movlw	high coord@buffer
   904  007E26  2045               	addwfc	(coord@i+1)^0,w,c
   905  007E28  6EDA               	movwf	fsr2h,c
   906  007E2A  C043  FFDF         	movff	coord@read,indf2
   907  007E2E                     
   908                           ;coordenadas.c: 16:         }
   909  007E2E  4A44               	infsnz	coord@i^0,f,c
   910  007E30  2A45               	incf	(coord@i+1)^0,f,c
   911  007E32  BE45               	btfsc	(coord@i+1)^0,7,c
   912  007E34  EF25  F03F         	goto	u331
   913  007E38  5045               	movf	(coord@i+1)^0,w,c
   914  007E3A  E109               	bnz	u330
   915  007E3C  0E09               	movlw	9
   916  007E3E  5C44               	subwf	coord@i^0,w,c
   917  007E40  A0D8               	btfss	status,0,c
   918  007E42  EF25  F03F         	goto	u331
   919  007E46  EF27  F03F         	goto	u330
   920  007E4A                     u331:
   921  007E4A  EF0C  F03F         	goto	l1279
   922  007E4E                     u330:
   923  007E4E                     
   924                           ;coordenadas.c: 17:         *P1= buffer[0];
   925  007E4E  C02C  FFD9         	movff	coord@P1,fsr2l
   926  007E52  C02D  FFDA         	movff	coord@P1+1,fsr2h
   927  007E56  C03A  FFDF         	movff	coord@buffer,indf2
   928                           
   929                           ;coordenadas.c: 18:         *L= buffer[1];
   930  007E5A  C02E  FFD9         	movff	coord@L,fsr2l
   931  007E5E  C02F  FFDA         	movff	coord@L+1,fsr2h
   932  007E62  C03B  FFDF         	movff	coord@buffer+1,indf2
   933  007E66                     
   934                           ;coordenadas.c: 19:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
   935  007E66  0E30               	movlw	48
   936  007E68  6E36               	movwf	??_coord^0,c
   937  007E6A  0EEB               	movlw	235
   938  007E6C  6E37               	movwf	(??_coord+1)^0,c
   939  007E6E  503C               	movf	(coord@buffer+2)^0,w,c
   940  007E70  0D64               	mullw	100
   941  007E72  CFF3 F038          	movff	prodl,??_coord+2
   942  007E76  CFF4 F039          	movff	prodh,??_coord+3
   943  007E7A  503D               	movf	(coord@buffer+3)^0,w,c
   944  007E7C  0D0A               	mullw	10
   945  007E7E  50F3               	movf	243,w,c
   946  007E80  2638               	addwf	(??_coord+2)^0,f,c
   947  007E82  50F4               	movf	244,w,c
   948  007E84  2239               	addwfc	(??_coord+3)^0,f,c
   949  007E86  503E               	movf	(coord@buffer+4)^0,w,c
   950  007E88  2638               	addwf	(??_coord+2)^0,f,c
   951  007E8A  0E00               	movlw	0
   952  007E8C  2239               	addwfc	(??_coord+3)^0,f,c
   953  007E8E  5036               	movf	??_coord^0,w,c
   954  007E90  2638               	addwf	(??_coord+2)^0,f,c
   955  007E92  5037               	movf	(??_coord+1)^0,w,c
   956  007E94  2239               	addwfc	(??_coord+3)^0,f,c
   957  007E96  C030  FFD9         	movff	coord@x,fsr2l
   958  007E9A  C031  FFDA         	movff	coord@x+1,fsr2h
   959  007E9E  C038  FFDE         	movff	??_coord+2,postinc2
   960  007EA2  C039  FFDD         	movff	??_coord+3,postdec2
   961  007EA6                     
   962                           ;coordenadas.c: 20:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
   963  007EA6  0E30               	movlw	48
   964  007EA8  6E36               	movwf	??_coord^0,c
   965  007EAA  0EEB               	movlw	235
   966  007EAC  6E37               	movwf	(??_coord+1)^0,c
   967  007EAE  503F               	movf	(coord@buffer+5)^0,w,c
   968  007EB0  0D64               	mullw	100
   969  007EB2  CFF3 F038          	movff	prodl,??_coord+2
   970  007EB6  CFF4 F039          	movff	prodh,??_coord+3
   971  007EBA  5040               	movf	(coord@buffer+6)^0,w,c
   972  007EBC  0D0A               	mullw	10
   973  007EBE  50F3               	movf	243,w,c
   974  007EC0  2638               	addwf	(??_coord+2)^0,f,c
   975  007EC2  50F4               	movf	244,w,c
   976  007EC4  2239               	addwfc	(??_coord+3)^0,f,c
   977  007EC6  5041               	movf	(coord@buffer+7)^0,w,c
   978  007EC8  2638               	addwf	(??_coord+2)^0,f,c
   979  007ECA  0E00               	movlw	0
   980  007ECC  2239               	addwfc	(??_coord+3)^0,f,c
   981  007ECE  5036               	movf	??_coord^0,w,c
   982  007ED0  2638               	addwf	(??_coord+2)^0,f,c
   983  007ED2  5037               	movf	(??_coord+1)^0,w,c
   984  007ED4  2239               	addwfc	(??_coord+3)^0,f,c
   985  007ED6  C032  FFD9         	movff	coord@y,fsr2l
   986  007EDA  C033  FFDA         	movff	coord@y+1,fsr2h
   987  007EDE  C038  FFDE         	movff	??_coord+2,postinc2
   988  007EE2  C039  FFDD         	movff	??_coord+3,postdec2
   989                           
   990                           ;coordenadas.c: 21:   *P2= buffer[8];
   991  007EE6  C034  FFD9         	movff	coord@P2,fsr2l
   992  007EEA  C035  FFDA         	movff	coord@P2+1,fsr2h
   993  007EEE  C042  FFDF         	movff	coord@buffer+8,indf2
   994  007EF2  0012               	return		;funcret
   995  007EF4                     __end_of_coord:
   996                           	opt callstack 0
   997                           
   998 ;; *************** function _UARTRead *****************
   999 ;; Defined at:
  1000 ;;		line 30 in file "UART.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      unsigned char 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_coord
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text6
  1028  0079F8                     __ptext6:
  1029                           	opt callstack 0
  1030  0079F8                     _UARTRead:
  1031                           	opt callstack 27
  1032  0079F8                     l94:
  1033  0079F8  AA9E               	btfss	3998,5,c	;volatile
  1034  0079FA  EF01  F03D         	goto	u311
  1035  0079FE  EF03  F03D         	goto	u310
  1036  007A02                     u311:
  1037  007A02  EFFC  F03C         	goto	l94
  1038  007A06                     u310:
  1039  007A06                     
  1040                           ;UART.c: 32:     return RCREG;
  1041  007A06  50AE               	movf	174,w,c	;volatile
  1042  007A08  0012               	return		;funcret
  1043  007A0A                     __end_of_UARTRead:
  1044                           	opt callstack 0
  1045                           
  1046 ;; *************** function _Par_Validated *****************
  1047 ;; Defined at:
  1048 ;;		line 36 in file "cases.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  i               2    1[COMRAM] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      unsigned char 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    1
  1069 ;; This function calls:
  1070 ;;		_UARTWrite
  1071 ;; This function is called by:
  1072 ;;		_verification
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text7
  1077  007B96                     __ptext7:
  1078                           	opt callstack 0
  1079  007B96                     _Par_Validated:
  1080                           	opt callstack 28
  1081  007B96                     
  1082                           ;cases.c: 37:     PORTC=0x00;
  1083  007B96  0E00               	movlw	0
  1084  007B98  6E82               	movwf	130,c	;volatile
  1085  007B9A                     
  1086                           ;cases.c: 38:     if(Par1==0X3C && Par2==0x3E){
  1087  007B9A  0E3C               	movlw	60
  1088  007B9C  182B               	xorwf	_Par1^0,w,c
  1089  007B9E  A4D8               	btfss	status,2,c
  1090  007BA0  EFD4  F03D         	goto	u361
  1091  007BA4  EFD6  F03D         	goto	u360
  1092  007BA8                     u361:
  1093  007BA8  EFE4  F03D         	goto	l1347
  1094  007BAC                     u360:
  1095  007BAC  0E3E               	movlw	62
  1096  007BAE  1829               	xorwf	_Par2^0,w,c
  1097  007BB0  A4D8               	btfss	status,2,c
  1098  007BB2  EFDD  F03D         	goto	u371
  1099  007BB6  EFDF  F03D         	goto	u370
  1100  007BBA                     u371:
  1101  007BBA  EFE4  F03D         	goto	l1347
  1102  007BBE                     u370:
  1103  007BBE                     
  1104                           ;cases.c: 39:         PORTC=0X02;
  1105  007BBE  0E02               	movlw	2
  1106  007BC0  6E82               	movwf	130,c	;volatile
  1107  007BC2                     
  1108                           ;cases.c: 40:         return validate_Instruct_State;
  1109  007BC2  0E03               	movlw	3
  1110  007BC4  EF04  F03E         	goto	l42
  1111  007BC8                     l1347:
  1112                           
  1113                           ;cases.c: 43:         for(int i=0;i<5;i++){
  1114  007BC8  0E00               	movlw	0
  1115  007BCA  6E2E               	movwf	(Par_Validated@i+1)^0,c
  1116  007BCC  0E00               	movlw	0
  1117  007BCE  6E2D               	movwf	Par_Validated@i^0,c
  1118  007BD0                     l1353:
  1119                           
  1120                           ;cases.c: 44:             UARTWrite(Error[i]);
  1121  007BD0  0E54               	movlw	low _Error
  1122  007BD2  242D               	addwf	Par_Validated@i^0,w,c
  1123  007BD4  6ED9               	movwf	fsr2l,c
  1124  007BD6  0E00               	movlw	high _Error
  1125  007BD8  202E               	addwfc	(Par_Validated@i+1)^0,w,c
  1126  007BDA  6EDA               	movwf	fsr2h,c
  1127  007BDC  50DF               	movf	indf2,w,c
  1128  007BDE  EC0F  F03D         	call	_UARTWrite
  1129  007BE2                     
  1130                           ;cases.c: 45:         }
  1131  007BE2  4A2D               	infsnz	Par_Validated@i^0,f,c
  1132  007BE4  2A2E               	incf	(Par_Validated@i+1)^0,f,c
  1133  007BE6  BE2E               	btfsc	(Par_Validated@i+1)^0,7,c
  1134  007BE8  EFFF  F03D         	goto	u381
  1135  007BEC  502E               	movf	(Par_Validated@i+1)^0,w,c
  1136  007BEE  E109               	bnz	u380
  1137  007BF0  0E05               	movlw	5
  1138  007BF2  5C2D               	subwf	Par_Validated@i^0,w,c
  1139  007BF4  A0D8               	btfss	status,0,c
  1140  007BF6  EFFF  F03D         	goto	u381
  1141  007BFA  EF01  F03E         	goto	u380
  1142  007BFE                     u381:
  1143  007BFE  EFE8  F03D         	goto	l1353
  1144  007C02                     u380:
  1145  007C02                     
  1146                           ;cases.c: 46:         PORTC= 0X04;
  1147  007C02  0E04               	movlw	4
  1148  007C04  6E82               	movwf	130,c	;volatile
  1149  007C06                     
  1150                           ;cases.c: 47:         return wait_cmd_State;
  1151  007C06  0E01               	movlw	1
  1152  007C08                     l42:
  1153  007C08  0012               	return		;funcret
  1154  007C0A                     __end_of_Par_Validated:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _Ins_Validated *****************
  1158 ;; Defined at:
  1159 ;;		line 51 in file "cases.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  i               2    1[COMRAM] int 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      unsigned char 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1176 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        2 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		_UARTWrite
  1182 ;; This function is called by:
  1183 ;;		_verification
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text8
  1188  007CFC                     __ptext8:
  1189                           	opt callstack 0
  1190  007CFC                     _Ins_Validated:
  1191                           	opt callstack 28
  1192  007CFC                     
  1193                           ;cases.c: 52:     PORTC=0x00;
  1194  007CFC  0E00               	movlw	0
  1195  007CFE  6E82               	movwf	130,c	;volatile
  1196  007D00                     
  1197                           ;cases.c: 53:     if(letter==0x43){
  1198  007D00  0E43               	movlw	67
  1199  007D02  182A               	xorwf	_letter^0,w,c
  1200  007D04  A4D8               	btfss	status,2,c
  1201  007D06  EF87  F03E         	goto	u391
  1202  007D0A  EF89  F03E         	goto	u390
  1203  007D0E                     u391:
  1204  007D0E  EF90  F03E         	goto	l1377
  1205  007D12                     u390:
  1206  007D12                     
  1207                           ;cases.c: 54:         PORTC=0X02;
  1208  007D12  0E02               	movlw	2
  1209  007D14  6E82               	movwf	130,c	;volatile
  1210                           
  1211                           ;cases.c: 55:         click=1;
  1212  007D16  0E01               	movlw	1
  1213  007D18  6E23               	movwf	_click^0,c
  1214  007D1A                     l1371:
  1215                           
  1216                           ;cases.c: 56:         return validate_Coord_State;
  1217  007D1A  0E04               	movlw	4
  1218  007D1C  EFBF  F03E         	goto	l49
  1219  007D20                     l1377:
  1220  007D20  0E53               	movlw	83
  1221  007D22  182A               	xorwf	_letter^0,w,c
  1222  007D24  A4D8               	btfss	status,2,c
  1223  007D26  EF97  F03E         	goto	u401
  1224  007D2A  EF99  F03E         	goto	u400
  1225  007D2E                     u401:
  1226  007D2E  EF9F  F03E         	goto	l1387
  1227  007D32                     u400:
  1228  007D32                     
  1229                           ;cases.c: 60:         PORTC=0X02;
  1230  007D32  0E02               	movlw	2
  1231  007D34  6E82               	movwf	130,c	;volatile
  1232                           
  1233                           ;cases.c: 61:         click=0;
  1234  007D36  0E00               	movlw	0
  1235  007D38  6E23               	movwf	_click^0,c
  1236  007D3A  EF8D  F03E         	goto	l1371
  1237  007D3E                     l1387:
  1238                           
  1239                           ;cases.c: 65:         for(int i=0;i<5;i++){
  1240  007D3E  0E00               	movlw	0
  1241  007D40  6E2E               	movwf	(Ins_Validated@i+1)^0,c
  1242  007D42  0E00               	movlw	0
  1243  007D44  6E2D               	movwf	Ins_Validated@i^0,c
  1244  007D46                     l1393:
  1245                           
  1246                           ;cases.c: 66:             UARTWrite(Error[i]);
  1247  007D46  0E54               	movlw	low _Error
  1248  007D48  242D               	addwf	Ins_Validated@i^0,w,c
  1249  007D4A  6ED9               	movwf	fsr2l,c
  1250  007D4C  0E00               	movlw	high _Error
  1251  007D4E  202E               	addwfc	(Ins_Validated@i+1)^0,w,c
  1252  007D50  6EDA               	movwf	fsr2h,c
  1253  007D52  50DF               	movf	indf2,w,c
  1254  007D54  EC0F  F03D         	call	_UARTWrite
  1255  007D58                     
  1256                           ;cases.c: 67:         }
  1257  007D58  4A2D               	infsnz	Ins_Validated@i^0,f,c
  1258  007D5A  2A2E               	incf	(Ins_Validated@i+1)^0,f,c
  1259  007D5C  BE2E               	btfsc	(Ins_Validated@i+1)^0,7,c
  1260  007D5E  EFBA  F03E         	goto	u411
  1261  007D62  502E               	movf	(Ins_Validated@i+1)^0,w,c
  1262  007D64  E109               	bnz	u410
  1263  007D66  0E05               	movlw	5
  1264  007D68  5C2D               	subwf	Ins_Validated@i^0,w,c
  1265  007D6A  A0D8               	btfss	status,0,c
  1266  007D6C  EFBA  F03E         	goto	u411
  1267  007D70  EFBC  F03E         	goto	u410
  1268  007D74                     u411:
  1269  007D74  EFA3  F03E         	goto	l1393
  1270  007D78                     u410:
  1271  007D78                     
  1272                           ;cases.c: 68:         PORTC= 0X04;
  1273  007D78  0E04               	movlw	4
  1274  007D7A  6E82               	movwf	130,c	;volatile
  1275  007D7C                     
  1276                           ;cases.c: 69:         return wait_cmd_State;
  1277  007D7C  0E01               	movlw	1
  1278  007D7E                     l49:
  1279  007D7E  0012               	return		;funcret
  1280  007D80                     __end_of_Ins_Validated:
  1281                           	opt callstack 0
  1282                           
  1283 ;; *************** function _Coord_Validated *****************
  1284 ;; Defined at:
  1285 ;;		line 73 in file "cases.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  i               2    1[COMRAM] int 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      unsigned char 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0
  1300 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1302 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		_UARTWrite
  1308 ;; This function is called by:
  1309 ;;		_verification
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text9
  1314  007C80                     __ptext9:
  1315                           	opt callstack 0
  1316  007C80                     _Coord_Validated:
  1317                           	opt callstack 28
  1318  007C80                     
  1319                           ;cases.c: 74:     PORTC=0x00;
  1320  007C80  0E00               	movlw	0
  1321  007C82  6E82               	movwf	130,c	;volatile
  1322  007C84                     
  1323                           ;cases.c: 75:     if(cord_x<=300 && cord_y<=300){
  1324  007C84  0E2D               	movlw	45
  1325  007C86  5C27               	subwf	_cord_x^0,w,c
  1326  007C88  0E01               	movlw	1
  1327  007C8A  5828               	subwfb	(_cord_x+1)^0,w,c
  1328  007C8C  B0D8               	btfsc	status,0,c
  1329  007C8E  EF4B  F03E         	goto	u421
  1330  007C92  EF4D  F03E         	goto	u420
  1331  007C96                     u421:
  1332  007C96  EF5D  F03E         	goto	l1419
  1333  007C9A                     u420:
  1334  007C9A  0E2D               	movlw	45
  1335  007C9C  5C25               	subwf	_cord_y^0,w,c
  1336  007C9E  0E01               	movlw	1
  1337  007CA0  5826               	subwfb	(_cord_y+1)^0,w,c
  1338  007CA2  B0D8               	btfsc	status,0,c
  1339  007CA4  EF56  F03E         	goto	u431
  1340  007CA8  EF58  F03E         	goto	u430
  1341  007CAC                     u431:
  1342  007CAC  EF5D  F03E         	goto	l1419
  1343  007CB0                     u430:
  1344  007CB0                     
  1345                           ;cases.c: 76:         PORTC=0X02;
  1346  007CB0  0E02               	movlw	2
  1347  007CB2  6E82               	movwf	130,c	;volatile
  1348  007CB4                     
  1349                           ;cases.c: 77:         return end_State;
  1350  007CB4  0E06               	movlw	6
  1351  007CB6  EF7D  F03E         	goto	l58
  1352  007CBA                     l1419:
  1353                           
  1354                           ;cases.c: 80:         for(int i=0;i<5;i++){
  1355  007CBA  0E00               	movlw	0
  1356  007CBC  6E2E               	movwf	(Coord_Validated@i+1)^0,c
  1357  007CBE  0E00               	movlw	0
  1358  007CC0  6E2D               	movwf	Coord_Validated@i^0,c
  1359  007CC2                     l1425:
  1360                           
  1361                           ;cases.c: 81:             UARTWrite(Error[i]);
  1362  007CC2  0E54               	movlw	low _Error
  1363  007CC4  242D               	addwf	Coord_Validated@i^0,w,c
  1364  007CC6  6ED9               	movwf	fsr2l,c
  1365  007CC8  0E00               	movlw	high _Error
  1366  007CCA  202E               	addwfc	(Coord_Validated@i+1)^0,w,c
  1367  007CCC  6EDA               	movwf	fsr2h,c
  1368  007CCE  50DF               	movf	indf2,w,c
  1369  007CD0  EC0F  F03D         	call	_UARTWrite
  1370  007CD4                     
  1371                           ;cases.c: 82:         }
  1372  007CD4  4A2D               	infsnz	Coord_Validated@i^0,f,c
  1373  007CD6  2A2E               	incf	(Coord_Validated@i+1)^0,f,c
  1374  007CD8  BE2E               	btfsc	(Coord_Validated@i+1)^0,7,c
  1375  007CDA  EF78  F03E         	goto	u441
  1376  007CDE  502E               	movf	(Coord_Validated@i+1)^0,w,c
  1377  007CE0  E109               	bnz	u440
  1378  007CE2  0E05               	movlw	5
  1379  007CE4  5C2D               	subwf	Coord_Validated@i^0,w,c
  1380  007CE6  A0D8               	btfss	status,0,c
  1381  007CE8  EF78  F03E         	goto	u441
  1382  007CEC  EF7A  F03E         	goto	u440
  1383  007CF0                     u441:
  1384  007CF0  EF61  F03E         	goto	l1425
  1385  007CF4                     u440:
  1386  007CF4                     
  1387                           ;cases.c: 83:         PORTC= 0X04;
  1388  007CF4  0E04               	movlw	4
  1389  007CF6  6E82               	movwf	130,c	;volatile
  1390  007CF8                     
  1391                           ;cases.c: 84:        return wait_cmd_State;
  1392  007CF8  0E01               	movlw	1
  1393  007CFA                     l58:
  1394  007CFA  0012               	return		;funcret
  1395  007CFC                     __end_of_Coord_Validated:
  1396                           	opt callstack 0
  1397                           
  1398 ;; *************** function _UARTWrite *****************
  1399 ;; Defined at:
  1400 ;;		line 24 in file "UART.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  data            1    wreg     unsigned char 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  data            1    0[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0
  1415 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1417 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1418 ;;Total ram usage:        1 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_start
  1424 ;;		_cmd
  1425 ;;		_Par_Validated
  1426 ;;		_Ins_Validated
  1427 ;;		_Coord_Validated
  1428 ;;		_end
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text10
  1433  007A1E                     __ptext10:
  1434                           	opt callstack 0
  1435  007A1E                     _UARTWrite:
  1436                           	opt callstack 28
  1437                           
  1438                           ;incstack = 0
  1439                           ;UARTWrite@data stored from wreg
  1440  007A1E  6E2C               	movwf	UARTWrite@data^0,c
  1441  007A20                     l88:
  1442  007A20  A89E               	btfss	158,4,c	;volatile
  1443  007A22  EF15  F03D         	goto	u321
  1444  007A26  EF17  F03D         	goto	u320
  1445  007A2A                     u321:
  1446  007A2A  EF10  F03D         	goto	l88
  1447  007A2E                     u320:
  1448  007A2E                     
  1449                           ;UART.c: 26:     TXREG= data;
  1450  007A2E  C02C  FFAD         	movff	UARTWrite@data,4013	;volatile
  1451  007A32  0012               	return		;funcret
  1452  007A34                     __end_of_UARTWrite:
  1453                           	opt callstack 0
  1454                           
  1455 ;; *************** function _UARTConfi *****************
  1456 ;; Defined at:
  1457 ;;		line 5 in file "UART.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  BAUD            2   14[COMRAM] int 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         2       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1474 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1475 ;;Total ram usage:        6 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    1
  1478 ;; This function calls:
  1479 ;;		___aldiv
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text11
  1486  007B24                     __ptext11:
  1487                           	opt callstack 0
  1488  007B24                     _UARTConfi:
  1489                           	opt callstack 29
  1490  007B24                     
  1491                           ;UART.c: 7:     TRISCbits.RC6=0;
  1492  007B24  9C94               	bcf	148,6,c	;volatile
  1493                           
  1494                           ;UART.c: 8:     TRISCbits.RC7=1;
  1495  007B26  8E94               	bsf	148,7,c	;volatile
  1496  007B28                     
  1497                           ;UART.c: 10:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1498  007B28  C03A  F030         	movff	UARTConfi@BAUD,___aldiv@divisor
  1499  007B2C  C03B  F031         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
  1500  007B30  0E00               	movlw	0
  1501  007B32  BE31               	btfsc	(___aldiv@divisor+1)^0,7,c
  1502  007B34  0EFF               	movlw	-1
  1503  007B36  6E32               	movwf	(___aldiv@divisor+2)^0,c
  1504  007B38  6E33               	movwf	(___aldiv@divisor+3)^0,c
  1505  007B3A  0E00               	movlw	0
  1506  007B3C  6E2C               	movwf	___aldiv@dividend^0,c
  1507  007B3E  0E12               	movlw	18
  1508  007B40  6E2D               	movwf	(___aldiv@dividend+1)^0,c
  1509  007B42  0E7A               	movlw	122
  1510  007B44  6E2E               	movwf	(___aldiv@dividend+2)^0,c
  1511  007B46  0E00               	movlw	0
  1512  007B48  6E2F               	movwf	(___aldiv@dividend+3)^0,c
  1513  007B4A  EC7A  F03F         	call	___aldiv	;wreg free
  1514  007B4E  C02C  F03C         	movff	?___aldiv,_UARTConfi$1169
  1515  007B52  C02D  F03D         	movff	?___aldiv+1,_UARTConfi$1169+1
  1516  007B56  C02E  F03E         	movff	?___aldiv+2,_UARTConfi$1169+2
  1517  007B5A  C02F  F03F         	movff	?___aldiv+3,_UARTConfi$1169+3
  1518                           
  1519                           ;UART.c: 10:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1520  007B5E  C03C  F02C         	movff	_UARTConfi$1169,___aldiv@dividend
  1521  007B62  C03D  F02D         	movff	_UARTConfi$1169+1,___aldiv@dividend+1
  1522  007B66  C03E  F02E         	movff	_UARTConfi$1169+2,___aldiv@dividend+2
  1523  007B6A  C03F  F02F         	movff	_UARTConfi$1169+3,___aldiv@dividend+3
  1524  007B6E  0E40               	movlw	64
  1525  007B70  6E30               	movwf	___aldiv@divisor^0,c
  1526  007B72  0E00               	movlw	0
  1527  007B74  6E31               	movwf	(___aldiv@divisor+1)^0,c
  1528  007B76  0E00               	movlw	0
  1529  007B78  6E32               	movwf	(___aldiv@divisor+2)^0,c
  1530  007B7A  0E00               	movlw	0
  1531  007B7C  6E33               	movwf	(___aldiv@divisor+3)^0,c
  1532  007B7E  EC7A  F03F         	call	___aldiv	;wreg free
  1533  007B82  042C               	decf	?___aldiv^0,w,c
  1534  007B84  6EAF               	movwf	175,c	;volatile
  1535  007B86                     
  1536                           ;UART.c: 11:     TXSTAbits.BRGH = 0;
  1537  007B86  94AC               	bcf	172,2,c	;volatile
  1538  007B88                     
  1539                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  1540  007B88  98AC               	bcf	172,4,c	;volatile
  1541  007B8A                     
  1542                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  1543  007B8A  8EAB               	bsf	171,7,c	;volatile
  1544  007B8C                     
  1545                           ;UART.c: 16:     TXSTAbits.TX9 = 0;
  1546  007B8C  9CAC               	bcf	172,6,c	;volatile
  1547  007B8E                     
  1548                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1549  007B8E  8AAC               	bsf	172,5,c	;volatile
  1550  007B90                     
  1551                           ;UART.c: 20:     RCSTAbits.RC9 = 0;
  1552  007B90  9CAB               	bcf	171,6,c	;volatile
  1553  007B92                     
  1554                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1555  007B92  88AB               	bsf	171,4,c	;volatile
  1556  007B94  0012               	return		;funcret
  1557  007B96                     __end_of_UARTConfi:
  1558                           	opt callstack 0
  1559                           
  1560 ;; *************** function ___aldiv *****************
  1561 ;; Defined at:
  1562 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  dividend        4    0[COMRAM] long 
  1565 ;;  divisor         4    4[COMRAM] long 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  quotient        4   10[COMRAM] long 
  1568 ;;  sign            1    9[COMRAM] unsigned char 
  1569 ;;  counter         1    8[COMRAM] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  4    0[COMRAM] long 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1579 ;;      Params:         8       0       0       0       0       0       0       0       0
  1580 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1582 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1583 ;;Total ram usage:       14 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_UARTConfi
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text12
  1593  007EF4                     __ptext12:
  1594                           	opt callstack 0
  1595  007EF4                     ___aldiv:
  1596                           	opt callstack 29
  1597  007EF4  0E00               	movlw	0
  1598  007EF6  6E35               	movwf	___aldiv@sign^0,c
  1599  007EF8  BE33               	btfsc	(___aldiv@divisor+3)^0,7,c
  1600  007EFA  EF83  F03F         	goto	u460
  1601  007EFE  EF81  F03F         	goto	u461
  1602  007F02                     u461:
  1603  007F02  EF8D  F03F         	goto	l1457
  1604  007F06                     u460:
  1605  007F06  1E33               	comf	(___aldiv@divisor+3)^0,f,c
  1606  007F08  1E32               	comf	(___aldiv@divisor+2)^0,f,c
  1607  007F0A  1E31               	comf	(___aldiv@divisor+1)^0,f,c
  1608  007F0C  6C30               	negf	___aldiv@divisor^0,c
  1609  007F0E  0E00               	movlw	0
  1610  007F10  2231               	addwfc	(___aldiv@divisor+1)^0,f,c
  1611  007F12  2232               	addwfc	(___aldiv@divisor+2)^0,f,c
  1612  007F14  2233               	addwfc	(___aldiv@divisor+3)^0,f,c
  1613  007F16  0E01               	movlw	1
  1614  007F18  6E35               	movwf	___aldiv@sign^0,c
  1615  007F1A                     l1457:
  1616  007F1A  BE2F               	btfsc	(___aldiv@dividend+3)^0,7,c
  1617  007F1C  EF94  F03F         	goto	u470
  1618  007F20  EF92  F03F         	goto	u471
  1619  007F24                     u471:
  1620  007F24  EF9E  F03F         	goto	l1463
  1621  007F28                     u470:
  1622  007F28  1E2F               	comf	(___aldiv@dividend+3)^0,f,c
  1623  007F2A  1E2E               	comf	(___aldiv@dividend+2)^0,f,c
  1624  007F2C  1E2D               	comf	(___aldiv@dividend+1)^0,f,c
  1625  007F2E  6C2C               	negf	___aldiv@dividend^0,c
  1626  007F30  0E00               	movlw	0
  1627  007F32  222D               	addwfc	(___aldiv@dividend+1)^0,f,c
  1628  007F34  222E               	addwfc	(___aldiv@dividend+2)^0,f,c
  1629  007F36  222F               	addwfc	(___aldiv@dividend+3)^0,f,c
  1630  007F38  0E01               	movlw	1
  1631  007F3A  1A35               	xorwf	___aldiv@sign^0,f,c
  1632  007F3C                     l1463:
  1633  007F3C  0E00               	movlw	0
  1634  007F3E  6E36               	movwf	___aldiv@quotient^0,c
  1635  007F40  0E00               	movlw	0
  1636  007F42  6E37               	movwf	(___aldiv@quotient+1)^0,c
  1637  007F44  0E00               	movlw	0
  1638  007F46  6E38               	movwf	(___aldiv@quotient+2)^0,c
  1639  007F48  0E00               	movlw	0
  1640  007F4A  6E39               	movwf	(___aldiv@quotient+3)^0,c
  1641  007F4C  5030               	movf	___aldiv@divisor^0,w,c
  1642  007F4E  1031               	iorwf	(___aldiv@divisor+1)^0,w,c
  1643  007F50  1032               	iorwf	(___aldiv@divisor+2)^0,w,c
  1644  007F52  1033               	iorwf	(___aldiv@divisor+3)^0,w,c
  1645  007F54  B4D8               	btfsc	status,2,c
  1646  007F56  EFAF  F03F         	goto	u481
  1647  007F5A  EFB1  F03F         	goto	u480
  1648  007F5E                     u481:
  1649  007F5E  EFE7  F03F         	goto	l1485
  1650  007F62                     u480:
  1651  007F62  0E01               	movlw	1
  1652  007F64  6E34               	movwf	___aldiv@counter^0,c
  1653  007F66  EFBB  F03F         	goto	l1471
  1654  007F6A                     l1469:
  1655  007F6A  90D8               	bcf	status,0,c
  1656  007F6C  3630               	rlcf	___aldiv@divisor^0,f,c
  1657  007F6E  3631               	rlcf	(___aldiv@divisor+1)^0,f,c
  1658  007F70  3632               	rlcf	(___aldiv@divisor+2)^0,f,c
  1659  007F72  3633               	rlcf	(___aldiv@divisor+3)^0,f,c
  1660  007F74  2A34               	incf	___aldiv@counter^0,f,c
  1661  007F76                     l1471:
  1662  007F76  AE33               	btfss	(___aldiv@divisor+3)^0,7,c
  1663  007F78  EFC0  F03F         	goto	u491
  1664  007F7C  EFC2  F03F         	goto	u490
  1665  007F80                     u491:
  1666  007F80  EFB5  F03F         	goto	l1469
  1667  007F84                     u490:
  1668  007F84                     l1473:
  1669  007F84  90D8               	bcf	status,0,c
  1670  007F86  3636               	rlcf	___aldiv@quotient^0,f,c
  1671  007F88  3637               	rlcf	(___aldiv@quotient+1)^0,f,c
  1672  007F8A  3638               	rlcf	(___aldiv@quotient+2)^0,f,c
  1673  007F8C  3639               	rlcf	(___aldiv@quotient+3)^0,f,c
  1674  007F8E  5030               	movf	___aldiv@divisor^0,w,c
  1675  007F90  5C2C               	subwf	___aldiv@dividend^0,w,c
  1676  007F92  5031               	movf	(___aldiv@divisor+1)^0,w,c
  1677  007F94  582D               	subwfb	(___aldiv@dividend+1)^0,w,c
  1678  007F96  5032               	movf	(___aldiv@divisor+2)^0,w,c
  1679  007F98  582E               	subwfb	(___aldiv@dividend+2)^0,w,c
  1680  007F9A  5033               	movf	(___aldiv@divisor+3)^0,w,c
  1681  007F9C  582F               	subwfb	(___aldiv@dividend+3)^0,w,c
  1682  007F9E  A0D8               	btfss	status,0,c
  1683  007FA0  EFD4  F03F         	goto	u501
  1684  007FA4  EFD6  F03F         	goto	u500
  1685  007FA8                     u501:
  1686  007FA8  EFDF  F03F         	goto	l1481
  1687  007FAC                     u500:
  1688  007FAC  5030               	movf	___aldiv@divisor^0,w,c
  1689  007FAE  5E2C               	subwf	___aldiv@dividend^0,f,c
  1690  007FB0  5031               	movf	(___aldiv@divisor+1)^0,w,c
  1691  007FB2  5A2D               	subwfb	(___aldiv@dividend+1)^0,f,c
  1692  007FB4  5032               	movf	(___aldiv@divisor+2)^0,w,c
  1693  007FB6  5A2E               	subwfb	(___aldiv@dividend+2)^0,f,c
  1694  007FB8  5033               	movf	(___aldiv@divisor+3)^0,w,c
  1695  007FBA  5A2F               	subwfb	(___aldiv@dividend+3)^0,f,c
  1696  007FBC  8036               	bsf	___aldiv@quotient^0,0,c
  1697  007FBE                     l1481:
  1698  007FBE  90D8               	bcf	status,0,c
  1699  007FC0  3233               	rrcf	(___aldiv@divisor+3)^0,f,c
  1700  007FC2  3232               	rrcf	(___aldiv@divisor+2)^0,f,c
  1701  007FC4  3231               	rrcf	(___aldiv@divisor+1)^0,f,c
  1702  007FC6  3230               	rrcf	___aldiv@divisor^0,f,c
  1703  007FC8  2E34               	decfsz	___aldiv@counter^0,f,c
  1704  007FCA  EFC2  F03F         	goto	l1473
  1705  007FCE                     l1485:
  1706  007FCE  5035               	movf	___aldiv@sign^0,w,c
  1707  007FD0  B4D8               	btfsc	status,2,c
  1708  007FD2  EFED  F03F         	goto	u511
  1709  007FD6  EFEF  F03F         	goto	u510
  1710  007FDA                     u511:
  1711  007FDA  EFF7  F03F         	goto	l1489
  1712  007FDE                     u510:
  1713  007FDE  1E39               	comf	(___aldiv@quotient+3)^0,f,c
  1714  007FE0  1E38               	comf	(___aldiv@quotient+2)^0,f,c
  1715  007FE2  1E37               	comf	(___aldiv@quotient+1)^0,f,c
  1716  007FE4  6C36               	negf	___aldiv@quotient^0,c
  1717  007FE6  0E00               	movlw	0
  1718  007FE8  2237               	addwfc	(___aldiv@quotient+1)^0,f,c
  1719  007FEA  2238               	addwfc	(___aldiv@quotient+2)^0,f,c
  1720  007FEC  2239               	addwfc	(___aldiv@quotient+3)^0,f,c
  1721  007FEE                     l1489:
  1722  007FEE  C036  F02C         	movff	___aldiv@quotient,?___aldiv
  1723  007FF2  C037  F02D         	movff	___aldiv@quotient+1,?___aldiv+1
  1724  007FF6  C038  F02E         	movff	___aldiv@quotient+2,?___aldiv+2
  1725  007FFA  C039  F02F         	movff	___aldiv@quotient+3,?___aldiv+3
  1726  007FFE  0012               	return		;funcret
  1727  008000                     __end_of___aldiv:
  1728                           	opt callstack 0
  1729  0000                     
  1730                           	psect	rparam
  1731  0000                     tosu	equ	0xFFF
  1732                           tosh	equ	0xFFE
  1733                           tosl	equ	0xFFD
  1734                           stkptr	equ	0xFFC
  1735                           pclatu	equ	0xFFB
  1736                           pclath	equ	0xFFA
  1737                           pcl	equ	0xFF9
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           indf0	equ	0xFEF
  1745                           postinc0	equ	0xFEE
  1746                           postdec0	equ	0xFED
  1747                           preinc0	equ	0xFEC
  1748                           plusw0	equ	0xFEB
  1749                           fsr0h	equ	0xFEA
  1750                           fsr0l	equ	0xFE9
  1751                           wreg	equ	0xFE8
  1752                           indf1	equ	0xFE7
  1753                           postinc1	equ	0xFE6
  1754                           postdec1	equ	0xFE5
  1755                           preinc1	equ	0xFE4
  1756                           plusw1	equ	0xFE3
  1757                           fsr1h	equ	0xFE2
  1758                           fsr1l	equ	0xFE1
  1759                           bsr	equ	0xFE0
  1760                           indf2	equ	0xFDF
  1761                           postinc2	equ	0xFDE
  1762                           postdec2	equ	0xFDD
  1763                           preinc2	equ	0xFDC
  1764                           plusw2	equ	0xFDB
  1765                           fsr2h	equ	0xFDA
  1766                           fsr2l	equ	0xFD9
  1767                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      92
    BANK0           160      0      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _verification->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite
    _UARTConfi->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2076
                          _UARTConfi
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    1351
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _end                                                  2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0     901
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (3) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (3) _UARTWrite                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTConfi                                            6     4      2     725
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTConfi
     ___aldiv
   _verification
     _Coord_Validated
       _UARTWrite
     _Ins_Validated
       _UARTWrite
     _Par_Validated
       _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
     _end
       _UARTWrite
     _start
       _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       D       5        8.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      5C       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      20        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 13:22:42 2019

                      l32 7AC8                        l33 7ACC                        l42 7C08  
                      l38 7C7E                        l49 7D7E                        l65 7A8A  
                      l58 7CFA                        l66 7A8C                        l91 7A32  
                      l85 7B94                        l94 79F8                        l88 7A20  
                      l97 7A08                       l118 7EF2                       l145 7A4C  
                     l254 7E0E                       l337 7FFE                       u310 7A06  
                     u311 7A02                       u320 7A2E                       u400 7D32  
                     u321 7A2A                       u401 7D2E                       u410 7D78  
                     u330 7E4E                       u411 7D74                       u331 7E4A  
                     u500 7FAC                       u420 7C9A                       u340 7AC8  
                     u501 7FA8                       u421 7C96                       u341 7AC4  
                     u510 7FDE                       u430 7CB0                       u350 7C4E  
                     u511 7FDA                       u431 7CAC                       u351 7C4A  
                     u440 7CF4                       u360 7BAC                       u441 7CF0  
                     u361 7BA8                       u370 7BBE                       u450 7A8A  
                     u371 7BBA                       u451 7A86                       u460 7F06  
                     u380 7C02                       u461 7F02                       u381 7BFE  
                     u470 7F28                       u390 7D12                       u471 7F24  
                     u391 7D0E                       u480 7F62                       u481 7F5E  
                     u490 7F84                       u491 7F80                       _e_c 0060  
                     _cmd 7C0A                       _end 7A50                       _ons 0001  
                     wreg 000FE8              __CFG_LVP$OFF 000000               coord@buffer 003A  
            __CFG_WDT$OFF 000000                      l1301 7AA8                      l1311 7C10  
                    l1303 7AAC                      l1401 7D7C                      l1321 7C2E  
                    l1313 7C14                      l1305 7ACA                      l1411 7CB0  
                    l1323 7C32                      l1501 7B8A                      l1413 7CB4  
                    l1405 7C80                      l1341 7BC2                      l1333 7B96  
                    l1325 7C4E                      l1309 7C0A                      l1503 7B8C  
                    l1271 7A2E                      l1431 7CF4                      l1407 7C84  
                    l1335 7B9A                      l1263 79F8                      l1327 7C7A  
                    l1319 7C1C                      l1511 7D80                      l1505 7B8E  
                    l1433 7CF8                      l1425 7CC2                      l1409 7C9A  
                    l1361 7C06                      l1353 7BD0                      l1337 7BAC  
                    l1265 7A06                      l1281 7E1E                      l1273 7E10  
                    l1329 7C7C                      l1521 7DB0                      l1513 7D88  
                    ?_cmd 002C                      l1451 7EF8                      l1507 7B90  
                    l1427 7CD4                      l1419 7CBA                      l1371 7D1A  
                    l1355 7BE2                      l1339 7BBE                      l1347 7BC8  
                    l1291 7EA6                      l1283 7E2E                      l1443 7A58  
                    l1523 7DBA                      l1515 7D92                      l1531 7DC2  
                    l1461 7F38                      l1453 7F06                      l1509 7B92  
                    l1269 7A20                      l1429 7CD8                      l1365 7CFC  
                    l1357 7BE6                      l1285 7E32                      l1445 7A6A  
                    l1437 7A50                      l1293 7A8E                      l1517 7D9C  
                    l1541 7A44                      l1471 7F76                      l1463 7F3C  
                    l1455 7F16                      l1367 7D00                      l1359 7C02  
                    l1287 7E4E                      l1279 7E18                      l1447 7A6E  
                    l1519 7DA6                      l1543 7A48                      l1481 7FBE  
                    l1473 7F84                      l1465 7F4C                      l1457 7F1A  
                    l1449 7EF4                      l1393 7D46                      l1369 7D12  
                    l1377 7D20                      l1289 7E66                      l1537 7A34  
                    l1483 7FC8                      l1475 7F8E                      l1467 7F62  
                    l1459 7F28                      l1395 7D58                      l1379 7D32  
                    l1387 7D3E                      l1299 7A96                      l1539 7A38  
                    ?_end 002C                      l1477 7FAC                      l1469 7F6A  
                    l1485 7FCE                      l1493 7B24                      l1397 7D5C  
                    l1549 7DD8                      l1487 7FDE                      l1479 7FBC  
                    l1495 7B28                      l1399 7D78                      l1489 7FEE  
                    l1497 7B86                      l1499 7B88                      _RCIF 007CF5  
                    _Par1 002B                      _Par2 0029                      _dirA 0011  
                    _dirB 000F                      cmd@i 0046                      _main 7A34  
                    _init 004A                      end@i 002D                      _okay 0059  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9         ??_Coord_Validated 002D                      prodh 000FF4  
                    prodl 000FF3                      start 0000              ___param_bank 000000  
           _Ins_Validated 7CFC                     ??_cmd 0046                     ??_end 002D  
           __CFG_PLLDIV$2 000000           __end_of___aldiv 8000                     ?_main 002C  
                   _RCREG 000FAE             _Par_Validated 7B96                     _SPBRG 000FAF  
                   _PORTC 000F82                     _TRISC 000F94                     _TXREG 000FAD  
      __size_of_UARTConfi 0072                     _Error 0054          __end_of_UARTRead 7A0A  
      __size_of_UARTWrite 0016                     _click 0023                     _coord 7E10  
                   _start 7A8E                     tablat 000FF5                     status 000FD8  
          __CFG_MCLRE$OFF 000000           __initialization 7ACE              __end_of_main 7A50  
          ?_Ins_Validated 002C                    ??_main 004A            ?_Par_Validated 002C  
           __activetblptr 000002                    ?_coord 002C                    ?_start 002C  
                  _OSCCON 000FD3         __end_of_UARTConfi 7B96               _CoordRelatX 0019  
             _CoordRelatY 0017                 ??___aldiv 0034         __end_of_UARTWrite 7A34  
                  _cord_x 0027                    _cord_y 0025                    _letter 002A  
                  _pasosA 000D                    _pasosB 000B                    clear_0 7B14  
                  coord@L 002E                    coord@i 0044                    coord@x 0030  
                  coord@y 0032              __pdataCOMRAM 004A                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                    start@i 002D  
              __accesstop 0060   __end_of__initialization 7B1A           __CFG_PBADEN$OFF 000000  
           ___rparam_used 000001           ??_Ins_Validated 002D            __pcstackCOMRAM 002C  
            __pidataBANK0 79EB                 ?_UARTRead 002C             __end_of_coord 7EF4  
           __end_of_start 7ACE           ??_Par_Validated 002D            _UARTConfi$1169 003C  
           _PasosActuales 0009           _Coord_Validated 7C80                   ??_coord 0036  
                 ??_start 002D                ??_UARTRead 002C          Coord_Validated@i 002D  
                 __Hparam 0000                   __Lparam 0000                   ___aldiv 7EF4  
                 __pcinit 7ACE                   __ramtop 0800                   __ptext0 7A34  
                 __ptext1 7D80                   __ptext2 7A8E                   __ptext3 7A50  
                 __ptext4 7C0A                   __ptext5 7E10                   __ptext6 79F8  
                 __ptext7 7B96                   __ptext8 7CFC                   __ptext9 7C80  
 __end_of_Coord_Validated 7CFC              __size_of_cmd 0076              __size_of_end 003E  
        ___aldiv@dividend 002C                   coord@P1 002C                   coord@P2 0034  
    end_of_initialization 7B1A             __Lmediumconst 0000                 _RCSTAbits 000FAB  
        ___aldiv@quotient 0036                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc2 000FDE                 _UARTConfi 7B24  
               _UARTWrite 7A1E                 _PORTCbits 000F82                 _PORTDbits 000F83  
               _TRISCbits 000F94             ?_verification 002C                 _TXSTAbits 000FAC  
              ?_UARTConfi 003A             __pidataCOMRAM 7A0B                 _CoordAntX 0021  
               _CoordAntY 001F         __size_of_UARTRead 0012                 _CoordNewX 001B  
               _CoordNewY 001D                ?_UARTWrite 002C          ?_Coord_Validated 002C  
     start_initialization 7ACE               __end_of_cmd 7C80               __end_of_end 7A8E  
          ??_verification 0048             UARTConfi@BAUD 003A                 _NextState 0024  
               _MovMotorA 0015                 _MovMotorB 0013            _PasosActualesB 0007  
   __end_of_Ins_Validated 7D80               __pdataBANK0 0060     __end_of_Par_Validated 7C0A  
             __pbssCOMRAM 0001                  ?___aldiv 002C               ??_UARTConfi 003C  
             ??_UARTWrite 002C            __size_of_coord 00E4            __size_of_start 0040  
         ___aldiv@divisor 0030           ___aldiv@counter 0034                  _PIR1bits 000F9E  
                _UARTRead 79F8      __end_of_verification 7E10                 coord@read 0043  
                _LedIsOn1 0003                  _LedIsOn2 0005             UARTWrite@data 002C  
               copy_data0 7AE2                 copy_data1 7B02                  __Hrparam 0000  
                __Lrparam 0000          __size_of___aldiv 010C                  __ptext10 7A1E  
                __ptext11 7B24                  __ptext12 7EF4            Ins_Validated@i 002D  
           __size_of_main 001C            Par_Validated@i 002D  __size_of_Coord_Validated 007C  
   __size_of_verification 0090       __CFG_FOSC$INTOSC_HS 000000              ___aldiv@sign 0035  
  __size_of_Ins_Validated 0084              _verification 7D80    __size_of_Par_Validated 0074  
