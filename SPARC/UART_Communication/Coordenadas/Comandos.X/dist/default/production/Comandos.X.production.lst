

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 03 15:42:04 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  007365                     __pidataCOMRAM:
    76                           	opt callstack 0
    77                           
    78                           ;initializer for Movimiento@F3249
    79  007365  73                 	db	115
    80  007366  6C                 	db	108
    81  007367  69                 	db	105
    82  007368  64                 	db	100
    83  007369  65                 	db	101
    84                           
    85                           ;initializer for Movimiento@F3246
    86  00736A  63                 	db	99
    87  00736B  6C                 	db	108
    88  00736C  69                 	db	105
    89  00736D  63                 	db	99
    90  00736E  6B                 	db	107
    91                           
    92                           ;initializer for _Error
    93  00736F  45                 	db	69
    94  007370  72                 	db	114
    95  007371  72                 	db	114
    96  007372  6F                 	db	111
    97  007373  72                 	db	114
    98                           
    99                           	psect	idataBANK0
   100  00739C                     __pidataBANK0:
   101                           	opt callstack 0
   102                           
   103                           ;initializer for _e_c
   104  00739C  45                 	db	69
   105  00739D  6E                 	db	110
   106  00739E  74                 	db	116
   107  00739F  65                 	db	101
   108  0073A0  72                 	db	114
   109  0073A1  5F                 	db	95
   110  0073A2  63                 	db	99
   111  0073A3  6F                 	db	111
   112  0073A4  6D                 	db	109
   113  0073A5  6D                 	db	109
   114  0073A6  61                 	db	97
   115  0073A7  6E                 	db	110
   116  0073A8  64                 	db	100
   117                           
   118                           ;initializer for _init
   119  0073A9  57                 	db	87
   120  0073AA  61                 	db	97
   121  0073AB  69                 	db	105
   122  0073AC  74                 	db	116
   123  0073AD  69                 	db	105
   124  0073AE  6E                 	db	110
   125  0073AF  67                 	db	103
   126  0073B0  2E                 	db	46
   127  0073B1  2E                 	db	46
   128  0073B2  2E                 	db	46
   129                           
   130                           ;initializer for _gracias
   131  0073B3  47                 	db	71
   132  0073B4  72                 	db	114
   133  0073B5  61                 	db	97
   134  0073B6  63                 	db	99
   135  0073B7  69                 	db	105
   136  0073B8  61                 	db	97
   137  0073B9  73                 	db	115
   138  0000                     _TMR2	set	4044
   139  0000                     _T2CON	set	4042
   140  0000                     _CCPR2L	set	4027
   141  0000                     _CCP2CON	set	4026
   142  0000                     _CCPR1L	set	4030
   143  0000                     _CCP1CON	set	4029
   144  0000                     _PR2	set	4043
   145  0000                     _TRISB	set	3987
   146  0000                     _LATB	set	3978
   147  0000                     _PORTB	set	3969
   148  0000                     _TRISC	set	3988
   149  0000                     _LATC	set	3979
   150  0000                     _TRISD	set	3989
   151  0000                     _LATD	set	3980
   152  0000                     _PORTD	set	3971
   153  0000                     _ADCON1	set	4033
   154  0000                     _CVRCONbits	set	4021
   155  0000                     _CMCON	set	4020
   156  0000                     _OSCCON	set	4051
   157  0000                     _INTCON3bits	set	4080
   158  0000                     _INTCON2bits	set	4081
   159  0000                     _RCONbits	set	4048
   160  0000                     _INTCONbits	set	4082
   161  0000                     _PORTCbits	set	3970
   162  0000                     _PORTDbits	set	3971
   163  0000                     _RCREG	set	4014
   164  0000                     _TXREG	set	4013
   165  0000                     _PIR1bits	set	3998
   166  0000                     _RCSTAbits	set	4011
   167  0000                     _TXSTAbits	set	4012
   168  0000                     _SPBRG	set	4015
   169  0000                     _TRISCbits	set	3988
   170  0000                     _PORTC	set	3970
   171  0000                     _TMR2ON	set	32338
   172  0000                     _RCIF	set	31989
   173                           
   174                           ; #config settings
   175  0000                     
   176                           	psect	cinit
   177  00750C                     __pcinit:
   178                           	opt callstack 0
   179  00750C                     start_initialization:
   180                           	opt callstack 0
   181  00750C                     __initialization:
   182                           	opt callstack 0
   183                           
   184                           ; Initialize objects allocated to BANK0 (30 bytes)
   185                           ; load TBLPTR registers with __pidataBANK0
   186  00750C  0E9C               	movlw	low __pidataBANK0
   187  00750E  6EF6               	movwf	tblptrl,c
   188  007510  0E73               	movlw	high __pidataBANK0
   189  007512  6EF7               	movwf	tblptrh,c
   190  007514  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   191  007516  6EF8               	movwf	tblptru,c
   192  007518  EE00  F060         	lfsr	0,__pdataBANK0
   193  00751C  EE10 F01E          	lfsr	1,30
   194  007520                     copy_data0:
   195  007520  0009               	tblrd		*+
   196  007522  CFF5 FFEE          	movff	tablat,postinc0
   197  007526  50E5               	movf	postdec1,w,c
   198  007528  50E1               	movf	fsr1l,w,c
   199  00752A  E1FA               	bnz	copy_data0
   200                           
   201                           ; Initialize objects allocated to COMRAM (15 bytes)
   202                           ; load TBLPTR registers with __pidataCOMRAM
   203  00752C  0E65               	movlw	low __pidataCOMRAM
   204  00752E  6EF6               	movwf	tblptrl,c
   205  007530  0E73               	movlw	high __pidataCOMRAM
   206  007532  6EF7               	movwf	tblptrh,c
   207  007534  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   208  007536  6EF8               	movwf	tblptru,c
   209  007538  EE00  F04C         	lfsr	0,__pdataCOMRAM
   210  00753C  EE10 F00F          	lfsr	1,15
   211  007540                     copy_data1:
   212  007540  0009               	tblrd		*+
   213  007542  CFF5 FFEE          	movff	tablat,postinc0
   214  007546  50E5               	movf	postdec1,w,c
   215  007548  50E1               	movf	fsr1l,w,c
   216  00754A  E1FA               	bnz	copy_data1
   217                           
   218                           ; Clear objects allocated to COMRAM (33 bytes)
   219  00754C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   220  007550  0E21               	movlw	33
   221  007552                     clear_0:
   222  007552  6AEE               	clrf	postinc0,c
   223  007554  06E8               	decf	wreg,f,c
   224  007556  E1FD               	bnz	clear_0
   225  007558                     end_of_initialization:
   226                           	opt callstack 0
   227  007558                     __end_of__initialization:
   228                           	opt callstack 0
   229  007558  0E00               	movlw	low (__Lmediumconst shr (0+16))
   230  00755A  6EF8               	movwf	tblptru,c
   231  00755C  0100               	movlb	0
   232  00755E  EF67  F03E         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMRAM
   235  00002B                     __pbssCOMRAM:
   236                           	opt callstack 0
   237  00002B                     _BanderaDisY:
   238                           	opt callstack 0
   239  00002B                     	ds	2
   240  00002D                     _BanderaDisX:
   241                           	opt callstack 0
   242  00002D                     	ds	2
   243  00002F                     _PasosY:
   244                           	opt callstack 0
   245  00002F                     	ds	2
   246  000031                     _PasosX:
   247                           	opt callstack 0
   248  000031                     	ds	2
   249  000033                     _ons:
   250                           	opt callstack 0
   251  000033                     	ds	2
   252  000035                     _PasosActuales:
   253                           	opt callstack 0
   254  000035                     	ds	2
   255  000037                     _pasosRecorridos:
   256                           	opt callstack 0
   257  000037                     	ds	2
   258  000039                     _CoordAntY:
   259                           	opt callstack 0
   260  000039                     	ds	2
   261  00003B                     _CoordAntX:
   262                           	opt callstack 0
   263  00003B                     	ds	2
   264  00003D                     _x:
   265                           	opt callstack 0
   266  00003D                     	ds	2
   267  00003F                     _click:
   268                           	opt callstack 0
   269  00003F                     	ds	1
   270  000040                     _NextState:
   271                           	opt callstack 0
   272  000040                     	ds	1
   273  000041                     _CoordRelatY:
   274                           	opt callstack 0
   275  000041                     	ds	2
   276  000043                     _CoordRelatX:
   277                           	opt callstack 0
   278  000043                     	ds	2
   279  000045                     _cord_y:
   280                           	opt callstack 0
   281  000045                     	ds	2
   282  000047                     _cord_x:
   283                           	opt callstack 0
   284  000047                     	ds	2
   285  000049                     _Par2:
   286                           	opt callstack 0
   287  000049                     	ds	1
   288  00004A                     _letter:
   289                           	opt callstack 0
   290  00004A                     	ds	1
   291  00004B                     _Par1:
   292                           	opt callstack 0
   293  00004B                     	ds	1
   294                           
   295                           	psect	dataCOMRAM
   296  00004C                     __pdataCOMRAM:
   297                           	opt callstack 0
   298  00004C                     Movimiento@F3249:
   299                           	opt callstack 0
   300  00004C                     	ds	5
   301  000051                     Movimiento@F3246:
   302                           	opt callstack 0
   303  000051                     	ds	5
   304  000056                     _Error:
   305                           	opt callstack 0
   306  000056                     	ds	5
   307                           
   308                           	psect	dataBANK0
   309  000060                     __pdataBANK0:
   310                           	opt callstack 0
   311  000060                     _e_c:
   312                           	opt callstack 0
   313  000060                     	ds	13
   314  00006D                     _init:
   315                           	opt callstack 0
   316  00006D                     	ds	10
   317  000077                     _gracias:
   318                           	opt callstack 0
   319  000077                     	ds	7
   320                           
   321                           	psect	cstackCOMRAM
   322  000001                     __pcstackCOMRAM:
   323                           	opt callstack 0
   324  000001                     ?___wmul:
   325                           	opt callstack 0
   326  000001                     ?___lwmod:
   327                           	opt callstack 0
   328  000001                     ?___aldiv:
   329                           	opt callstack 0
   330  000001                     UARTWrite@data:
   331                           	opt callstack 0
   332  000001                     coord@P1:
   333                           	opt callstack 0
   334  000001                     ContarPulsos@pasos:
   335                           	opt callstack 0
   336  000001                     ___wmul@multiplier:
   337                           	opt callstack 0
   338  000001                     ___lwmod@dividend:
   339                           	opt callstack 0
   340  000001                     ___aldiv@dividend:
   341                           	opt callstack 0
   342                           
   343                           ; 4 bytes @ 0x0
   344  000001                     	ds	1
   345  000002                     start@i:
   346                           	opt callstack 0
   347  000002                     Par_Validated@i:
   348                           	opt callstack 0
   349  000002                     Ins_Validated@i:
   350                           	opt callstack 0
   351  000002                     Coord_Validated@i:
   352                           	opt callstack 0
   353  000002                     end@i:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     coord@L:
   359                           	opt callstack 0
   360  000003                     ___wmul@multiplicand:
   361                           	opt callstack 0
   362  000003                     ___lwmod@divisor:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0x2
   366  000003                     	ds	2
   367  000005                     ___lwmod@counter:
   368                           	opt callstack 0
   369  000005                     coord@x:
   370                           	opt callstack 0
   371  000005                     ___wmul@product:
   372                           	opt callstack 0
   373  000005                     ___aldiv@divisor:
   374                           	opt callstack 0
   375                           
   376                           ; 4 bytes @ 0x4
   377  000005                     	ds	1
   378  000006                     ?___lwdiv:
   379                           	opt callstack 0
   380  000006                     ___lwdiv@dividend:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x5
   384  000006                     	ds	1
   385  000007                     ??_Movimiento:
   386  000007                     coord@y:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390  000007                     	ds	1
   391  000008                     ___lwdiv@divisor:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0x7
   395  000008                     	ds	1
   396  000009                     ___aldiv@counter:
   397                           	opt callstack 0
   398  000009                     coord@P2:
   399                           	opt callstack 0
   400  000009                     Movimiento@loquequieras:
   401                           	opt callstack 0
   402                           
   403                           ; 5 bytes @ 0x8
   404  000009                     	ds	1
   405  00000A                     ___aldiv@sign:
   406                           	opt callstack 0
   407  00000A                     ___lwdiv@quotient:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x9
   411  00000A                     	ds	1
   412  00000B                     ??_coord:
   413  00000B                     ___aldiv@quotient:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0xA
   417  00000B                     	ds	1
   418  00000C                     ___lwdiv@counter:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0xB
   422  00000C                     	ds	2
   423  00000E                     Movimiento@loquequieras2:
   424                           	opt callstack 0
   425                           
   426                           ; 5 bytes @ 0xD
   427  00000E                     	ds	1
   428  00000F                     UARTConfi@BAUD:
   429                           	opt callstack 0
   430  00000F                     coord@buffer:
   431                           	opt callstack 0
   432                           
   433                           ; 9 bytes @ 0xE
   434  00000F                     	ds	2
   435  000011                     _UARTConfi$1730:
   436                           	opt callstack 0
   437                           
   438                           ; 4 bytes @ 0x10
   439  000011                     	ds	2
   440  000013                     Movimiento@i:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x12
   444  000013                     	ds	2
   445  000015                     Movimiento@i_720:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x14
   449  000015                     	ds	3
   450  000018                     coord@read:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x17
   454  000018                     	ds	1
   455  000019                     coord@i:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x18
   459  000019                     	ds	2
   460  00001B                     cmd@i:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x1A
   464  00001B                     	ds	2
   465  00001D                     ??_verification:
   466                           
   467                           ; 1 bytes @ 0x1C
   468  00001D                     	ds	2
   469  00001F                     main@a:
   470                           	opt callstack 0
   471                           
   472                           ; 3 bytes @ 0x1E
   473  00001F                     	ds	3
   474  000022                     main@b:
   475                           	opt callstack 0
   476                           
   477                           ; 3 bytes @ 0x21
   478  000022                     	ds	3
   479  000025                     _main$1731:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x24
   483  000025                     	ds	2
   484  000027                     main@i:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x26
   488  000027                     	ds	2
   489  000029                     main@i_419:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x28
   493  000029                     	ds	2
   494                           
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 33 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  i               2   40[COMRAM] int 
   505 ;;  i               2   38[COMRAM] int 
   506 ;;  b               3   33[COMRAM] unsigned char [3]
   507 ;;  a               3   30[COMRAM] unsigned char [3]
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   517 ;;      Params:         0       0       0       0       0       0       0       0       0
   518 ;;      Locals:        12       0       0       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0       0       0
   520 ;;      Totals:        12       0       0       0       0       0       0       0       0
   521 ;;Total ram usage:       12 bytes
   522 ;; Hardware stack levels required when called:    4
   523 ;; This function calls:
   524 ;;		_Configuracion
   525 ;;		_InicialX
   526 ;;		_InicialY
   527 ;;		_Movimiento
   528 ;;		_UARTWrite
   529 ;;		___lwdiv
   530 ;;		___lwmod
   531 ;;		_verification
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538  007CCE                     __ptext0:
   539                           	opt callstack 0
   540  007CCE                     _main:
   541                           	opt callstack 27
   542  007CCE                     
   543                           ;main.c: 34:     Configuracion();
   544  007CCE  ECDF  F03A         	call	_Configuracion	;wreg free
   545  007CD2                     
   546                           ;main.c: 35:     PORTDbits.RD2=1;
   547  007CD2  8483               	bsf	131,2,c	;volatile
   548  007CD4                     
   549                           ;main.c: 36:     PORTDbits.RD3=1;
   550  007CD4  8683               	bsf	131,3,c	;volatile
   551                           
   552                           ;main.c: 37:     InicialY();
   553  007CD6  ECED  F039         	call	_InicialY	;wreg free
   554                           
   555                           ;main.c: 38:     InicialX();
   556  007CDA  ECDD  F039         	call	_InicialX	;wreg free
   557  007CDE                     l2240:
   558                           
   559                           ;main.c: 41:         x=1;
   560  007CDE  0E00               	movlw	0
   561  007CE0  6E3E               	movwf	(_x+1)^0,c
   562  007CE2  0E01               	movlw	1
   563  007CE4  6E3D               	movwf	_x^0,c
   564  007CE6                     
   565                           ;main.c: 42:        verification();
   566  007CE6  ECAC  F03C         	call	_verification	;wreg free
   567  007CEA                     
   568                           ;main.c: 43:         Movimiento();
   569  007CEA  EC6E  F03D         	call	_Movimiento	;wreg free
   570  007CEE                     
   571                           ;main.c: 45:         char a[3];;main.c: 46:         char b[3];;main.c: 48:         a[0]=
      +                          (CoordAntX/100)+48;
   572  007CEE  C03B  F006         	movff	_CoordAntX,___lwdiv@dividend
   573  007CF2  C03C  F007         	movff	_CoordAntX+1,___lwdiv@dividend+1
   574  007CF6  0E00               	movlw	0
   575  007CF8  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   576  007CFA  0E64               	movlw	100
   577  007CFC  6E08               	movwf	___lwdiv@divisor^0,c
   578  007CFE  ECB2  F03B         	call	___lwdiv	;wreg free
   579  007D02  5006               	movf	?___lwdiv^0,w,c
   580  007D04  0F30               	addlw	48
   581  007D06  6E1F               	movwf	main@a^0,c
   582  007D08                     
   583                           ;main.c: 49:         a[1]=((CoordAntX%100)/10)+48;
   584  007D08  0E00               	movlw	0
   585  007D0A  6E04               	movwf	(___lwmod@divisor+1)^0,c
   586  007D0C  0E64               	movlw	100
   587  007D0E  6E03               	movwf	___lwmod@divisor^0,c
   588  007D10  C03B  F001         	movff	_CoordAntX,___lwmod@dividend
   589  007D14  C03C  F002         	movff	_CoordAntX+1,___lwmod@dividend+1
   590  007D18  EC0E  F03B         	call	___lwmod	;wreg free
   591  007D1C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   592  007D20  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   593  007D24  0E00               	movlw	0
   594  007D26  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   595  007D28  0E0A               	movlw	10
   596  007D2A  6E08               	movwf	___lwdiv@divisor^0,c
   597  007D2C  ECB2  F03B         	call	___lwdiv	;wreg free
   598  007D30  5006               	movf	?___lwdiv^0,w,c
   599  007D32  0F30               	addlw	48
   600  007D34  6E20               	movwf	(main@a+1)^0,c
   601  007D36                     
   602                           ;main.c: 50:         a[2]=((CoordAntX%100)%10)+48;
   603  007D36  0E00               	movlw	0
   604  007D38  6E04               	movwf	(___lwmod@divisor+1)^0,c
   605  007D3A  0E64               	movlw	100
   606  007D3C  6E03               	movwf	___lwmod@divisor^0,c
   607  007D3E  C03B  F001         	movff	_CoordAntX,___lwmod@dividend
   608  007D42  C03C  F002         	movff	_CoordAntX+1,___lwmod@dividend+1
   609  007D46  EC0E  F03B         	call	___lwmod	;wreg free
   610  007D4A  C001  F025         	movff	?___lwmod,_main$1731
   611  007D4E  C002  F026         	movff	?___lwmod+1,_main$1731+1
   612  007D52                     
   613                           ;main.c: 50:         a[2]=((CoordAntX%100)%10)+48;
   614  007D52  C025  F001         	movff	_main$1731,___lwmod@dividend
   615  007D56  C026  F002         	movff	_main$1731+1,___lwmod@dividend+1
   616  007D5A  0E00               	movlw	0
   617  007D5C  6E04               	movwf	(___lwmod@divisor+1)^0,c
   618  007D5E  0E0A               	movlw	10
   619  007D60  6E03               	movwf	___lwmod@divisor^0,c
   620  007D62  EC0E  F03B         	call	___lwmod	;wreg free
   621  007D66  5001               	movf	?___lwmod^0,w,c
   622  007D68  0F30               	addlw	48
   623  007D6A  6E21               	movwf	(main@a+2)^0,c
   624  007D6C                     
   625                           ;main.c: 52:         b[0]=(CoordAntY/100)+48;
   626  007D6C  C039  F006         	movff	_CoordAntY,___lwdiv@dividend
   627  007D70  C03A  F007         	movff	_CoordAntY+1,___lwdiv@dividend+1
   628  007D74  0E00               	movlw	0
   629  007D76  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   630  007D78  0E64               	movlw	100
   631  007D7A  6E08               	movwf	___lwdiv@divisor^0,c
   632  007D7C  ECB2  F03B         	call	___lwdiv	;wreg free
   633  007D80  5006               	movf	?___lwdiv^0,w,c
   634  007D82  0F30               	addlw	48
   635  007D84  6E22               	movwf	main@b^0,c
   636  007D86                     
   637                           ;main.c: 53:         b[1]=((CoordAntY%100)/10)+48;
   638  007D86  0E00               	movlw	0
   639  007D88  6E04               	movwf	(___lwmod@divisor+1)^0,c
   640  007D8A  0E64               	movlw	100
   641  007D8C  6E03               	movwf	___lwmod@divisor^0,c
   642  007D8E  C039  F001         	movff	_CoordAntY,___lwmod@dividend
   643  007D92  C03A  F002         	movff	_CoordAntY+1,___lwmod@dividend+1
   644  007D96  EC0E  F03B         	call	___lwmod	;wreg free
   645  007D9A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   646  007D9E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   647  007DA2  0E00               	movlw	0
   648  007DA4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   649  007DA6  0E0A               	movlw	10
   650  007DA8  6E08               	movwf	___lwdiv@divisor^0,c
   651  007DAA  ECB2  F03B         	call	___lwdiv	;wreg free
   652  007DAE  5006               	movf	?___lwdiv^0,w,c
   653  007DB0  0F30               	addlw	48
   654  007DB2  6E23               	movwf	(main@b+1)^0,c
   655  007DB4                     
   656                           ;main.c: 54:         b[2]=((CoordAntY%100)%10)+48;
   657  007DB4  0E00               	movlw	0
   658  007DB6  6E04               	movwf	(___lwmod@divisor+1)^0,c
   659  007DB8  0E64               	movlw	100
   660  007DBA  6E03               	movwf	___lwmod@divisor^0,c
   661  007DBC  C039  F001         	movff	_CoordAntY,___lwmod@dividend
   662  007DC0  C03A  F002         	movff	_CoordAntY+1,___lwmod@dividend+1
   663  007DC4  EC0E  F03B         	call	___lwmod	;wreg free
   664  007DC8  C001  F025         	movff	?___lwmod,_main$1731
   665  007DCC  C002  F026         	movff	?___lwmod+1,_main$1731+1
   666  007DD0                     
   667                           ;main.c: 54:         b[2]=((CoordAntY%100)%10)+48;
   668  007DD0  C025  F001         	movff	_main$1731,___lwmod@dividend
   669  007DD4  C026  F002         	movff	_main$1731+1,___lwmod@dividend+1
   670  007DD8  0E00               	movlw	0
   671  007DDA  6E04               	movwf	(___lwmod@divisor+1)^0,c
   672  007DDC  0E0A               	movlw	10
   673  007DDE  6E03               	movwf	___lwmod@divisor^0,c
   674  007DE0  EC0E  F03B         	call	___lwmod	;wreg free
   675  007DE4  5001               	movf	?___lwmod^0,w,c
   676  007DE6  0F30               	addlw	48
   677  007DE8  6E24               	movwf	(main@b+2)^0,c
   678  007DEA                     
   679                           ;main.c: 56:         for(int i=0; i<3; i++){
   680  007DEA  0E00               	movlw	0
   681  007DEC  6E28               	movwf	(main@i+1)^0,c
   682  007DEE  0E00               	movlw	0
   683  007DF0  6E27               	movwf	main@i^0,c
   684  007DF2                     l2268:
   685                           
   686                           ;main.c: 58:             UARTWrite(a[i]);
   687  007DF2  0E1F               	movlw	low main@a
   688  007DF4  2427               	addwf	main@i^0,w,c
   689  007DF6  6ED9               	movwf	fsr2l,c
   690  007DF8  0E00               	movlw	high main@a
   691  007DFA  2028               	addwfc	(main@i+1)^0,w,c
   692  007DFC  6EDA               	movwf	fsr2h,c
   693  007DFE  50DF               	movf	indf2,w,c
   694  007E00  ECC3  F039         	call	_UARTWrite
   695  007E04                     
   696                           ;main.c: 59:         }
   697  007E04  4A27               	infsnz	main@i^0,f,c
   698  007E06  2A28               	incf	(main@i+1)^0,f,c
   699  007E08  BE28               	btfsc	(main@i+1)^0,7,c
   700  007E0A  EF10  F03F         	goto	u1051
   701  007E0E  5028               	movf	(main@i+1)^0,w,c
   702  007E10  E109               	bnz	u1050
   703  007E12  0E03               	movlw	3
   704  007E14  5C27               	subwf	main@i^0,w,c
   705  007E16  A0D8               	btfss	status,0,c
   706  007E18  EF10  F03F         	goto	u1051
   707  007E1C  EF12  F03F         	goto	u1050
   708  007E20                     u1051:
   709  007E20  EFF9  F03E         	goto	l2268
   710  007E24                     u1050:
   711  007E24                     
   712                           ;main.c: 60:         for(int i=0; i<3; i++){
   713  007E24  0E00               	movlw	0
   714  007E26  6E2A               	movwf	(main@i_419+1)^0,c
   715  007E28  0E00               	movlw	0
   716  007E2A  6E29               	movwf	main@i_419^0,c
   717  007E2C                     l2280:
   718                           
   719                           ;main.c: 62:             UARTWrite(b[i]);
   720  007E2C  0E22               	movlw	low main@b
   721  007E2E  2429               	addwf	main@i_419^0,w,c
   722  007E30  6ED9               	movwf	fsr2l,c
   723  007E32  0E00               	movlw	high main@b
   724  007E34  202A               	addwfc	(main@i_419+1)^0,w,c
   725  007E36  6EDA               	movwf	fsr2h,c
   726  007E38  50DF               	movf	indf2,w,c
   727  007E3A  ECC3  F039         	call	_UARTWrite
   728  007E3E                     
   729                           ;main.c: 63:         }
   730  007E3E  4A29               	infsnz	main@i_419^0,f,c
   731  007E40  2A2A               	incf	(main@i_419+1)^0,f,c
   732  007E42  BE2A               	btfsc	(main@i_419+1)^0,7,c
   733  007E44  EF2D  F03F         	goto	u1061
   734  007E48  502A               	movf	(main@i_419+1)^0,w,c
   735  007E4A  E109               	bnz	u1060
   736  007E4C  0E03               	movlw	3
   737  007E4E  5C29               	subwf	main@i_419^0,w,c
   738  007E50  A0D8               	btfss	status,0,c
   739  007E52  EF2D  F03F         	goto	u1061
   740  007E56  EF2F  F03F         	goto	u1060
   741  007E5A                     u1061:
   742  007E5A  EF16  F03F         	goto	l2280
   743  007E5E                     u1060:
   744  007E5E  EF6F  F03E         	goto	l2240
   745  007E62  EF00  F000         	goto	start
   746  007E66                     __end_of_main:
   747                           	opt callstack 0
   748                           
   749 ;; *************** function _verification *****************
   750 ;; Defined at:
   751 ;;		line 8 in file "verification.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0
   768 ;;      Totals:         2       0       0       0       0       0       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    3
   772 ;; This function calls:
   773 ;;		_Coord_Validated
   774 ;;		_Ins_Validated
   775 ;;		_Par_Validated
   776 ;;		_cmd
   777 ;;		_end
   778 ;;		_start
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text1
   785  007958                     __ptext1:
   786                           	opt callstack 0
   787  007958                     _verification:
   788                           	opt callstack 27
   789  007958                     
   790                           ;verification.c: 9:     NextState = iddle_State;
   791  007958  0E00               	movlw	0
   792  00795A  6E40               	movwf	_NextState^0,c
   793                           
   794                           ;verification.c: 10:     while(x==1){
   795  00795C  EFF2  F03C         	goto	l2144
   796  007960                     l2128:
   797                           
   798                           ;verification.c: 14:                 NextState= start();
   799  007960  EC3E  F03A         	call	_start	;wreg free
   800  007964  6E40               	movwf	_NextState^0,c
   801                           
   802                           ;verification.c: 15:             };verification.c: 16:             break;
   803  007966  EFF2  F03C         	goto	l2144
   804  00796A                     l2130:
   805                           
   806                           ;verification.c: 18:                 NextState=cmd();
   807  00796A  ECEC  F03B         	call	_cmd	;wreg free
   808  00796E  6E40               	movwf	_NextState^0,c
   809                           
   810                           ;verification.c: 19:             };verification.c: 20:             break;
   811  007970  EFF2  F03C         	goto	l2144
   812  007974                     l2132:
   813                           
   814                           ;verification.c: 22:                 NextState=Par_Validated();
   815  007974  EC79  F03B         	call	_Par_Validated	;wreg free
   816  007978  6E40               	movwf	_NextState^0,c
   817                           
   818                           ;verification.c: 23:             };verification.c: 24:             break;
   819  00797A  EFF2  F03C         	goto	l2144
   820  00797E                     l2134:
   821                           
   822                           ;verification.c: 26:                 NextState=Ins_Validated();
   823  00797E  EC67  F03C         	call	_Ins_Validated	;wreg free
   824  007982  6E40               	movwf	_NextState^0,c
   825                           
   826                           ;verification.c: 27:             };verification.c: 28:             break;
   827  007984  EFF2  F03C         	goto	l2144
   828  007988                     l2136:
   829                           
   830                           ;verification.c: 30:                 NextState=Coord_Validated();
   831  007988  EC26  F03C         	call	_Coord_Validated	;wreg free
   832  00798C  6E40               	movwf	_NextState^0,c
   833                           
   834                           ;verification.c: 31:             };verification.c: 32:             break;
   835  00798E  EFF2  F03C         	goto	l2144
   836  007992                     l2138:
   837                           
   838                           ;verification.c: 34:                 end();
   839  007992  EC61  F03A         	call	_end	;wreg free
   840                           
   841                           ;verification.c: 35:             }break;
   842  007996  EFF2  F03C         	goto	l2144
   843  00799A                     l2142:
   844  00799A  5040               	movf	_NextState^0,w,c
   845  00799C  6E1D               	movwf	??_verification^0,c
   846  00799E  6A1E               	clrf	(??_verification+1)^0,c
   847                           
   848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 1, Range of values is 0 to 0
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ;	Chosen strategy is simple_byte
   855  0079A0  501E               	movf	(??_verification+1)^0,w,c
   856  0079A2  0A00               	xorlw	0	; case 0
   857  0079A4  B4D8               	btfsc	status,2,c
   858  0079A6  EFD7  F03C         	goto	l2298
   859  0079AA  EFF2  F03C         	goto	l2144
   860  0079AE                     l2298:
   861                           
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 6, Range of values is 0 to 5
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte           19    10 (average)
   867                           ;	Chosen strategy is simple_byte
   868  0079AE  501D               	movf	??_verification^0,w,c
   869  0079B0  0A00               	xorlw	0	; case 0
   870  0079B2  B4D8               	btfsc	status,2,c
   871  0079B4  EFB0  F03C         	goto	l2128
   872  0079B8  0A01               	xorlw	1	; case 1
   873  0079BA  B4D8               	btfsc	status,2,c
   874  0079BC  EFB5  F03C         	goto	l2130
   875  0079C0  0A03               	xorlw	3	; case 2
   876  0079C2  B4D8               	btfsc	status,2,c
   877  0079C4  EFBA  F03C         	goto	l2132
   878  0079C8  0A01               	xorlw	1	; case 3
   879  0079CA  B4D8               	btfsc	status,2,c
   880  0079CC  EFBF  F03C         	goto	l2134
   881  0079D0  0A07               	xorlw	7	; case 4
   882  0079D2  B4D8               	btfsc	status,2,c
   883  0079D4  EFC4  F03C         	goto	l2136
   884  0079D8  0A01               	xorlw	1	; case 5
   885  0079DA  B4D8               	btfsc	status,2,c
   886  0079DC  EFC9  F03C         	goto	l2138
   887  0079E0  EFF2  F03C         	goto	l2144
   888  0079E4                     l2144:
   889                           
   890                           ;verification.c: 10:     while(x==1){
   891  0079E4  043D               	decf	_x^0,w,c
   892  0079E6  103E               	iorwf	(_x+1)^0,w,c
   893  0079E8  B4D8               	btfsc	status,2,c
   894  0079EA  EFF9  F03C         	goto	u921
   895  0079EE  EFFB  F03C         	goto	u920
   896  0079F2                     u921:
   897  0079F2  EFCD  F03C         	goto	l2142
   898  0079F6                     u920:
   899  0079F6  0012               	return		;funcret
   900  0079F8                     __end_of_verification:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _start *****************
   904 ;; Defined at:
   905 ;;		line 17 in file "cases.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  i               2    1[COMRAM] int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      unsigned char 
   912 ;; Registers used:
   913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         0       0       0       0       0       0       0       0       0
   920 ;;      Locals:         2       0       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    1
   926 ;; This function calls:
   927 ;;		_UARTWrite
   928 ;; This function is called by:
   929 ;;		_verification
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text2
   934  00747C                     __ptext2:
   935                           	opt callstack 0
   936  00747C                     _start:
   937                           	opt callstack 28
   938  00747C                     
   939                           ;cases.c: 18:      UARTWrite(13);
   940  00747C  0E0D               	movlw	13
   941  00747E  ECC3  F039         	call	_UARTWrite
   942  007482                     
   943                           ;cases.c: 19:      for(int i=0;i<10;i++){
   944  007482  0E00               	movlw	0
   945  007484  6E03               	movwf	(start@i+1)^0,c
   946  007486  0E00               	movlw	0
   947  007488  6E02               	movwf	start@i^0,c
   948  00748A                     l1860:
   949                           
   950                           ;cases.c: 20:         UARTWrite(init[i]);
   951  00748A  0E6D               	movlw	low _init
   952  00748C  2402               	addwf	start@i^0,w,c
   953  00748E  6ED9               	movwf	fsr2l,c
   954  007490  0E00               	movlw	high _init
   955  007492  2003               	addwfc	(start@i+1)^0,w,c
   956  007494  6EDA               	movwf	fsr2h,c
   957  007496  50DF               	movf	indf2,w,c
   958  007498  ECC3  F039         	call	_UARTWrite
   959  00749C                     
   960                           ;cases.c: 21:     }
   961  00749C  4A02               	infsnz	start@i^0,f,c
   962  00749E  2A03               	incf	(start@i+1)^0,f,c
   963  0074A0  BE03               	btfsc	(start@i+1)^0,7,c
   964  0074A2  EF5C  F03A         	goto	u701
   965  0074A6  5003               	movf	(start@i+1)^0,w,c
   966  0074A8  E109               	bnz	u700
   967  0074AA  0E0A               	movlw	10
   968  0074AC  5C02               	subwf	start@i^0,w,c
   969  0074AE  A0D8               	btfss	status,0,c
   970  0074B0  EF5C  F03A         	goto	u701
   971  0074B4  EF5E  F03A         	goto	u700
   972  0074B8                     u701:
   973  0074B8  EF45  F03A         	goto	l1860
   974  0074BC                     u700:
   975  0074BC                     
   976                           ;cases.c: 22:      PORTC = 0xff;
   977  0074BC  6882               	setf	130,c	;volatile
   978  0074BE                     
   979                           ;cases.c: 23:      return wait_cmd_State;
   980  0074BE  0E01               	movlw	1
   981  0074C0  0012               	return		;funcret
   982  0074C2                     __end_of_start:
   983                           	opt callstack 0
   984                           
   985 ;; *************** function _end *****************
   986 ;; Defined at:
   987 ;;		line 91 in file "cases.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  i               2    1[COMRAM] int 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0
  1002 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1004 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    1
  1008 ;; This function calls:
  1009 ;;		_UARTWrite
  1010 ;; This function is called by:
  1011 ;;		_verification
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text3
  1016  0074C2                     __ptext3:
  1017                           	opt callstack 0
  1018  0074C2                     _end:
  1019                           	opt callstack 28
  1020  0074C2                     
  1021                           ;cases.c: 92:     UARTWrite(13);
  1022  0074C2  0E0D               	movlw	13
  1023  0074C4  ECC3  F039         	call	_UARTWrite
  1024  0074C8                     
  1025                           ;cases.c: 93:     for(int i=0;i<7;i++){
  1026  0074C8  0E00               	movlw	0
  1027  0074CA  6E03               	movwf	(end@i+1)^0,c
  1028  0074CC  0E00               	movlw	0
  1029  0074CE  6E02               	movwf	end@i^0,c
  1030  0074D0                     l2006:
  1031                           
  1032                           ;cases.c: 94:             UARTWrite(gracias[i]);
  1033  0074D0  0E77               	movlw	low _gracias
  1034  0074D2  2402               	addwf	end@i^0,w,c
  1035  0074D4  6ED9               	movwf	fsr2l,c
  1036  0074D6  0E00               	movlw	high _gracias
  1037  0074D8  2003               	addwfc	(end@i+1)^0,w,c
  1038  0074DA  6EDA               	movwf	fsr2h,c
  1039  0074DC  50DF               	movf	indf2,w,c
  1040  0074DE  ECC3  F039         	call	_UARTWrite
  1041  0074E2                     
  1042                           ;cases.c: 95:     }
  1043  0074E2  4A02               	infsnz	end@i^0,f,c
  1044  0074E4  2A03               	incf	(end@i+1)^0,f,c
  1045  0074E6  BE03               	btfsc	(end@i+1)^0,7,c
  1046  0074E8  EF7F  F03A         	goto	u811
  1047  0074EC  5003               	movf	(end@i+1)^0,w,c
  1048  0074EE  E109               	bnz	u810
  1049  0074F0  0E07               	movlw	7
  1050  0074F2  5C02               	subwf	end@i^0,w,c
  1051  0074F4  A0D8               	btfss	status,0,c
  1052  0074F6  EF7F  F03A         	goto	u811
  1053  0074FA  EF81  F03A         	goto	u810
  1054  0074FE                     u811:
  1055  0074FE  EF68  F03A         	goto	l2006
  1056  007502                     u810:
  1057  007502                     
  1058                           ;cases.c: 96:      x=0;
  1059  007502  0E00               	movlw	0
  1060  007504  6E3E               	movwf	(_x+1)^0,c
  1061  007506  0E00               	movlw	0
  1062  007508  6E3D               	movwf	_x^0,c
  1063  00750A  0012               	return		;funcret
  1064  00750C                     __end_of_end:
  1065                           	opt callstack 0
  1066                           
  1067 ;; *************** function _cmd *****************
  1068 ;; Defined at:
  1069 ;;		line 27 in file "cases.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  i               2   26[COMRAM] int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      unsigned char 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    2
  1090 ;; This function calls:
  1091 ;;		_UARTWrite
  1092 ;;		_coord
  1093 ;; This function is called by:
  1094 ;;		_verification
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text4
  1099  0077D8                     __ptext4:
  1100                           	opt callstack 0
  1101  0077D8                     _cmd:
  1102                           	opt callstack 27
  1103  0077D8                     
  1104                           ;cases.c: 28:     UARTWrite(13);
  1105  0077D8  0E0D               	movlw	13
  1106  0077DA  ECC3  F039         	call	_UARTWrite
  1107  0077DE                     
  1108                           ;cases.c: 29:     PORTC = 0x00;
  1109  0077DE  0E00               	movlw	0
  1110  0077E0  6E82               	movwf	130,c	;volatile
  1111  0077E2                     
  1112                           ;cases.c: 30:     for(int i=0;i<10;i++){
  1113  0077E2  0E00               	movlw	0
  1114  0077E4  6E1C               	movwf	(cmd@i+1)^0,c
  1115  0077E6  0E00               	movlw	0
  1116  0077E8  6E1B               	movwf	cmd@i^0,c
  1117  0077EA                     l1880:
  1118                           
  1119                           ;cases.c: 31:         UARTWrite(e_c[i]);
  1120  0077EA  0E60               	movlw	low _e_c
  1121  0077EC  241B               	addwf	cmd@i^0,w,c
  1122  0077EE  6ED9               	movwf	fsr2l,c
  1123  0077F0  0E00               	movlw	high _e_c
  1124  0077F2  201C               	addwfc	(cmd@i+1)^0,w,c
  1125  0077F4  6EDA               	movwf	fsr2h,c
  1126  0077F6  50DF               	movf	indf2,w,c
  1127  0077F8  ECC3  F039         	call	_UARTWrite
  1128  0077FC                     
  1129                           ;cases.c: 32:     }
  1130  0077FC  4A1B               	infsnz	cmd@i^0,f,c
  1131  0077FE  2A1C               	incf	(cmd@i+1)^0,f,c
  1132  007800  BE1C               	btfsc	(cmd@i+1)^0,7,c
  1133  007802  EF0C  F03C         	goto	u711
  1134  007806  501C               	movf	(cmd@i+1)^0,w,c
  1135  007808  E109               	bnz	u710
  1136  00780A  0E0A               	movlw	10
  1137  00780C  5C1B               	subwf	cmd@i^0,w,c
  1138  00780E  A0D8               	btfss	status,0,c
  1139  007810  EF0C  F03C         	goto	u711
  1140  007814  EF0E  F03C         	goto	u710
  1141  007818                     u711:
  1142  007818  EFF5  F03B         	goto	l1880
  1143  00781C                     u710:
  1144  00781C                     
  1145                           ;cases.c: 33:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
  1146  00781C  0E4B               	movlw	low _Par1
  1147  00781E  6E01               	movwf	coord@P1^0,c
  1148  007820  0E00               	movlw	high _Par1
  1149  007822  6E02               	movwf	(coord@P1+1)^0,c
  1150  007824  0E4A               	movlw	low _letter
  1151  007826  6E03               	movwf	coord@L^0,c
  1152  007828  0E00               	movlw	high _letter
  1153  00782A  6E04               	movwf	(coord@L+1)^0,c
  1154  00782C  0E47               	movlw	low _cord_x
  1155  00782E  6E05               	movwf	coord@x^0,c
  1156  007830  0E00               	movlw	high _cord_x
  1157  007832  6E06               	movwf	(coord@x+1)^0,c
  1158  007834  0E45               	movlw	low _cord_y
  1159  007836  6E07               	movwf	coord@y^0,c
  1160  007838  0E00               	movlw	high _cord_y
  1161  00783A  6E08               	movwf	(coord@y+1)^0,c
  1162  00783C  0E49               	movlw	low _Par2
  1163  00783E  6E09               	movwf	coord@P2^0,c
  1164  007840  0E00               	movlw	high _Par2
  1165  007842  6E0A               	movwf	(coord@P2+1)^0,c
  1166  007844  ECFC  F03C         	call	_coord	;wreg free
  1167  007848                     
  1168                           ;cases.c: 34:     return validate_Par_State;
  1169  007848  0E02               	movlw	2
  1170  00784A  0012               	return		;funcret
  1171  00784C                     __end_of_cmd:
  1172                           	opt callstack 0
  1173                           
  1174 ;; *************** function _coord *****************
  1175 ;; Defined at:
  1176 ;;		line 12 in file "coordenadas.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  P1              2    0[COMRAM] PTR unsigned char 
  1179 ;;		 -> Par1(1), 
  1180 ;;  L               2    2[COMRAM] PTR unsigned char 
  1181 ;;		 -> letter(1), 
  1182 ;;  x               2    4[COMRAM] PTR unsigned short 
  1183 ;;		 -> cord_x(2), 
  1184 ;;  y               2    6[COMRAM] PTR unsigned short 
  1185 ;;		 -> cord_y(2), 
  1186 ;;  P2              2    8[COMRAM] PTR unsigned char 
  1187 ;;		 -> Par2(1), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  i               2   24[COMRAM] int 
  1190 ;;  buffer          9   14[COMRAM] unsigned char [9]
  1191 ;;  read            1   23[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2    0[COMRAM] int 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1201 ;;      Params:        10       0       0       0       0       0       0       0       0
  1202 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1203 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1204 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1205 ;;Total ram usage:       26 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    1
  1208 ;; This function calls:
  1209 ;;		_UARTRead
  1210 ;; This function is called by:
  1211 ;;		_cmd
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text5
  1216  0079F8                     __ptext5:
  1217                           	opt callstack 0
  1218  0079F8                     _coord:
  1219                           	opt callstack 27
  1220  0079F8                     
  1221                           ;coordenadas.c: 13:   char buffer [9];;coordenadas.c: 14:         char read;;coordenadas
      +                          .c: 16:         for(int i=0; i<=8; i++){
  1222  0079F8  0E00               	movlw	0
  1223  0079FA  6E1A               	movwf	(coord@i+1)^0,c
  1224  0079FC  0E00               	movlw	0
  1225  0079FE  6E19               	movwf	coord@i^0,c
  1226  007A00                     l1774:
  1227                           
  1228                           ;coordenadas.c: 17:             read= UARTRead();
  1229  007A00  ECBA  F039         	call	_UARTRead	;wreg free
  1230  007A04  6E18               	movwf	coord@read^0,c
  1231  007A06                     
  1232                           ;coordenadas.c: 18:             buffer[i]=read;
  1233  007A06  0E0F               	movlw	low coord@buffer
  1234  007A08  2419               	addwf	coord@i^0,w,c
  1235  007A0A  6ED9               	movwf	fsr2l,c
  1236  007A0C  0E00               	movlw	high coord@buffer
  1237  007A0E  201A               	addwfc	(coord@i+1)^0,w,c
  1238  007A10  6EDA               	movwf	fsr2h,c
  1239  007A12  C018  FFDF         	movff	coord@read,indf2
  1240  007A16                     
  1241                           ;coordenadas.c: 19:         }
  1242  007A16  4A19               	infsnz	coord@i^0,f,c
  1243  007A18  2A1A               	incf	(coord@i+1)^0,f,c
  1244  007A1A  BE1A               	btfsc	(coord@i+1)^0,7,c
  1245  007A1C  EF19  F03D         	goto	u601
  1246  007A20  501A               	movf	(coord@i+1)^0,w,c
  1247  007A22  E109               	bnz	u600
  1248  007A24  0E09               	movlw	9
  1249  007A26  5C19               	subwf	coord@i^0,w,c
  1250  007A28  A0D8               	btfss	status,0,c
  1251  007A2A  EF19  F03D         	goto	u601
  1252  007A2E  EF1B  F03D         	goto	u600
  1253  007A32                     u601:
  1254  007A32  EF00  F03D         	goto	l1774
  1255  007A36                     u600:
  1256  007A36                     
  1257                           ;coordenadas.c: 20:         *P1= buffer[0];
  1258  007A36  C001  FFD9         	movff	coord@P1,fsr2l
  1259  007A3A  C002  FFDA         	movff	coord@P1+1,fsr2h
  1260  007A3E  C00F  FFDF         	movff	coord@buffer,indf2
  1261                           
  1262                           ;coordenadas.c: 21:         *L= buffer[1];
  1263  007A42  C003  FFD9         	movff	coord@L,fsr2l
  1264  007A46  C004  FFDA         	movff	coord@L+1,fsr2h
  1265  007A4A  C010  FFDF         	movff	coord@buffer+1,indf2
  1266  007A4E                     
  1267                           ;coordenadas.c: 22:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
  1268  007A4E  0E30               	movlw	48
  1269  007A50  6E0B               	movwf	??_coord^0,c
  1270  007A52  0EEB               	movlw	235
  1271  007A54  6E0C               	movwf	(??_coord+1)^0,c
  1272  007A56  5011               	movf	(coord@buffer+2)^0,w,c
  1273  007A58  0D64               	mullw	100
  1274  007A5A  CFF3 F00D          	movff	prodl,??_coord+2
  1275  007A5E  CFF4 F00E          	movff	prodh,??_coord+3
  1276  007A62  5012               	movf	(coord@buffer+3)^0,w,c
  1277  007A64  0D0A               	mullw	10
  1278  007A66  50F3               	movf	243,w,c
  1279  007A68  260D               	addwf	(??_coord+2)^0,f,c
  1280  007A6A  50F4               	movf	244,w,c
  1281  007A6C  220E               	addwfc	(??_coord+3)^0,f,c
  1282  007A6E  5013               	movf	(coord@buffer+4)^0,w,c
  1283  007A70  260D               	addwf	(??_coord+2)^0,f,c
  1284  007A72  0E00               	movlw	0
  1285  007A74  220E               	addwfc	(??_coord+3)^0,f,c
  1286  007A76  500B               	movf	??_coord^0,w,c
  1287  007A78  260D               	addwf	(??_coord+2)^0,f,c
  1288  007A7A  500C               	movf	(??_coord+1)^0,w,c
  1289  007A7C  220E               	addwfc	(??_coord+3)^0,f,c
  1290  007A7E  C005  FFD9         	movff	coord@x,fsr2l
  1291  007A82  C006  FFDA         	movff	coord@x+1,fsr2h
  1292  007A86  C00D  FFDE         	movff	??_coord+2,postinc2
  1293  007A8A  C00E  FFDD         	movff	??_coord+3,postdec2
  1294  007A8E                     
  1295                           ;coordenadas.c: 23:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
  1296  007A8E  0E30               	movlw	48
  1297  007A90  6E0B               	movwf	??_coord^0,c
  1298  007A92  0EEB               	movlw	235
  1299  007A94  6E0C               	movwf	(??_coord+1)^0,c
  1300  007A96  5014               	movf	(coord@buffer+5)^0,w,c
  1301  007A98  0D64               	mullw	100
  1302  007A9A  CFF3 F00D          	movff	prodl,??_coord+2
  1303  007A9E  CFF4 F00E          	movff	prodh,??_coord+3
  1304  007AA2  5015               	movf	(coord@buffer+6)^0,w,c
  1305  007AA4  0D0A               	mullw	10
  1306  007AA6  50F3               	movf	243,w,c
  1307  007AA8  260D               	addwf	(??_coord+2)^0,f,c
  1308  007AAA  50F4               	movf	244,w,c
  1309  007AAC  220E               	addwfc	(??_coord+3)^0,f,c
  1310  007AAE  5016               	movf	(coord@buffer+7)^0,w,c
  1311  007AB0  260D               	addwf	(??_coord+2)^0,f,c
  1312  007AB2  0E00               	movlw	0
  1313  007AB4  220E               	addwfc	(??_coord+3)^0,f,c
  1314  007AB6  500B               	movf	??_coord^0,w,c
  1315  007AB8  260D               	addwf	(??_coord+2)^0,f,c
  1316  007ABA  500C               	movf	(??_coord+1)^0,w,c
  1317  007ABC  220E               	addwfc	(??_coord+3)^0,f,c
  1318  007ABE  C007  FFD9         	movff	coord@y,fsr2l
  1319  007AC2  C008  FFDA         	movff	coord@y+1,fsr2h
  1320  007AC6  C00D  FFDE         	movff	??_coord+2,postinc2
  1321  007ACA  C00E  FFDD         	movff	??_coord+3,postdec2
  1322                           
  1323                           ;coordenadas.c: 24:   *P2= buffer[8];
  1324  007ACE  C009  FFD9         	movff	coord@P2,fsr2l
  1325  007AD2  C00A  FFDA         	movff	coord@P2+1,fsr2h
  1326  007AD6  C017  FFDF         	movff	coord@buffer+8,indf2
  1327  007ADA  0012               	return		;funcret
  1328  007ADC                     __end_of_coord:
  1329                           	opt callstack 0
  1330                           
  1331 ;; *************** function _UARTRead *****************
  1332 ;; Defined at:
  1333 ;;		line 32 in file "UART.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_coord
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text6
  1361  007374                     __ptext6:
  1362                           	opt callstack 0
  1363  007374                     _UARTRead:
  1364                           	opt callstack 27
  1365  007374                     l96:
  1366  007374  AA9E               	btfss	3998,5,c	;volatile
  1367  007376  EFBF  F039         	goto	u541
  1368  00737A  EFC1  F039         	goto	u540
  1369  00737E                     u541:
  1370  00737E  EFBA  F039         	goto	l96
  1371  007382                     u540:
  1372  007382                     
  1373                           ;UART.c: 34:     return RCREG;
  1374  007382  50AE               	movf	174,w,c	;volatile
  1375  007384  0012               	return		;funcret
  1376  007386                     __end_of_UARTRead:
  1377                           	opt callstack 0
  1378                           
  1379 ;; *************** function _Par_Validated *****************
  1380 ;; Defined at:
  1381 ;;		line 37 in file "cases.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  i               2    1[COMRAM] int 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		_UARTWrite
  1404 ;; This function is called by:
  1405 ;;		_verification
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text7
  1410  0076F2                     __ptext7:
  1411                           	opt callstack 0
  1412  0076F2                     _Par_Validated:
  1413                           	opt callstack 28
  1414  0076F2                     
  1415                           ;cases.c: 38:     PORTC=0x00;
  1416  0076F2  0E00               	movlw	0
  1417  0076F4  6E82               	movwf	130,c	;volatile
  1418  0076F6                     
  1419                           ;cases.c: 39:     if(Par1==0X3C && Par2==0x3E){
  1420  0076F6  0E3C               	movlw	60
  1421  0076F8  184B               	xorwf	_Par1^0,w,c
  1422  0076FA  A4D8               	btfss	status,2,c
  1423  0076FC  EF82  F03B         	goto	u721
  1424  007700  EF84  F03B         	goto	u720
  1425  007704                     u721:
  1426  007704  EF90  F03B         	goto	l1904
  1427  007708                     u720:
  1428  007708  0E3E               	movlw	62
  1429  00770A  1849               	xorwf	_Par2^0,w,c
  1430  00770C  A4D8               	btfss	status,2,c
  1431  00770E  EF8B  F03B         	goto	u731
  1432  007712  EF8D  F03B         	goto	u730
  1433  007716                     u731:
  1434  007716  EF90  F03B         	goto	l1904
  1435  00771A                     u730:
  1436  00771A                     
  1437                           ;cases.c: 40:         return validate_Instruct_State;
  1438  00771A  0E03               	movlw	3
  1439  00771C  EFB1  F03B         	goto	l44
  1440  007720                     l1904:
  1441                           
  1442                           ;cases.c: 43:         UARTWrite(13);
  1443  007720  0E0D               	movlw	13
  1444  007722  ECC3  F039         	call	_UARTWrite
  1445  007726                     
  1446                           ;cases.c: 44:         for(int i=0;i<5;i++){
  1447  007726  0E00               	movlw	0
  1448  007728  6E03               	movwf	(Par_Validated@i+1)^0,c
  1449  00772A  0E00               	movlw	0
  1450  00772C  6E02               	movwf	Par_Validated@i^0,c
  1451  00772E                     l1912:
  1452                           
  1453                           ;cases.c: 45:             UARTWrite(Error[i]);
  1454  00772E  0E56               	movlw	low _Error
  1455  007730  2402               	addwf	Par_Validated@i^0,w,c
  1456  007732  6ED9               	movwf	fsr2l,c
  1457  007734  0E00               	movlw	high _Error
  1458  007736  2003               	addwfc	(Par_Validated@i+1)^0,w,c
  1459  007738  6EDA               	movwf	fsr2h,c
  1460  00773A  50DF               	movf	indf2,w,c
  1461  00773C  ECC3  F039         	call	_UARTWrite
  1462  007740                     
  1463                           ;cases.c: 46:         }
  1464  007740  4A02               	infsnz	Par_Validated@i^0,f,c
  1465  007742  2A03               	incf	(Par_Validated@i+1)^0,f,c
  1466  007744  BE03               	btfsc	(Par_Validated@i+1)^0,7,c
  1467  007746  EFAE  F03B         	goto	u741
  1468  00774A  5003               	movf	(Par_Validated@i+1)^0,w,c
  1469  00774C  E109               	bnz	u740
  1470  00774E  0E05               	movlw	5
  1471  007750  5C02               	subwf	Par_Validated@i^0,w,c
  1472  007752  A0D8               	btfss	status,0,c
  1473  007754  EFAE  F03B         	goto	u741
  1474  007758  EFB0  F03B         	goto	u740
  1475  00775C                     u741:
  1476  00775C  EF97  F03B         	goto	l1912
  1477  007760                     u740:
  1478  007760                     
  1479                           ;cases.c: 47:         return wait_cmd_State;
  1480  007760  0E01               	movlw	1
  1481  007762                     l44:
  1482  007762  0012               	return		;funcret
  1483  007764                     __end_of_Par_Validated:
  1484                           	opt callstack 0
  1485                           
  1486 ;; *************** function _Ins_Validated *****************
  1487 ;; Defined at:
  1488 ;;		line 51 in file "cases.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  i               2    1[COMRAM] int 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0
  1503 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1505 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    1
  1509 ;; This function calls:
  1510 ;;		_UARTWrite
  1511 ;; This function is called by:
  1512 ;;		_verification
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text8
  1517  0078CE                     __ptext8:
  1518                           	opt callstack 0
  1519  0078CE                     _Ins_Validated:
  1520                           	opt callstack 28
  1521  0078CE                     
  1522                           ;cases.c: 52:     PORTC=0x00;
  1523  0078CE  0E00               	movlw	0
  1524  0078D0  6E82               	movwf	130,c	;volatile
  1525  0078D2                     
  1526                           ;cases.c: 53:     if(letter==0x43){
  1527  0078D2  0E43               	movlw	67
  1528  0078D4  184A               	xorwf	_letter^0,w,c
  1529  0078D6  A4D8               	btfss	status,2,c
  1530  0078D8  EF70  F03C         	goto	u751
  1531  0078DC  EF72  F03C         	goto	u750
  1532  0078E0                     u751:
  1533  0078E0  EF79  F03C         	goto	l1934
  1534  0078E4                     u750:
  1535  0078E4                     
  1536                           ;cases.c: 54:         PORTC=0X02;
  1537  0078E4  0E02               	movlw	2
  1538  0078E6  6E82               	movwf	130,c	;volatile
  1539                           
  1540                           ;cases.c: 55:         click=1;
  1541  0078E8  0E01               	movlw	1
  1542  0078EA  6E3F               	movwf	_click^0,c
  1543  0078EC                     l1928:
  1544                           
  1545                           ;cases.c: 56:         return validate_Coord_State;
  1546  0078EC  0E04               	movlw	4
  1547  0078EE  EFAB  F03C         	goto	l51
  1548  0078F2                     l1934:
  1549  0078F2  0E53               	movlw	83
  1550  0078F4  184A               	xorwf	_letter^0,w,c
  1551  0078F6  A4D8               	btfss	status,2,c
  1552  0078F8  EF80  F03C         	goto	u761
  1553  0078FC  EF82  F03C         	goto	u760
  1554  007900                     u761:
  1555  007900  EF88  F03C         	goto	l1944
  1556  007904                     u760:
  1557  007904                     
  1558                           ;cases.c: 60:         PORTC=0X02;
  1559  007904  0E02               	movlw	2
  1560  007906  6E82               	movwf	130,c	;volatile
  1561                           
  1562                           ;cases.c: 61:         click=0;
  1563  007908  0E00               	movlw	0
  1564  00790A  6E3F               	movwf	_click^0,c
  1565  00790C  EF76  F03C         	goto	l1928
  1566  007910                     l1944:
  1567                           
  1568                           ;cases.c: 65:         UARTWrite(13);
  1569  007910  0E0D               	movlw	13
  1570  007912  ECC3  F039         	call	_UARTWrite
  1571  007916                     
  1572                           ;cases.c: 66:         for(int i=0;i<5;i++){
  1573  007916  0E00               	movlw	0
  1574  007918  6E03               	movwf	(Ins_Validated@i+1)^0,c
  1575  00791A  0E00               	movlw	0
  1576  00791C  6E02               	movwf	Ins_Validated@i^0,c
  1577  00791E                     l1952:
  1578                           
  1579                           ;cases.c: 67:             UARTWrite(Error[i]);
  1580  00791E  0E56               	movlw	low _Error
  1581  007920  2402               	addwf	Ins_Validated@i^0,w,c
  1582  007922  6ED9               	movwf	fsr2l,c
  1583  007924  0E00               	movlw	high _Error
  1584  007926  2003               	addwfc	(Ins_Validated@i+1)^0,w,c
  1585  007928  6EDA               	movwf	fsr2h,c
  1586  00792A  50DF               	movf	indf2,w,c
  1587  00792C  ECC3  F039         	call	_UARTWrite
  1588  007930                     
  1589                           ;cases.c: 68:         }
  1590  007930  4A02               	infsnz	Ins_Validated@i^0,f,c
  1591  007932  2A03               	incf	(Ins_Validated@i+1)^0,f,c
  1592  007934  BE03               	btfsc	(Ins_Validated@i+1)^0,7,c
  1593  007936  EFA6  F03C         	goto	u771
  1594  00793A  5003               	movf	(Ins_Validated@i+1)^0,w,c
  1595  00793C  E109               	bnz	u770
  1596  00793E  0E05               	movlw	5
  1597  007940  5C02               	subwf	Ins_Validated@i^0,w,c
  1598  007942  A0D8               	btfss	status,0,c
  1599  007944  EFA6  F03C         	goto	u771
  1600  007948  EFA8  F03C         	goto	u770
  1601  00794C                     u771:
  1602  00794C  EF8F  F03C         	goto	l1952
  1603  007950                     u770:
  1604  007950                     
  1605                           ;cases.c: 69:         PORTC= 0X04;
  1606  007950  0E04               	movlw	4
  1607  007952  6E82               	movwf	130,c	;volatile
  1608  007954                     
  1609                           ;cases.c: 70:         return wait_cmd_State;
  1610  007954  0E01               	movlw	1
  1611  007956                     l51:
  1612  007956  0012               	return		;funcret
  1613  007958                     __end_of_Ins_Validated:
  1614                           	opt callstack 0
  1615                           
  1616 ;; *************** function _Coord_Validated *****************
  1617 ;; Defined at:
  1618 ;;		line 74 in file "cases.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  i               2    1[COMRAM] int 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0
  1633 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1635 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1636 ;;Total ram usage:        2 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    1
  1639 ;; This function calls:
  1640 ;;		_UARTWrite
  1641 ;; This function is called by:
  1642 ;;		_verification
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text9
  1647  00784C                     __ptext9:
  1648                           	opt callstack 0
  1649  00784C                     _Coord_Validated:
  1650                           	opt callstack 28
  1651  00784C                     
  1652                           ;cases.c: 75:     PORTC=0x00;
  1653  00784C  0E00               	movlw	0
  1654  00784E  6E82               	movwf	130,c	;volatile
  1655  007850                     
  1656                           ;cases.c: 76:     if(cord_x<=300 && cord_y<=300){
  1657  007850  0E2D               	movlw	45
  1658  007852  5C47               	subwf	_cord_x^0,w,c
  1659  007854  0E01               	movlw	1
  1660  007856  5848               	subwfb	(_cord_x+1)^0,w,c
  1661  007858  B0D8               	btfsc	status,0,c
  1662  00785A  EF31  F03C         	goto	u781
  1663  00785E  EF33  F03C         	goto	u780
  1664  007862                     u781:
  1665  007862  EF43  F03C         	goto	l1978
  1666  007866                     u780:
  1667  007866  0E2D               	movlw	45
  1668  007868  5C45               	subwf	_cord_y^0,w,c
  1669  00786A  0E01               	movlw	1
  1670  00786C  5846               	subwfb	(_cord_y+1)^0,w,c
  1671  00786E  B0D8               	btfsc	status,0,c
  1672  007870  EF3C  F03C         	goto	u791
  1673  007874  EF3E  F03C         	goto	u790
  1674  007878                     u791:
  1675  007878  EF43  F03C         	goto	l1978
  1676  00787C                     u790:
  1677  00787C                     
  1678                           ;cases.c: 77:         PORTC=0X02;
  1679  00787C  0E02               	movlw	2
  1680  00787E  6E82               	movwf	130,c	;volatile
  1681  007880                     
  1682                           ;cases.c: 78:         return end_State;
  1683  007880  0E05               	movlw	5
  1684  007882  EF66  F03C         	goto	l60
  1685  007886                     l1978:
  1686                           
  1687                           ;cases.c: 81:         UARTWrite(13);
  1688  007886  0E0D               	movlw	13
  1689  007888  ECC3  F039         	call	_UARTWrite
  1690  00788C                     
  1691                           ;cases.c: 82:         for(int i=0;i<5;i++){
  1692  00788C  0E00               	movlw	0
  1693  00788E  6E03               	movwf	(Coord_Validated@i+1)^0,c
  1694  007890  0E00               	movlw	0
  1695  007892  6E02               	movwf	Coord_Validated@i^0,c
  1696  007894                     l1986:
  1697                           
  1698                           ;cases.c: 83:             UARTWrite(Error[i]);
  1699  007894  0E56               	movlw	low _Error
  1700  007896  2402               	addwf	Coord_Validated@i^0,w,c
  1701  007898  6ED9               	movwf	fsr2l,c
  1702  00789A  0E00               	movlw	high _Error
  1703  00789C  2003               	addwfc	(Coord_Validated@i+1)^0,w,c
  1704  00789E  6EDA               	movwf	fsr2h,c
  1705  0078A0  50DF               	movf	indf2,w,c
  1706  0078A2  ECC3  F039         	call	_UARTWrite
  1707  0078A6                     
  1708                           ;cases.c: 84:         }
  1709  0078A6  4A02               	infsnz	Coord_Validated@i^0,f,c
  1710  0078A8  2A03               	incf	(Coord_Validated@i+1)^0,f,c
  1711  0078AA  BE03               	btfsc	(Coord_Validated@i+1)^0,7,c
  1712  0078AC  EF61  F03C         	goto	u801
  1713  0078B0  5003               	movf	(Coord_Validated@i+1)^0,w,c
  1714  0078B2  E109               	bnz	u800
  1715  0078B4  0E05               	movlw	5
  1716  0078B6  5C02               	subwf	Coord_Validated@i^0,w,c
  1717  0078B8  A0D8               	btfss	status,0,c
  1718  0078BA  EF61  F03C         	goto	u801
  1719  0078BE  EF63  F03C         	goto	u800
  1720  0078C2                     u801:
  1721  0078C2  EF4A  F03C         	goto	l1986
  1722  0078C6                     u800:
  1723  0078C6                     
  1724                           ;cases.c: 85:         PORTC= 0X04;
  1725  0078C6  0E04               	movlw	4
  1726  0078C8  6E82               	movwf	130,c	;volatile
  1727  0078CA                     
  1728                           ;cases.c: 86:        return wait_cmd_State;
  1729  0078CA  0E01               	movlw	1
  1730  0078CC                     l60:
  1731  0078CC  0012               	return		;funcret
  1732  0078CE                     __end_of_Coord_Validated:
  1733                           	opt callstack 0
  1734                           
  1735 ;; *************** function ___lwmod *****************
  1736 ;; Defined at:
  1737 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  dividend        2    0[COMRAM] unsigned int 
  1740 ;;  divisor         2    2[COMRAM] unsigned int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  counter         1    4[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    0[COMRAM] unsigned int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1752 ;;      Params:         4       0       0       0       0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1755 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1756 ;;Total ram usage:        5 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text10
  1766  00761C                     __ptext10:
  1767                           	opt callstack 0
  1768  00761C                     ___lwmod:
  1769                           	opt callstack 30
  1770  00761C  5003               	movf	___lwmod@divisor^0,w,c
  1771  00761E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1772  007620  B4D8               	btfsc	status,2,c
  1773  007622  EF15  F03B         	goto	u1021
  1774  007626  EF17  F03B         	goto	u1020
  1775  00762A                     u1021:
  1776  00762A  EF3B  F03B         	goto	l1008
  1777  00762E                     u1020:
  1778  00762E  0E01               	movlw	1
  1779  007630  6E05               	movwf	___lwmod@counter^0,c
  1780  007632  EF1F  F03B         	goto	l2224
  1781  007636                     l2222:
  1782  007636  90D8               	bcf	status,0,c
  1783  007638  3603               	rlcf	___lwmod@divisor^0,f,c
  1784  00763A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1785  00763C  2A05               	incf	___lwmod@counter^0,f,c
  1786  00763E                     l2224:
  1787  00763E  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1788  007640  EF24  F03B         	goto	u1031
  1789  007644  EF26  F03B         	goto	u1030
  1790  007648                     u1031:
  1791  007648  EF1B  F03B         	goto	l2222
  1792  00764C                     u1030:
  1793  00764C                     l2226:
  1794  00764C  5003               	movf	___lwmod@divisor^0,w,c
  1795  00764E  5C01               	subwf	___lwmod@dividend^0,w,c
  1796  007650  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1797  007652  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1798  007654  A0D8               	btfss	status,0,c
  1799  007656  EF2F  F03B         	goto	u1041
  1800  00765A  EF31  F03B         	goto	u1040
  1801  00765E                     u1041:
  1802  00765E  EF35  F03B         	goto	l2230
  1803  007662                     u1040:
  1804  007662  5003               	movf	___lwmod@divisor^0,w,c
  1805  007664  5E01               	subwf	___lwmod@dividend^0,f,c
  1806  007666  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1807  007668  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1808  00766A                     l2230:
  1809  00766A  90D8               	bcf	status,0,c
  1810  00766C  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1811  00766E  3203               	rrcf	___lwmod@divisor^0,f,c
  1812  007670  2E05               	decfsz	___lwmod@counter^0,f,c
  1813  007672  EF26  F03B         	goto	l2226
  1814  007676                     l1008:
  1815  007676  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1816  00767A  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1817  00767E  0012               	return		;funcret
  1818  007680                     __end_of___lwmod:
  1819                           	opt callstack 0
  1820                           
  1821 ;; *************** function ___lwdiv *****************
  1822 ;; Defined at:
  1823 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  dividend        2    5[COMRAM] unsigned int 
  1826 ;;  divisor         2    7[COMRAM] unsigned int 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  quotient        2    9[COMRAM] unsigned int 
  1829 ;;  counter         1   11[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2    5[COMRAM] unsigned int 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         4       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1842 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        7 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text11
  1853  007764                     __ptext11:
  1854                           	opt callstack 0
  1855  007764                     ___lwdiv:
  1856                           	opt callstack 30
  1857  007764  0E00               	movlw	0
  1858  007766  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1859  007768  0E00               	movlw	0
  1860  00776A  6E0A               	movwf	___lwdiv@quotient^0,c
  1861  00776C  5008               	movf	___lwdiv@divisor^0,w,c
  1862  00776E  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1863  007770  B4D8               	btfsc	status,2,c
  1864  007772  EFBD  F03B         	goto	u991
  1865  007776  EFBF  F03B         	goto	u990
  1866  00777A                     u991:
  1867  00777A  EFE7  F03B         	goto	l998
  1868  00777E                     u990:
  1869  00777E  0E01               	movlw	1
  1870  007780  6E0C               	movwf	___lwdiv@counter^0,c
  1871  007782  EFC7  F03B         	goto	l2204
  1872  007786                     l2202:
  1873  007786  90D8               	bcf	status,0,c
  1874  007788  3608               	rlcf	___lwdiv@divisor^0,f,c
  1875  00778A  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1876  00778C  2A0C               	incf	___lwdiv@counter^0,f,c
  1877  00778E                     l2204:
  1878  00778E  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1879  007790  EFCC  F03B         	goto	u1001
  1880  007794  EFCE  F03B         	goto	u1000
  1881  007798                     u1001:
  1882  007798  EFC3  F03B         	goto	l2202
  1883  00779C                     u1000:
  1884  00779C                     l2206:
  1885  00779C  90D8               	bcf	status,0,c
  1886  00779E  360A               	rlcf	___lwdiv@quotient^0,f,c
  1887  0077A0  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1888  0077A2  5008               	movf	___lwdiv@divisor^0,w,c
  1889  0077A4  5C06               	subwf	___lwdiv@dividend^0,w,c
  1890  0077A6  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1891  0077A8  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1892  0077AA  A0D8               	btfss	status,0,c
  1893  0077AC  EFDA  F03B         	goto	u1011
  1894  0077B0  EFDC  F03B         	goto	u1010
  1895  0077B4                     u1011:
  1896  0077B4  EFE1  F03B         	goto	l2214
  1897  0077B8                     u1010:
  1898  0077B8  5008               	movf	___lwdiv@divisor^0,w,c
  1899  0077BA  5E06               	subwf	___lwdiv@dividend^0,f,c
  1900  0077BC  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1901  0077BE  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1902  0077C0  800A               	bsf	___lwdiv@quotient^0,0,c
  1903  0077C2                     l2214:
  1904  0077C2  90D8               	bcf	status,0,c
  1905  0077C4  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1906  0077C6  3208               	rrcf	___lwdiv@divisor^0,f,c
  1907  0077C8  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1908  0077CA  EFCE  F03B         	goto	l2206
  1909  0077CE                     l998:
  1910  0077CE  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1911  0077D2  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1912  0077D6  0012               	return		;funcret
  1913  0077D8                     __end_of___lwdiv:
  1914                           	opt callstack 0
  1915                           
  1916 ;; *************** function _Movimiento *****************
  1917 ;; Defined at:
  1918 ;;		line 9 in file "Movimiento.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  i               2   20[COMRAM] int 
  1923 ;;  i               2   18[COMRAM] int 
  1924 ;;  loquequieras    5   13[COMRAM] unsigned char [5]
  1925 ;;  loquequieras    5    8[COMRAM] unsigned char [5]
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2  134[None  ] int 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0
  1936 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1937 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1938 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1939 ;;Total ram usage:       16 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    3
  1942 ;; This function calls:
  1943 ;;		_PWM
  1944 ;;		_UARTWrite
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text12
  1951  007ADC                     __ptext12:
  1952                           	opt callstack 0
  1953  007ADC                     _Movimiento:
  1954                           	opt callstack 27
  1955  007ADC                     
  1956                           ;Movimiento.c: 10:     if(click==1){
  1957  007ADC  043F               	decf	_click^0,w,c
  1958  007ADE  A4D8               	btfss	status,2,c
  1959  007AE0  EF74  F03D         	goto	u931
  1960  007AE4  EF76  F03D         	goto	u930
  1961  007AE8                     u931:
  1962  007AE8  EFAE  F03D         	goto	l2174
  1963  007AEC                     u930:
  1964  007AEC                     
  1965                           ;Movimiento.c: 11:         PWM();
  1966  007AEC  EC33  F03F         	call	_PWM	;wreg free
  1967  007AF0                     
  1968                           ;Movimiento.c: 12:         PORTDbits.RD7=1;
  1969  007AF0  8E83               	bsf	131,7,c	;volatile
  1970  007AF2                     
  1971                           ;Movimiento.c: 13:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  1972  007AF2  0E02               	movlw	2
  1973  007AF4  6E08               	movwf	(??_Movimiento+1)^0,c
  1974  007AF6  0E04               	movlw	4
  1975  007AF8  6E07               	movwf	??_Movimiento^0,c
  1976  007AFA  0EBA               	movlw	186
  1977  007AFC                     u1077:
  1978  007AFC  2EE8               	decfsz	wreg,f,c
  1979  007AFE  D7FE               	bra	u1077
  1980  007B00  2E07               	decfsz	??_Movimiento^0,f,c
  1981  007B02  D7FC               	bra	u1077
  1982  007B04  2E08               	decfsz	(??_Movimiento+1)^0,f,c
  1983  007B06  D7FA               	bra	u1077
  1984  007B08  D000               	nop2	
  1985  007B0A                     
  1986                           ;Movimiento.c: 14:         PORTDbits.RD7=0;
  1987  007B0A  9E83               	bcf	131,7,c	;volatile
  1988  007B0C                     
  1989                           ;Movimiento.c: 15:         char loquequieras[5]="click";
  1990  007B0C  EE20  F051         	lfsr	2,Movimiento@F3246
  1991  007B10  EE10  F009         	lfsr	1,Movimiento@loquequieras
  1992  007B14  0E04               	movlw	4
  1993  007B16                     u941:
  1994  007B16  CFDB FFE3          	movff	plusw2,plusw1
  1995  007B1A  06E8               	decf	wreg,f,c
  1996  007B1C  E2FC               	bc	u941
  1997  007B1E                     
  1998                           ;Movimiento.c: 16:        for(int i=0;i<5;i++){
  1999  007B1E  0E00               	movlw	0
  2000  007B20  6E14               	movwf	(Movimiento@i+1)^0,c
  2001  007B22  0E00               	movlw	0
  2002  007B24  6E13               	movwf	Movimiento@i^0,c
  2003  007B26                     l2168:
  2004                           
  2005                           ;Movimiento.c: 17:        UARTWrite(loquequieras[i]);
  2006  007B26  0E09               	movlw	low Movimiento@loquequieras
  2007  007B28  2413               	addwf	Movimiento@i^0,w,c
  2008  007B2A  6ED9               	movwf	fsr2l,c
  2009  007B2C  0E00               	movlw	high Movimiento@loquequieras
  2010  007B2E  2014               	addwfc	(Movimiento@i+1)^0,w,c
  2011  007B30  6EDA               	movwf	fsr2h,c
  2012  007B32  50DF               	movf	indf2,w,c
  2013  007B34  ECC3  F039         	call	_UARTWrite
  2014  007B38                     
  2015                           ;Movimiento.c: 18:        }
  2016  007B38  4A13               	infsnz	Movimiento@i^0,f,c
  2017  007B3A  2A14               	incf	(Movimiento@i+1)^0,f,c
  2018  007B3C  BE14               	btfsc	(Movimiento@i+1)^0,7,c
  2019  007B3E  EFAA  F03D         	goto	u951
  2020  007B42  5014               	movf	(Movimiento@i+1)^0,w,c
  2021  007B44  E109               	bnz	u950
  2022  007B46  0E05               	movlw	5
  2023  007B48  5C13               	subwf	Movimiento@i^0,w,c
  2024  007B4A  A0D8               	btfss	status,0,c
  2025  007B4C  EFAA  F03D         	goto	u951
  2026  007B50  EFAC  F03D         	goto	u950
  2027  007B54                     u951:
  2028  007B54  EF93  F03D         	goto	l2168
  2029  007B58                     u950:
  2030  007B58  EFE0  F03D         	goto	l380
  2031  007B5C                     l2174:
  2032  007B5C  503F               	movf	_click^0,w,c
  2033  007B5E  A4D8               	btfss	status,2,c
  2034  007B60  EFB4  F03D         	goto	u961
  2035  007B64  EFB6  F03D         	goto	u960
  2036  007B68                     u961:
  2037  007B68  EFE0  F03D         	goto	l380
  2038  007B6C                     u960:
  2039  007B6C                     
  2040                           ;Movimiento.c: 22:         PORTDbits.RD7=1;
  2041  007B6C  8E83               	bsf	131,7,c	;volatile
  2042  007B6E                     
  2043                           ;Movimiento.c: 23:         PWM();
  2044  007B6E  EC33  F03F         	call	_PWM	;wreg free
  2045  007B72                     
  2046                           ;Movimiento.c: 24:         PORTDbits.RD7=0;
  2047  007B72  9E83               	bcf	131,7,c	;volatile
  2048  007B74                     
  2049                           ;Movimiento.c: 25:         char loquequieras2[5]="slide";
  2050  007B74  EE20  F04C         	lfsr	2,Movimiento@F3249
  2051  007B78  EE10  F00E         	lfsr	1,Movimiento@loquequieras2
  2052  007B7C  0E04               	movlw	4
  2053  007B7E                     u971:
  2054  007B7E  CFDB FFE3          	movff	plusw2,plusw1
  2055  007B82  06E8               	decf	wreg,f,c
  2056  007B84  E2FC               	bc	u971
  2057  007B86                     
  2058                           ;Movimiento.c: 26:        for(int i=0;i<5;i++){
  2059  007B86  0E00               	movlw	0
  2060  007B88  6E16               	movwf	(Movimiento@i_720+1)^0,c
  2061  007B8A  0E00               	movlw	0
  2062  007B8C  6E15               	movwf	Movimiento@i_720^0,c
  2063  007B8E                     l2190:
  2064                           
  2065                           ;Movimiento.c: 27:        UARTWrite(loquequieras2[i]);
  2066  007B8E  0E0E               	movlw	low Movimiento@loquequieras2
  2067  007B90  2415               	addwf	Movimiento@i_720^0,w,c
  2068  007B92  6ED9               	movwf	fsr2l,c
  2069  007B94  0E00               	movlw	high Movimiento@loquequieras2
  2070  007B96  2016               	addwfc	(Movimiento@i_720+1)^0,w,c
  2071  007B98  6EDA               	movwf	fsr2h,c
  2072  007B9A  50DF               	movf	indf2,w,c
  2073  007B9C  ECC3  F039         	call	_UARTWrite
  2074  007BA0                     
  2075                           ;Movimiento.c: 28:        }
  2076  007BA0  4A15               	infsnz	Movimiento@i_720^0,f,c
  2077  007BA2  2A16               	incf	(Movimiento@i_720+1)^0,f,c
  2078  007BA4  BE16               	btfsc	(Movimiento@i_720+1)^0,7,c
  2079  007BA6  EFDE  F03D         	goto	u981
  2080  007BAA  5016               	movf	(Movimiento@i_720+1)^0,w,c
  2081  007BAC  E109               	bnz	u980
  2082  007BAE  0E05               	movlw	5
  2083  007BB0  5C15               	subwf	Movimiento@i_720^0,w,c
  2084  007BB2  A0D8               	btfss	status,0,c
  2085  007BB4  EFDE  F03D         	goto	u981
  2086  007BB8  EFE0  F03D         	goto	u980
  2087  007BBC                     u981:
  2088  007BBC  EFC7  F03D         	goto	l2190
  2089  007BC0                     u980:
  2090  007BC0                     l380:
  2091  007BC0  0012               	return		;funcret
  2092  007BC2                     __end_of_Movimiento:
  2093                           	opt callstack 0
  2094                           
  2095 ;; *************** function _UARTWrite *****************
  2096 ;; Defined at:
  2097 ;;		line 26 in file "UART.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  data            1    wreg     unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  data            1    0[COMRAM] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0
  2112 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2114 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2115 ;;Total ram usage:        1 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_start
  2121 ;;		_cmd
  2122 ;;		_Par_Validated
  2123 ;;		_Ins_Validated
  2124 ;;		_Coord_Validated
  2125 ;;		_end
  2126 ;;		_main
  2127 ;;		_Movimiento
  2128 ;;		_HaltMotors
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text13
  2133  007386                     __ptext13:
  2134                           	opt callstack 0
  2135  007386                     _UARTWrite:
  2136                           	opt callstack 28
  2137                           
  2138                           ;incstack = 0
  2139                           ;UARTWrite@data stored from wreg
  2140  007386  6E01               	movwf	UARTWrite@data^0,c
  2141  007388                     l90:
  2142  007388  A89E               	btfss	158,4,c	;volatile
  2143  00738A  EFC9  F039         	goto	u591
  2144  00738E  EFCB  F039         	goto	u590
  2145  007392                     u591:
  2146  007392  EFC4  F039         	goto	l90
  2147  007396                     u590:
  2148  007396                     
  2149                           ;UART.c: 28:     TXREG= data;
  2150  007396  C001  FFAD         	movff	UARTWrite@data,4013	;volatile
  2151  00739A  0012               	return		;funcret
  2152  00739C                     __end_of_UARTWrite:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _PWM *****************
  2156 ;; Defined at:
  2157 ;;		line 19 in file "PWM.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    2
  2178 ;; This function calls:
  2179 ;;		_ContarPulsos
  2180 ;;		___wmul
  2181 ;; This function is called by:
  2182 ;;		_Movimiento
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text14
  2187  007E66                     __ptext14:
  2188                           	opt callstack 0
  2189  007E66                     _PWM:
  2190                           	opt callstack 27
  2191  007E66                     
  2192                           ;PWM.c: 21:     BanderaDisX= 1;
  2193  007E66  0E00               	movlw	0
  2194  007E68  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2195  007E6A  0E01               	movlw	1
  2196  007E6C  6E2D               	movwf	_BanderaDisX^0,c
  2197                           
  2198                           ;PWM.c: 22:     BanderaDisY= 1;
  2199  007E6E  0E00               	movlw	0
  2200  007E70  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2201  007E72  0E01               	movlw	1
  2202  007E74  6E2B               	movwf	_BanderaDisY^0,c
  2203  007E76                     
  2204                           ;PWM.c: 27:     if (CoordAntX==0) CoordRelatX=cord_x;
  2205  007E76  503B               	movf	_CoordAntX^0,w,c
  2206  007E78  103C               	iorwf	(_CoordAntX+1)^0,w,c
  2207  007E7A  A4D8               	btfss	status,2,c
  2208  007E7C  EF42  F03F         	goto	u821
  2209  007E80  EF44  F03F         	goto	u820
  2210  007E84                     u821:
  2211  007E84  EF4A  F03F         	goto	l2040
  2212  007E88                     u820:
  2213  007E88  C047  F043         	movff	_cord_x,_CoordRelatX
  2214  007E8C  C048  F044         	movff	_cord_x+1,_CoordRelatX+1
  2215  007E90  EF50  F03F         	goto	l244
  2216  007E94                     l2040:
  2217  007E94  503B               	movf	_CoordAntX^0,w,c
  2218  007E96  5C47               	subwf	_cord_x^0,w,c
  2219  007E98  6E43               	movwf	_CoordRelatX^0,c
  2220  007E9A  503C               	movf	(_CoordAntX+1)^0,w,c
  2221  007E9C  5848               	subwfb	(_cord_x+1)^0,w,c
  2222  007E9E  6E44               	movwf	(_CoordRelatX+1)^0,c
  2223  007EA0                     l244:
  2224                           
  2225                           ;PWM.c: 31:     if (CoordRelatX<0){
  2226  007EA0  BE44               	btfsc	(_CoordRelatX+1)^0,7,c
  2227  007EA2  EF57  F03F         	goto	u830
  2228  007EA6  EF55  F03F         	goto	u831
  2229  007EAA                     u831:
  2230  007EAA  EF63  F03F         	goto	l245
  2231  007EAE                     u830:
  2232  007EAE                     
  2233                           ;PWM.c: 32:         PORTDbits.RD0=0;
  2234  007EAE  9083               	bcf	131,0,c	;volatile
  2235                           
  2236                           ;PWM.c: 33:         PORTDbits.RD1=0;
  2237  007EB0  9283               	bcf	131,1,c	;volatile
  2238  007EB2                     
  2239                           ;PWM.c: 34:         CoordRelatX=CoordRelatX*(-1);
  2240  007EB2  6C43               	negf	_CoordRelatX^0,c
  2241  007EB4  1E44               	comf	(_CoordRelatX+1)^0,f,c
  2242  007EB6  B0D8               	btfsc	status,0,c
  2243  007EB8  2A44               	incf	(_CoordRelatX+1)^0,f,c
  2244  007EBA                     
  2245                           ;PWM.c: 35:         BanderaDisX= 0;
  2246  007EBA  0E00               	movlw	0
  2247  007EBC  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2248  007EBE  0E00               	movlw	0
  2249  007EC0  6E2D               	movwf	_BanderaDisX^0,c
  2250                           
  2251                           ;PWM.c: 36:     }
  2252  007EC2  EF69  F03F         	goto	l2050
  2253  007EC6                     l245:
  2254                           
  2255                           ;PWM.c: 38:             PORTDbits.RD0=1;
  2256  007EC6  8083               	bsf	131,0,c	;volatile
  2257                           
  2258                           ;PWM.c: 39:             PORTDbits.RD1=1;
  2259  007EC8  8283               	bsf	131,1,c	;volatile
  2260  007ECA                     
  2261                           ;PWM.c: 40:             BanderaDisX= 1;
  2262  007ECA  0E00               	movlw	0
  2263  007ECC  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2264  007ECE  0E01               	movlw	1
  2265  007ED0  6E2D               	movwf	_BanderaDisX^0,c
  2266  007ED2                     l2050:
  2267                           
  2268                           ;PWM.c: 43:     PasosX=CoordRelatX*5;
  2269  007ED2  C043  F001         	movff	_CoordRelatX,___wmul@multiplier
  2270  007ED6  C044  F002         	movff	_CoordRelatX+1,___wmul@multiplier+1
  2271  007EDA  0E00               	movlw	0
  2272  007EDC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2273  007EDE  0E05               	movlw	5
  2274  007EE0  6E03               	movwf	___wmul@multiplicand^0,c
  2275  007EE2  ECFD  F039         	call	___wmul	;wreg free
  2276  007EE6  C001  F031         	movff	?___wmul,_PasosX
  2277  007EEA  C002  F032         	movff	?___wmul+1,_PasosX+1
  2278  007EEE                     
  2279                           ;PWM.c: 44:     ContarPulsos(PasosX);
  2280  007EEE  C031  F001         	movff	_PasosX,ContarPulsos@pasos
  2281  007EF2  C032  F002         	movff	_PasosX+1,ContarPulsos@pasos+1
  2282  007EF6  ECB1  F03A         	call	_ContarPulsos	;wreg free
  2283  007EFA                     
  2284                           ;PWM.c: 47:     if(BanderaDisX== 0) CoordAntX= CoordAntX-CoordRelatX;
  2285  007EFA  502D               	movf	_BanderaDisX^0,w,c
  2286  007EFC  102E               	iorwf	(_BanderaDisX+1)^0,w,c
  2287  007EFE  A4D8               	btfss	status,2,c
  2288  007F00  EF84  F03F         	goto	u841
  2289  007F04  EF86  F03F         	goto	u840
  2290  007F08                     u841:
  2291  007F08  EF8E  F03F         	goto	l2058
  2292  007F0C                     u840:
  2293  007F0C  5043               	movf	_CoordRelatX^0,w,c
  2294  007F0E  5C3B               	subwf	_CoordAntX^0,w,c
  2295  007F10  6E3B               	movwf	_CoordAntX^0,c
  2296  007F12  5044               	movf	(_CoordRelatX+1)^0,w,c
  2297  007F14  583C               	subwfb	(_CoordAntX+1)^0,w,c
  2298  007F16  6E3C               	movwf	(_CoordAntX+1)^0,c
  2299  007F18  EF9D  F03F         	goto	l248
  2300  007F1C                     l2058:
  2301                           
  2302                           ;PWM.c: 49:         if (BanderaDisX== 1) CoordAntX=CoordAntX+CoordRelatX;
  2303  007F1C  042D               	decf	_BanderaDisX^0,w,c
  2304  007F1E  102E               	iorwf	(_BanderaDisX+1)^0,w,c
  2305  007F20  A4D8               	btfss	status,2,c
  2306  007F22  EF95  F03F         	goto	u851
  2307  007F26  EF97  F03F         	goto	u850
  2308  007F2A                     u851:
  2309  007F2A  EF9D  F03F         	goto	l248
  2310  007F2E                     u850:
  2311  007F2E  503B               	movf	_CoordAntX^0,w,c
  2312  007F30  2443               	addwf	_CoordRelatX^0,w,c
  2313  007F32  6E3B               	movwf	_CoordAntX^0,c
  2314  007F34  503C               	movf	(_CoordAntX+1)^0,w,c
  2315  007F36  2044               	addwfc	(_CoordRelatX+1)^0,w,c
  2316  007F38  6E3C               	movwf	(_CoordAntX+1)^0,c
  2317  007F3A                     l248:
  2318                           
  2319                           ;PWM.c: 56:     if (CoordAntY==0) CoordRelatY=cord_y;
  2320  007F3A  5039               	movf	_CoordAntY^0,w,c
  2321  007F3C  103A               	iorwf	(_CoordAntY+1)^0,w,c
  2322  007F3E  A4D8               	btfss	status,2,c
  2323  007F40  EFA4  F03F         	goto	u861
  2324  007F44  EFA6  F03F         	goto	u860
  2325  007F48                     u861:
  2326  007F48  EFAC  F03F         	goto	l2064
  2327  007F4C                     u860:
  2328  007F4C  C045  F041         	movff	_cord_y,_CoordRelatY
  2329  007F50  C046  F042         	movff	_cord_y+1,_CoordRelatY+1
  2330  007F54  EFB2  F03F         	goto	l251
  2331  007F58                     l2064:
  2332  007F58  5039               	movf	_CoordAntY^0,w,c
  2333  007F5A  5C45               	subwf	_cord_y^0,w,c
  2334  007F5C  6E41               	movwf	_CoordRelatY^0,c
  2335  007F5E  503A               	movf	(_CoordAntY+1)^0,w,c
  2336  007F60  5846               	subwfb	(_cord_y+1)^0,w,c
  2337  007F62  6E42               	movwf	(_CoordRelatY+1)^0,c
  2338  007F64                     l251:
  2339                           
  2340                           ;PWM.c: 59:     if (CoordRelatY<0){
  2341  007F64  BE42               	btfsc	(_CoordRelatY+1)^0,7,c
  2342  007F66  EFB9  F03F         	goto	u870
  2343  007F6A  EFB7  F03F         	goto	u871
  2344  007F6E                     u871:
  2345  007F6E  EFC5  F03F         	goto	l252
  2346  007F72                     u870:
  2347  007F72                     
  2348                           ;PWM.c: 60:         PORTDbits.RD0=0;
  2349  007F72  9083               	bcf	131,0,c	;volatile
  2350                           
  2351                           ;PWM.c: 61:         PORTDbits.RD1=1;
  2352  007F74  8283               	bsf	131,1,c	;volatile
  2353  007F76                     
  2354                           ;PWM.c: 62:         CoordRelatY=CoordRelatY*(-1);
  2355  007F76  6C41               	negf	_CoordRelatY^0,c
  2356  007F78  1E42               	comf	(_CoordRelatY+1)^0,f,c
  2357  007F7A  B0D8               	btfsc	status,0,c
  2358  007F7C  2A42               	incf	(_CoordRelatY+1)^0,f,c
  2359  007F7E                     
  2360                           ;PWM.c: 63:         BanderaDisY= 0;
  2361  007F7E  0E00               	movlw	0
  2362  007F80  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2363  007F82  0E00               	movlw	0
  2364  007F84  6E2B               	movwf	_BanderaDisY^0,c
  2365                           
  2366                           ;PWM.c: 64:     }
  2367  007F86  EFCB  F03F         	goto	l2074
  2368  007F8A                     l252:
  2369                           
  2370                           ;PWM.c: 66:         PORTDbits.RD0=1;
  2371  007F8A  8083               	bsf	131,0,c	;volatile
  2372                           
  2373                           ;PWM.c: 67:         PORTDbits.RD1=1;
  2374  007F8C  8283               	bsf	131,1,c	;volatile
  2375  007F8E                     
  2376                           ;PWM.c: 68:          BanderaDisY= 1;
  2377  007F8E  0E00               	movlw	0
  2378  007F90  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2379  007F92  0E01               	movlw	1
  2380  007F94  6E2B               	movwf	_BanderaDisY^0,c
  2381  007F96                     l2074:
  2382                           
  2383                           ;PWM.c: 71:     PasosY=CoordRelatY*5;
  2384  007F96  C041  F001         	movff	_CoordRelatY,___wmul@multiplier
  2385  007F9A  C042  F002         	movff	_CoordRelatY+1,___wmul@multiplier+1
  2386  007F9E  0E00               	movlw	0
  2387  007FA0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2388  007FA2  0E05               	movlw	5
  2389  007FA4  6E03               	movwf	___wmul@multiplicand^0,c
  2390  007FA6  ECFD  F039         	call	___wmul	;wreg free
  2391  007FAA  C001  F02F         	movff	?___wmul,_PasosY
  2392  007FAE  C002  F030         	movff	?___wmul+1,_PasosY+1
  2393  007FB2                     
  2394                           ;PWM.c: 72:     ContarPulsos(PasosY);
  2395  007FB2  C02F  F001         	movff	_PasosY,ContarPulsos@pasos
  2396  007FB6  C030  F002         	movff	_PasosY+1,ContarPulsos@pasos+1
  2397  007FBA  ECB1  F03A         	call	_ContarPulsos	;wreg free
  2398  007FBE                     
  2399                           ;PWM.c: 75:     if(BanderaDisY== 0) CoordAntY= CoordAntY-CoordRelatY;
  2400  007FBE  502B               	movf	_BanderaDisY^0,w,c
  2401  007FC0  102C               	iorwf	(_BanderaDisY+1)^0,w,c
  2402  007FC2  A4D8               	btfss	status,2,c
  2403  007FC4  EFE6  F03F         	goto	u881
  2404  007FC8  EFE8  F03F         	goto	u880
  2405  007FCC                     u881:
  2406  007FCC  EFF0  F03F         	goto	l2082
  2407  007FD0                     u880:
  2408  007FD0  5041               	movf	_CoordRelatY^0,w,c
  2409  007FD2  5C39               	subwf	_CoordAntY^0,w,c
  2410  007FD4  6E39               	movwf	_CoordAntY^0,c
  2411  007FD6  5042               	movf	(_CoordRelatY+1)^0,w,c
  2412  007FD8  583A               	subwfb	(_CoordAntY+1)^0,w,c
  2413  007FDA  6E3A               	movwf	(_CoordAntY+1)^0,c
  2414  007FDC  EFFF  F03F         	goto	l257
  2415  007FE0                     l2082:
  2416                           
  2417                           ;PWM.c: 77:         if (BanderaDisY== 1) CoordAntY=CoordAntY+CoordRelatY;
  2418  007FE0  042B               	decf	_BanderaDisY^0,w,c
  2419  007FE2  102C               	iorwf	(_BanderaDisY+1)^0,w,c
  2420  007FE4  A4D8               	btfss	status,2,c
  2421  007FE6  EFF7  F03F         	goto	u891
  2422  007FEA  EFF9  F03F         	goto	u890
  2423  007FEE                     u891:
  2424  007FEE  EFFF  F03F         	goto	l257
  2425  007FF2                     u890:
  2426  007FF2  5039               	movf	_CoordAntY^0,w,c
  2427  007FF4  2441               	addwf	_CoordRelatY^0,w,c
  2428  007FF6  6E39               	movwf	_CoordAntY^0,c
  2429  007FF8  503A               	movf	(_CoordAntY+1)^0,w,c
  2430  007FFA  2042               	addwfc	(_CoordRelatY+1)^0,w,c
  2431  007FFC  6E3A               	movwf	(_CoordAntY+1)^0,c
  2432  007FFE                     l257:
  2433  007FFE  0012               	return		;funcret
  2434  008000                     __end_of_PWM:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function ___wmul *****************
  2438 ;; Defined at:
  2439 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  multiplier      2    0[COMRAM] unsigned int 
  2442 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  product         2    4[COMRAM] unsigned int 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  2    0[COMRAM] unsigned int 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, prodl, prodh
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         4       0       0       0       0       0       0       0       0
  2455 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2457 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:        6 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_PWM
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text15
  2468  0073FA                     __ptext15:
  2469                           	opt callstack 0
  2470  0073FA                     ___wmul:
  2471                           	opt callstack 28
  2472  0073FA  5001               	movf	___wmul@multiplier^0,w,c
  2473  0073FC  0203               	mulwf	___wmul@multiplicand^0,c
  2474  0073FE  CFF3 F005          	movff	prodl,___wmul@product
  2475  007402  CFF4 F006          	movff	prodh,___wmul@product+1
  2476  007406  5001               	movf	___wmul@multiplier^0,w,c
  2477  007408  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2478  00740A  50F3               	movf	243,w,c
  2479  00740C  2606               	addwf	(___wmul@product+1)^0,f,c
  2480  00740E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2481  007410  0203               	mulwf	___wmul@multiplicand^0,c
  2482  007412  50F3               	movf	243,w,c
  2483  007414  2606               	addwf	(___wmul@product+1)^0,f,c
  2484  007416  C005  F001         	movff	___wmul@product,?___wmul
  2485  00741A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2486  00741E  0012               	return		;funcret
  2487  007420                     __end_of___wmul:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _ContarPulsos *****************
  2491 ;; Defined at:
  2492 ;;		line 82 in file "PWM.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  pasos           2    0[COMRAM] int 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2506 ;;      Params:         2       0       0       0       0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2509 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2510 ;;Total ram usage:        2 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		_OneShot
  2515 ;;		_ResetOneShot
  2516 ;; This function is called by:
  2517 ;;		_PWM
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text16
  2522  007562                     __ptext16:
  2523                           	opt callstack 0
  2524  007562                     _ContarPulsos:
  2525                           	opt callstack 27
  2526  007562                     
  2527                           ;PWM.c: 83:     PasosActuales=0;
  2528  007562  0E00               	movlw	0
  2529  007564  6E36               	movwf	(_PasosActuales+1)^0,c
  2530  007566  0E00               	movlw	0
  2531  007568  6E35               	movwf	_PasosActuales^0,c
  2532                           
  2533                           ;PWM.c: 84:     ons=0;
  2534  00756A  0E00               	movlw	0
  2535  00756C  6E34               	movwf	(_ons+1)^0,c
  2536  00756E  0E00               	movlw	0
  2537  007570  6E33               	movwf	_ons^0,c
  2538  007572                     
  2539                           ;PWM.c: 85:     PORTDbits.RD2=0;
  2540  007572  9483               	bcf	131,2,c	;volatile
  2541  007574                     
  2542                           ;PWM.c: 86:     PORTDbits.RD3=0;
  2543  007574  9683               	bcf	131,3,c	;volatile
  2544                           
  2545                           ;PWM.c: 87:     while(PasosActuales< pasos)
  2546  007576  EFD1  F03A         	goto	l1800
  2547  00757A                     l261:
  2548                           
  2549                           ;PWM.c: 88:     {;PWM.c: 89:         if (PORTCbits.CCP1==1) OneShot();
  2550  00757A  A482               	btfss	130,2,c	;volatile
  2551  00757C  EFC2  F03A         	goto	u611
  2552  007580  EFC4  F03A         	goto	u610
  2553  007584                     u611:
  2554  007584  EFC6  F03A         	goto	l1796
  2555  007588                     u610:
  2556  007588  EC25  F03A         	call	_OneShot	;wreg free
  2557  00758C                     l1796:
  2558                           
  2559                           ;PWM.c: 90:         if(ons==1) ResetOneShot();
  2560  00758C  0433               	decf	_ons^0,w,c
  2561  00758E  1034               	iorwf	(_ons+1)^0,w,c
  2562  007590  A4D8               	btfss	status,2,c
  2563  007592  EFCD  F03A         	goto	u621
  2564  007596  EFCF  F03A         	goto	u620
  2565  00759A                     u621:
  2566  00759A  EFD1  F03A         	goto	l1800
  2567  00759E                     u620:
  2568  00759E  EC10  F03A         	call	_ResetOneShot	;wreg free
  2569  0075A2                     l1800:
  2570                           
  2571                           ;PWM.c: 87:     while(PasosActuales< pasos)
  2572  0075A2  5001               	movf	ContarPulsos@pasos^0,w,c
  2573  0075A4  5C35               	subwf	_PasosActuales^0,w,c
  2574  0075A6  5002               	movf	(ContarPulsos@pasos+1)^0,w,c
  2575  0075A8  5836               	subwfb	(_PasosActuales+1)^0,w,c
  2576  0075AA  A0D8               	btfss	status,0,c
  2577  0075AC  EFDA  F03A         	goto	u631
  2578  0075B0  EFDC  F03A         	goto	u630
  2579  0075B4                     u631:
  2580  0075B4  EFBD  F03A         	goto	l261
  2581  0075B8                     u630:
  2582  0075B8                     
  2583                           ;PWM.c: 93:     PORTDbits.RD2=1;
  2584  0075B8  8483               	bsf	131,2,c	;volatile
  2585                           
  2586                           ;PWM.c: 94:     PORTDbits.RD3=1;
  2587  0075BA  8683               	bsf	131,3,c	;volatile
  2588  0075BC  0012               	return		;funcret
  2589  0075BE                     __end_of_ContarPulsos:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function _ResetOneShot *****************
  2593 ;; Defined at:
  2594 ;;		line 107 in file "PWM.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2608 ;;      Params:         0       0       0       0       0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2611 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_ContarPulsos
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text17
  2622  007420                     __ptext17:
  2623                           	opt callstack 0
  2624  007420                     _ResetOneShot:
  2625                           	opt callstack 27
  2626  007420                     
  2627                           ;PWM.c: 108:     if(PORTCbits.CCP1==1)return;
  2628  007420  A482               	btfss	130,2,c	;volatile
  2629  007422  EF15  F03A         	goto	u571
  2630  007426  EF17  F03A         	goto	u570
  2631  00742A                     u571:
  2632  00742A  EF19  F03A         	goto	l273
  2633  00742E                     u570:
  2634  00742E  EF24  F03A         	goto	l274
  2635  007432                     l273:
  2636                           
  2637                           ;PWM.c: 109:     if(PORTCbits.CCP1==0)ons=0;
  2638  007432  B482               	btfsc	130,2,c	;volatile
  2639  007434  EF1E  F03A         	goto	u581
  2640  007438  EF20  F03A         	goto	u580
  2641  00743C                     u581:
  2642  00743C  EF24  F03A         	goto	l274
  2643  007440                     u580:
  2644  007440  0E00               	movlw	0
  2645  007442  6E34               	movwf	(_ons+1)^0,c
  2646  007444  0E00               	movlw	0
  2647  007446  6E33               	movwf	_ons^0,c
  2648  007448                     l274:
  2649  007448  0012               	return		;funcret
  2650  00744A                     __end_of_ResetOneShot:
  2651                           	opt callstack 0
  2652                           
  2653 ;; *************** function _OneShot *****************
  2654 ;; Defined at:
  2655 ;;		line 98 in file "PWM.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_ContarPulsos
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text18
  2683  00744A                     __ptext18:
  2684                           	opt callstack 0
  2685  00744A                     _OneShot:
  2686                           	opt callstack 27
  2687  00744A                     
  2688                           ;PWM.c: 99:     if(ons==1) return;
  2689  00744A  0433               	decf	_ons^0,w,c
  2690  00744C  1034               	iorwf	(_ons+1)^0,w,c
  2691  00744E  A4D8               	btfss	status,2,c
  2692  007450  EF2C  F03A         	goto	u551
  2693  007454  EF2E  F03A         	goto	u550
  2694  007458                     u551:
  2695  007458  EF30  F03A         	goto	l268
  2696  00745C                     u550:
  2697  00745C  EF3D  F03A         	goto	l269
  2698  007460                     l268:
  2699                           
  2700                           ;PWM.c: 100:     if(PORTCbits.CCP1==1)
  2701  007460  A482               	btfss	130,2,c	;volatile
  2702  007462  EF35  F03A         	goto	u561
  2703  007466  EF37  F03A         	goto	u560
  2704  00746A                     u561:
  2705  00746A  EF3D  F03A         	goto	l269
  2706  00746E                     u560:
  2707  00746E                     
  2708                           ;PWM.c: 101:     {;PWM.c: 102:         PasosActuales++;
  2709  00746E  4A35               	infsnz	_PasosActuales^0,f,c
  2710  007470  2A36               	incf	(_PasosActuales+1)^0,f,c
  2711  007472                     
  2712                           ;PWM.c: 103:         ons=1;
  2713  007472  0E00               	movlw	0
  2714  007474  6E34               	movwf	(_ons+1)^0,c
  2715  007476  0E01               	movlw	1
  2716  007478  6E33               	movwf	_ons^0,c
  2717  00747A                     l269:
  2718  00747A  0012               	return		;funcret
  2719  00747C                     __end_of_OneShot:
  2720                           	opt callstack 0
  2721                           
  2722 ;; *************** function _InicialY *****************
  2723 ;; Defined at:
  2724 ;;		line 75 in file "CONFIGUR.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text19
  2752  0073DA                     __ptext19:
  2753                           	opt callstack 0
  2754  0073DA                     _InicialY:
  2755                           	opt callstack 30
  2756  0073DA                     
  2757                           ;CONFIGUR.c: 77:     PORTDbits.RD0=0;
  2758  0073DA  9083               	bcf	131,0,c	;volatile
  2759                           
  2760                           ;CONFIGUR.c: 78:     PORTDbits.RD1=1;
  2761  0073DC  8283               	bsf	131,1,c	;volatile
  2762  0073DE                     l502:
  2763                           
  2764                           ;CONFIGUR.c: 81:     PORTDbits.RD2=1;
  2765  0073DE  8483               	bsf	131,2,c	;volatile
  2766                           
  2767                           ;CONFIGUR.c: 82:     PORTDbits.RD3=1;
  2768  0073E0  8683               	bsf	131,3,c	;volatile
  2769  0073E2                     
  2770                           ;CONFIGUR.c: 83:     }while (CoordAntY!=0);
  2771  0073E2  5039               	movf	_CoordAntY^0,w,c
  2772  0073E4  103A               	iorwf	(_CoordAntY+1)^0,w,c
  2773  0073E6  A4D8               	btfss	status,2,c
  2774  0073E8  EFF8  F039         	goto	u901
  2775  0073EC  EFFA  F039         	goto	u900
  2776  0073F0                     u901:
  2777  0073F0  EFEF  F039         	goto	l502
  2778  0073F4                     u900:
  2779  0073F4                     
  2780                           ;CONFIGUR.c: 85:     PORTDbits.RD2=0;
  2781  0073F4  9483               	bcf	131,2,c	;volatile
  2782                           
  2783                           ;CONFIGUR.c: 86:     PORTDbits.RD3=0;
  2784  0073F6  9683               	bcf	131,3,c	;volatile
  2785  0073F8  0012               	return		;funcret
  2786  0073FA                     __end_of_InicialY:
  2787                           	opt callstack 0
  2788                           
  2789 ;; *************** function _InicialX *****************
  2790 ;; Defined at:
  2791 ;;		line 61 in file "CONFIGUR.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text20
  2819  0073BA                     __ptext20:
  2820                           	opt callstack 0
  2821  0073BA                     _InicialX:
  2822                           	opt callstack 30
  2823  0073BA                     
  2824                           ;CONFIGUR.c: 63:     PORTDbits.RD0=0;
  2825  0073BA  9083               	bcf	131,0,c	;volatile
  2826                           
  2827                           ;CONFIGUR.c: 64:     PORTDbits.RD1=0;
  2828  0073BC  9283               	bcf	131,1,c	;volatile
  2829  0073BE                     l497:
  2830                           
  2831                           ;CONFIGUR.c: 67:     {;CONFIGUR.c: 68:     PORTDbits.RD2=1;
  2832  0073BE  8483               	bsf	131,2,c	;volatile
  2833                           
  2834                           ;CONFIGUR.c: 69:     PORTDbits.RD3=1;
  2835  0073C0  8683               	bsf	131,3,c	;volatile
  2836  0073C2                     
  2837                           ;CONFIGUR.c: 70:     }while (CoordAntX!=0);
  2838  0073C2  503B               	movf	_CoordAntX^0,w,c
  2839  0073C4  103C               	iorwf	(_CoordAntX+1)^0,w,c
  2840  0073C6  A4D8               	btfss	status,2,c
  2841  0073C8  EFE8  F039         	goto	u911
  2842  0073CC  EFEA  F039         	goto	u910
  2843  0073D0                     u911:
  2844  0073D0  EFDF  F039         	goto	l497
  2845  0073D4                     u910:
  2846  0073D4                     
  2847                           ;CONFIGUR.c: 72:     PORTDbits.RD2=0;
  2848  0073D4  9483               	bcf	131,2,c	;volatile
  2849                           
  2850                           ;CONFIGUR.c: 73:     PORTDbits.RD3=0;
  2851  0073D6  9683               	bcf	131,3,c	;volatile
  2852  0073D8  0012               	return		;funcret
  2853  0073DA                     __end_of_InicialX:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _Configuracion *****************
  2857 ;; Defined at:
  2858 ;;		line 11 in file "CONFIGUR.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    2
  2879 ;; This function calls:
  2880 ;;		_UARTConfi
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text21
  2887  0075BE                     __ptext21:
  2888                           	opt callstack 0
  2889  0075BE                     _Configuracion:
  2890                           	opt callstack 28
  2891  0075BE                     
  2892                           ;CONFIGUR.c: 15:     OSCCON=0x72;
  2893  0075BE  0E72               	movlw	114
  2894  0075C0  6ED3               	movwf	211,c	;volatile
  2895  0075C2                     
  2896                           ;CONFIGUR.c: 19:    CMCON = 0xFF;
  2897  0075C2  68B4               	setf	180,c	;volatile
  2898  0075C4                     
  2899                           ;CONFIGUR.c: 20:    CVRCONbits.CVREN = 0;
  2900  0075C4  9EB5               	bcf	181,7,c	;volatile
  2901                           
  2902                           ;CONFIGUR.c: 21:    ADCON1 = 0x0F;
  2903  0075C6  0E0F               	movlw	15
  2904  0075C8  6EC1               	movwf	193,c	;volatile
  2905                           
  2906                           ;CONFIGUR.c: 25:    PORTD = 0x00;
  2907  0075CA  0E00               	movlw	0
  2908  0075CC  6E83               	movwf	131,c	;volatile
  2909                           
  2910                           ;CONFIGUR.c: 26:    LATD = 0x00;
  2911  0075CE  0E00               	movlw	0
  2912  0075D0  6E8C               	movwf	140,c	;volatile
  2913                           
  2914                           ;CONFIGUR.c: 27:    TRISD = 0xF0;
  2915  0075D2  0EF0               	movlw	240
  2916  0075D4  6E95               	movwf	149,c	;volatile
  2917                           
  2918                           ;CONFIGUR.c: 29:    PORTC = 0x00;
  2919  0075D6  0E00               	movlw	0
  2920  0075D8  6E82               	movwf	130,c	;volatile
  2921                           
  2922                           ;CONFIGUR.c: 30:    LATC= 0x00;
  2923  0075DA  0E00               	movlw	0
  2924  0075DC  6E8B               	movwf	139,c	;volatile
  2925                           
  2926                           ;CONFIGUR.c: 31:    TRISC= 0x00;
  2927  0075DE  0E00               	movlw	0
  2928  0075E0  6E94               	movwf	148,c	;volatile
  2929                           
  2930                           ;CONFIGUR.c: 33:    PORTB = 0x00;
  2931  0075E2  0E00               	movlw	0
  2932  0075E4  6E81               	movwf	129,c	;volatile
  2933                           
  2934                           ;CONFIGUR.c: 34:    LATB= 0x00;
  2935  0075E6  0E00               	movlw	0
  2936  0075E8  6E8A               	movwf	138,c	;volatile
  2937  0075EA                     
  2938                           ;CONFIGUR.c: 35:    TRISB= 0xFF;
  2939  0075EA  6893               	setf	147,c	;volatile
  2940  0075EC                     
  2941                           ;CONFIGUR.c: 39:    UARTConfi(9600);
  2942  0075EC  0E25               	movlw	37
  2943  0075EE  6E10               	movwf	(UARTConfi@BAUD+1)^0,c
  2944  0075F0  0E80               	movlw	128
  2945  0075F2  6E0F               	movwf	UARTConfi@BAUD^0,c
  2946  0075F4  EC40  F03B         	call	_UARTConfi	;wreg free
  2947  0075F8                     
  2948                           ;CONFIGUR.c: 40:     TRISC=0X00;
  2949  0075F8  0E00               	movlw	0
  2950  0075FA  6E94               	movwf	148,c	;volatile
  2951  0075FC                     
  2952                           ;CONFIGUR.c: 44:      PR2 = 0xF9;
  2953  0075FC  0EF9               	movlw	249
  2954  0075FE  6ECB               	movwf	203,c	;volatile
  2955  007600                     
  2956                           ;CONFIGUR.c: 47:     CCP1CON = 0x0C;
  2957  007600  0E0C               	movlw	12
  2958  007602  6EBD               	movwf	189,c	;volatile
  2959  007604                     
  2960                           ;CONFIGUR.c: 48:     CCPR1L = 0x7D;
  2961  007604  0E7D               	movlw	125
  2962  007606  6EBE               	movwf	190,c	;volatile
  2963  007608                     
  2964                           ;CONFIGUR.c: 51:     CCP2CON = 0x0C;
  2965  007608  0E0C               	movlw	12
  2966  00760A  6EBA               	movwf	186,c	;volatile
  2967  00760C                     
  2968                           ;CONFIGUR.c: 52:     CCPR2L = 0x7D;
  2969  00760C  0E7D               	movlw	125
  2970  00760E  6EBB               	movwf	187,c	;volatile
  2971  007610                     
  2972                           ;CONFIGUR.c: 55:     T2CON = 0x03;
  2973  007610  0E03               	movlw	3
  2974  007612  6ECA               	movwf	202,c	;volatile
  2975  007614                     
  2976                           ;CONFIGUR.c: 56:     TMR2 = 0;
  2977  007614  0E00               	movlw	0
  2978  007616  6ECC               	movwf	204,c	;volatile
  2979  007618                     
  2980                           ;CONFIGUR.c: 57:     TMR2ON = 1;
  2981  007618  84CA               	bsf	4042,2,c	;volatile
  2982  00761A  0012               	return		;funcret
  2983  00761C                     __end_of_Configuracion:
  2984                           	opt callstack 0
  2985                           
  2986 ;; *************** function _UARTConfi *****************
  2987 ;; Defined at:
  2988 ;;		line 7 in file "UART.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  BAUD            2   14[COMRAM] int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3002 ;;      Params:         2       0       0       0       0       0       0       0       0
  3003 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3005 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3006 ;;Total ram usage:        6 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    1
  3009 ;; This function calls:
  3010 ;;		___aldiv
  3011 ;; This function is called by:
  3012 ;;		_Configuracion
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text22
  3017  007680                     __ptext22:
  3018                           	opt callstack 0
  3019  007680                     _UARTConfi:
  3020                           	opt callstack 28
  3021  007680                     
  3022                           ;UART.c: 9:     TRISCbits.RC6=0;
  3023  007680  9C94               	bcf	148,6,c	;volatile
  3024                           
  3025                           ;UART.c: 10:     TRISCbits.RC7=1;
  3026  007682  8E94               	bsf	148,7,c	;volatile
  3027  007684                     
  3028                           ;UART.c: 12:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3029  007684  C00F  F005         	movff	UARTConfi@BAUD,___aldiv@divisor
  3030  007688  C010  F006         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
  3031  00768C  0E00               	movlw	0
  3032  00768E  BE06               	btfsc	(___aldiv@divisor+1)^0,7,c
  3033  007690  0EFF               	movlw	-1
  3034  007692  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3035  007694  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3036  007696  0E00               	movlw	0
  3037  007698  6E01               	movwf	___aldiv@dividend^0,c
  3038  00769A  0E12               	movlw	18
  3039  00769C  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3040  00769E  0E7A               	movlw	122
  3041  0076A0  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3042  0076A2  0E00               	movlw	0
  3043  0076A4  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3044  0076A6  ECE1  F03D         	call	___aldiv	;wreg free
  3045  0076AA  C001  F011         	movff	?___aldiv,_UARTConfi$1730
  3046  0076AE  C002  F012         	movff	?___aldiv+1,_UARTConfi$1730+1
  3047  0076B2  C003  F013         	movff	?___aldiv+2,_UARTConfi$1730+2
  3048  0076B6  C004  F014         	movff	?___aldiv+3,_UARTConfi$1730+3
  3049                           
  3050                           ;UART.c: 12:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3051  0076BA  C011  F001         	movff	_UARTConfi$1730,___aldiv@dividend
  3052  0076BE  C012  F002         	movff	_UARTConfi$1730+1,___aldiv@dividend+1
  3053  0076C2  C013  F003         	movff	_UARTConfi$1730+2,___aldiv@dividend+2
  3054  0076C6  C014  F004         	movff	_UARTConfi$1730+3,___aldiv@dividend+3
  3055  0076CA  0E40               	movlw	64
  3056  0076CC  6E05               	movwf	___aldiv@divisor^0,c
  3057  0076CE  0E00               	movlw	0
  3058  0076D0  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3059  0076D2  0E00               	movlw	0
  3060  0076D4  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3061  0076D6  0E00               	movlw	0
  3062  0076D8  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3063  0076DA  ECE1  F03D         	call	___aldiv	;wreg free
  3064  0076DE  0401               	decf	?___aldiv^0,w,c
  3065  0076E0  6EAF               	movwf	175,c	;volatile
  3066  0076E2                     
  3067                           ;UART.c: 13:     TXSTAbits.BRGH = 0;
  3068  0076E2  94AC               	bcf	172,2,c	;volatile
  3069  0076E4                     
  3070                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  3071  0076E4  98AC               	bcf	172,4,c	;volatile
  3072  0076E6                     
  3073                           ;UART.c: 15:     RCSTAbits.SPEN = 1;
  3074  0076E6  8EAB               	bsf	171,7,c	;volatile
  3075  0076E8                     
  3076                           ;UART.c: 18:     TXSTAbits.TX9 = 0;
  3077  0076E8  9CAC               	bcf	172,6,c	;volatile
  3078  0076EA                     
  3079                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  3080  0076EA  8AAC               	bsf	172,5,c	;volatile
  3081  0076EC                     
  3082                           ;UART.c: 22:     RCSTAbits.RC9 = 0;
  3083  0076EC  9CAB               	bcf	171,6,c	;volatile
  3084  0076EE                     
  3085                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  3086  0076EE  88AB               	bsf	171,4,c	;volatile
  3087  0076F0  0012               	return		;funcret
  3088  0076F2                     __end_of_UARTConfi:
  3089                           	opt callstack 0
  3090                           
  3091 ;; *************** function ___aldiv *****************
  3092 ;; Defined at:
  3093 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  dividend        4    0[COMRAM] long 
  3096 ;;  divisor         4    4[COMRAM] long 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  quotient        4   10[COMRAM] long 
  3099 ;;  sign            1    9[COMRAM] unsigned char 
  3100 ;;  counter         1    8[COMRAM] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  4    0[COMRAM] long 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3110 ;;      Params:         8       0       0       0       0       0       0       0       0
  3111 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3113 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3114 ;;Total ram usage:       14 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_UARTConfi
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text23
  3124  007BC2                     __ptext23:
  3125                           	opt callstack 0
  3126  007BC2                     ___aldiv:
  3127                           	opt callstack 28
  3128  007BC2  0E00               	movlw	0
  3129  007BC4  6E0A               	movwf	___aldiv@sign^0,c
  3130  007BC6  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3131  007BC8  EFEA  F03D         	goto	u640
  3132  007BCC  EFE8  F03D         	goto	u641
  3133  007BD0                     u641:
  3134  007BD0  EFF4  F03D         	goto	l1816
  3135  007BD4                     u640:
  3136  007BD4  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3137  007BD6  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3138  007BD8  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3139  007BDA  6C05               	negf	___aldiv@divisor^0,c
  3140  007BDC  0E00               	movlw	0
  3141  007BDE  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3142  007BE0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3143  007BE2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3144  007BE4  0E01               	movlw	1
  3145  007BE6  6E0A               	movwf	___aldiv@sign^0,c
  3146  007BE8                     l1816:
  3147  007BE8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3148  007BEA  EFFB  F03D         	goto	u650
  3149  007BEE  EFF9  F03D         	goto	u651
  3150  007BF2                     u651:
  3151  007BF2  EF05  F03E         	goto	l1822
  3152  007BF6                     u650:
  3153  007BF6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3154  007BF8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3155  007BFA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3156  007BFC  6C01               	negf	___aldiv@dividend^0,c
  3157  007BFE  0E00               	movlw	0
  3158  007C00  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3159  007C02  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3160  007C04  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3161  007C06  0E01               	movlw	1
  3162  007C08  1A0A               	xorwf	___aldiv@sign^0,f,c
  3163  007C0A                     l1822:
  3164  007C0A  0E00               	movlw	0
  3165  007C0C  6E0B               	movwf	___aldiv@quotient^0,c
  3166  007C0E  0E00               	movlw	0
  3167  007C10  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3168  007C12  0E00               	movlw	0
  3169  007C14  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3170  007C16  0E00               	movlw	0
  3171  007C18  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3172  007C1A  5005               	movf	___aldiv@divisor^0,w,c
  3173  007C1C  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3174  007C1E  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3175  007C20  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3176  007C22  B4D8               	btfsc	status,2,c
  3177  007C24  EF16  F03E         	goto	u661
  3178  007C28  EF18  F03E         	goto	u660
  3179  007C2C                     u661:
  3180  007C2C  EF4E  F03E         	goto	l1844
  3181  007C30                     u660:
  3182  007C30  0E01               	movlw	1
  3183  007C32  6E09               	movwf	___aldiv@counter^0,c
  3184  007C34  EF22  F03E         	goto	l1830
  3185  007C38                     l1828:
  3186  007C38  90D8               	bcf	status,0,c
  3187  007C3A  3605               	rlcf	___aldiv@divisor^0,f,c
  3188  007C3C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3189  007C3E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3190  007C40  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3191  007C42  2A09               	incf	___aldiv@counter^0,f,c
  3192  007C44                     l1830:
  3193  007C44  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3194  007C46  EF27  F03E         	goto	u671
  3195  007C4A  EF29  F03E         	goto	u670
  3196  007C4E                     u671:
  3197  007C4E  EF1C  F03E         	goto	l1828
  3198  007C52                     u670:
  3199  007C52                     l1832:
  3200  007C52  90D8               	bcf	status,0,c
  3201  007C54  360B               	rlcf	___aldiv@quotient^0,f,c
  3202  007C56  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3203  007C58  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3204  007C5A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3205  007C5C  5005               	movf	___aldiv@divisor^0,w,c
  3206  007C5E  5C01               	subwf	___aldiv@dividend^0,w,c
  3207  007C60  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3208  007C62  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3209  007C64  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3210  007C66  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3211  007C68  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3212  007C6A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3213  007C6C  A0D8               	btfss	status,0,c
  3214  007C6E  EF3B  F03E         	goto	u681
  3215  007C72  EF3D  F03E         	goto	u680
  3216  007C76                     u681:
  3217  007C76  EF46  F03E         	goto	l1840
  3218  007C7A                     u680:
  3219  007C7A  5005               	movf	___aldiv@divisor^0,w,c
  3220  007C7C  5E01               	subwf	___aldiv@dividend^0,f,c
  3221  007C7E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3222  007C80  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3223  007C82  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3224  007C84  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3225  007C86  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3226  007C88  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3227  007C8A  800B               	bsf	___aldiv@quotient^0,0,c
  3228  007C8C                     l1840:
  3229  007C8C  90D8               	bcf	status,0,c
  3230  007C8E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3231  007C90  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3232  007C92  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3233  007C94  3205               	rrcf	___aldiv@divisor^0,f,c
  3234  007C96  2E09               	decfsz	___aldiv@counter^0,f,c
  3235  007C98  EF29  F03E         	goto	l1832
  3236  007C9C                     l1844:
  3237  007C9C  500A               	movf	___aldiv@sign^0,w,c
  3238  007C9E  B4D8               	btfsc	status,2,c
  3239  007CA0  EF54  F03E         	goto	u691
  3240  007CA4  EF56  F03E         	goto	u690
  3241  007CA8                     u691:
  3242  007CA8  EF5E  F03E         	goto	l1848
  3243  007CAC                     u690:
  3244  007CAC  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3245  007CAE  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3246  007CB0  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3247  007CB2  6C0B               	negf	___aldiv@quotient^0,c
  3248  007CB4  0E00               	movlw	0
  3249  007CB6  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3250  007CB8  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3251  007CBA  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3252  007CBC                     l1848:
  3253  007CBC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3254  007CC0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3255  007CC4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3256  007CC8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3257  007CCC  0012               	return		;funcret
  3258  007CCE                     __end_of___aldiv:
  3259                           	opt callstack 0
  3260  0000                     
  3261                           	psect	rparam
  3262  0000                     tosu	equ	0xFFF
  3263                           tosh	equ	0xFFE
  3264                           tosl	equ	0xFFD
  3265                           stkptr	equ	0xFFC
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           pcl	equ	0xFF9
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           indf0	equ	0xFEF
  3276                           postinc0	equ	0xFEE
  3277                           postdec0	equ	0xFED
  3278                           preinc0	equ	0xFEC
  3279                           plusw0	equ	0xFEB
  3280                           fsr0h	equ	0xFEA
  3281                           fsr0l	equ	0xFE9
  3282                           wreg	equ	0xFE8
  3283                           indf1	equ	0xFE7
  3284                           postinc1	equ	0xFE6
  3285                           postdec1	equ	0xFE5
  3286                           preinc1	equ	0xFE4
  3287                           plusw1	equ	0xFE3
  3288                           fsr1h	equ	0xFE2
  3289                           fsr1l	equ	0xFE1
  3290                           bsr	equ	0xFE0
  3291                           indf2	equ	0xFDF
  3292                           postinc2	equ	0xFDE
  3293                           postdec2	equ	0xFDD
  3294                           preinc2	equ	0xFDC
  3295                           plusw2	equ	0xFDB
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        45
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      90
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _verification->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite
    ___lwdiv->___lwmod
    _PWM->___wmul
    _Configuracion->_UARTConfi
    _UARTConfi->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    5108
                                             30 COMRAM    12    12      0
                      _Configuracion
                           _InicialX
                           _InicialY
                         _Movimiento
                          _UARTWrite
                            ___lwdiv
                            ___lwmod
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    1351
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _end                                                  2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0     901
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (3) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1071
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                          16    16      0     843
                                              6 COMRAM    16    16      0
                                _PWM
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (3) _UARTWrite                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM                                                  0     0      0     637
                       _ContarPulsos
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _ContarPulsos                                         2     0      2     174
                                              0 COMRAM     2     0      2
                            _OneShot
                       _ResetOneShot
 ---------------------------------------------------------------------------------
 (4) _ResetOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _OneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicialY                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicialX                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0     725
                          _UARTConfi
 ---------------------------------------------------------------------------------
 (2) _UARTConfi                                            6     4      2     725
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
     _UARTConfi
       ___aldiv
   _InicialX
   _InicialY
   _Movimiento
     _PWM
       _ContarPulsos
         _OneShot
         _ResetOneShot
       ___wmul
     _UARTWrite
   _UARTWrite
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _verification
     _Coord_Validated
       _UARTWrite
     _Ins_Validated
       _UARTWrite
     _Par_Validated
       _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
     _end
       _UARTWrite
     _start
       _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      5A       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      78      20        0.0%
DATA                 0      0      78       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 03 15:42:04 2019

                       _x 003D                        l40 784A                        l34 74BC  
                      l51 7956                        l35 74C0                        l60 78CC  
                      l44 7762                        l90 7388                        l68 750A  
                      l93 739A                        l87 76F0                        l96 7374  
                      l99 7384               __CFG_BOR$ON 000000       ___wmul@multiplicand 0003  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000                       l122 7ADA  
                     l320 79F6                       l251 7F64                       l252 7F8A  
                     l244 7EA0                       l261 757A                       l245 7EC6  
                     l502 73DE                       l503 73F4                       l504 73F8  
                     l264 75B8                       l248 7F3A                       l273 7432  
                     l265 75BC                       l257 7FFE                       l274 7448  
                     l507 741E                       l268 7460                       l380 7BC0  
                     l269 747A                       l494 761A                       l497 73BE  
                     l586 7CCC                       l498 73D4                       l499 73D8  
                     l998 77CE              __CFG_CPB$OFF 000000                       _PR2 000FCB  
                     u600 7A36                       u601 7A32                       u610 7588  
            __CFG_CPD$OFF 000000                       u611 7584                       u620 759E  
                     u540 7382                       u700 74BC                       u621 759A  
                     u541 737E                       u701 74B8                       u550 745C  
                     u630 75B8                       u710 781C                       u551 7458  
                     u631 75B4                       u711 7818                       u640 7BD4  
                     u560 746E                       u800 78C6                       u720 7708  
                     u641 7BD0                       u561 746A                       u801 78C2  
                     u721 7704                       u650 7BF6                       u570 742E  
                     u730 771A                       u810 7502                       u651 7BF2  
                     u571 742A                       u731 7716                       u811 74FE  
                     u660 7C30                       u900 73F4                       u580 7440  
                     u820 7E88                       u740 7760                       u661 7C2C  
                     u901 73F0                       u581 743C                       u821 7E84  
                     u741 775C                       u670 7C52                       u910 73D4  
                     u830 7EAE                       u590 7396                       u750 78E4  
                     u671 7C4E                       u911 73D0                       u831 7EAA  
                     u591 7392                       u751 78E0                       u680 7C7A  
                     u840 7F0C                       u760 7904                       u920 79F6  
                     u681 7C76                       u841 7F08                       u761 7900  
                     u921 79F2                       u690 7CAC                       u850 7F2E  
                     u930 7AEC                       u770 7950                       u691 7CA8  
                     u851 7F2A                       u931 7AE8                       u771 794C  
                     u860 7F4C                       u780 7866                       u861 7F48  
                     u941 7B16                       u781 7862                       u870 7F72  
                     u950 7B58                       u790 787C                       u871 7F6E  
                     u951 7B54                       u791 7878                       u880 7FD0  
                     u960 7B6C                       u881 7FCC                       u961 7B68  
                     u890 7FF2                       u891 7FEE                       u971 7B7E  
                     u980 7BC0                       u981 7BBC                       u990 777E  
                     u991 777A                       _PWM 7E66            ??_ContarPulsos 0003  
                     _e_c 0060                       _cmd 77D8                       _end 74C2  
                     _ons 0033                       wreg 000FE8              __CFG_LVP$OFF 000000  
                    ?_PWM 0001               coord@buffer 000F              __CFG_WDT$OFF 000000  
                    l1005 77D6                      l1015 767E                      l1008 7676  
                    l2000 74C8                      l2010 74E6                      l2020 76E2  
                    l2100 75FC                      l2012 7502                      l2030 76EC  
                    l2022 76E4                      l2110 7610                      l2102 7600  
                    l2006 74D0                      l2032 76EE                      l2024 76E6  
                    l2016 7680                      l2112 7614                      l2104 7604  
                    l2120 73E2                      l2040 7E94                      l2200 777E  
                    l2008 74E2                      l2026 76E8                      l2018 7684  
                    l2114 7618                      l2106 7608                      l2122 73BA  
                    l2050 7ED2                      l2042 7EAE                      l2034 7E66  
                    l2210 77B8                      l2202 7786                      l2130 796A  
                    l2028 76EA                      l2108 760C                      l2124 73C2  
                    l2060 7F2E                      l2052 7EEE                      l2044 7EB2  
                    l2036 7E76                      l2212 77C0                      l2204 778E  
                    l2220 762E                      l2132 7974                      l2118 73DA  
                    l2070 7F7E                      l2062 7F4C                      l2054 7EFA  
                    l2046 7EBA                      l2038 7E88                      l2150 7ADC  
                    l2214 77C2                      l2206 779C                      l2230 766A  
                    l2222 7636                      l2142 799A                      l2134 797E  
                    l2126 7958                      l2080 7FD0                      l2072 7F8E  
                    l2064 7F58                      l2056 7F0C                      l2048 7ECA  
                    l2160 7B0C                      l2152 7AEC                      l2216 77C8  
                    l2208 77A2                      l2232 7670                      l2224 763E  
                    l2136 7988                      l2128 7960                      l2144 79E4  
                    l2240 7CDE                      l2090 75C2                      l2082 7FE0  
                    l2074 7F96                      l2066 7F72                      l2058 7F1C  
                    l2170 7B38                      l2162 7B1E                      l2154 7AF0  
                    l2226 764C                      l2218 761C                      l2138 7992  
                    l2250 7D36                      l2242 7CE6                      l2234 7CCE  
                    ?_cmd 0001                      l2092 75C4                      l2084 7FF2  
                    l2076 7FB2                      l2068 7F76                      l2180 7B72  
                    l2172 7B3C                      l2156 7AF2                      l2228 7662  
                    l2260 7DD0                      l2252 7D52                      l2244 7CEA  
                    l2236 7CD2                      l2094 75EA                      l2078 7FBE  
                    l2190 7B8E                      l2182 7B74                      l2158 7B0A  
                    l2174 7B5C                      l2270 7E04                      l2262 7DEA  
                    l2254 7D6C                      l2246 7CEE                      l2238 7CD4  
                    l2096 75EC                      l2088 75BE                      l1800 75A2  
                    l2192 7BA0                      l2184 7B86                      l2176 7B6C  
                    l2168 7B26                      l2280 7E2C                      l2272 7E08  
                    l2256 7D86                      l2248 7D08                      l1810 7BC6  
                    l2098 75F8                      l1802 73FA                      l2194 7BA4  
                    l2178 7B6E                      l2282 7E3E                      l2274 7E24  
                    l2258 7DB4                      l1820 7C06                      l1812 7BD4  
                    l1804 7416                      l2196 7764                      l1740 7374  
                    l2284 7E42                      l2268 7DF2                      ?_end 0001  
                    l1830 7C44                      l1822 7C0A                      l1814 7BE4  
                    l1750 746E                      l2198 776C                      l1742 7382  
                    l1840 7C8C                      l1832 7C52                      l1824 7C1A  
                    l1816 7BE8                      l1808 7BC2                      l1752 7472  
                    l1760 7440                      l1912 772E                      l1904 7720  
                    l1842 7C96                      l1834 7C5C                      l1826 7C30  
                    l1818 7BF6                      l1746 744A                      l1922 78CE  
                    l1914 7740                      l1906 7726                      l2298 79AE  
                    l1836 7C7A                      l1828 7C38                      l1844 7C9C  
                    l1756 7420                      l1764 7388                      l1924 78D2  
                    l1916 7744                      l1780 7A1A                      l1860 748A  
                    l1852 747C                      l1846 7CAC                      l1838 7C8A  
                    l1790 7572                      l1766 7396                      l1926 78E4  
                    l1934 78F2                      l1918 7760                      l1782 7A36  
                    l1774 7A00                      l1870 77D8                      l1862 749C  
                    l1854 7482                      l1848 7CBC                      l1792 7574  
                    l1960 7954                      l1952 791E                      l1936 7904  
                    l1944 7910                      l1928 78EC                      l1784 7A4E  
                    l1776 7A06                      l1768 79F8                      l1880 77EA  
                    l1872 77DE                      l1864 74A0                      l1794 7588  
                    l1970 787C                      l1954 7930                      l1946 7916  
                    l1786 7A8E                      l1778 7A16                      l1882 77FC  
                    l1874 77E2                      l1866 74BE                      l1796 758C  
                    l1788 7562                      l1980 788C                      l1972 7880  
                    l1964 784C                      l1956 7934                      l1892 76F2  
                    l1884 7800                      l1798 759E                      l1990 78AA  
                    l1966 7850                      l1958 7950                      l1894 76F6  
                    l1886 781C                      l1992 78C6                      l1968 7866  
                    l1896 7708                      l1888 7848                      l1994 78CA  
                    l1986 7894                      l1978 7886                      l1898 771A  
                    l1988 78A6                      l1998 74C2                      u1000 779C  
                    u1001 7798                      u1010 77B8                      u1011 77B4  
                    u1020 762E                      u1021 762A                      u1030 764C  
                    u1031 7648                      u1040 7662                      u1041 765E  
                    u1050 7E24                      u1051 7E20                      u1060 7E5E  
                    u1061 7E5A                      u1077 7AFC                      _LATB 000F8A  
                    _LATC 000F8B                      _LATD 000F8C                      _RCIF 007CF5  
                    _TMR2 000FCC               _BanderaDisX 002D               _BanderaDisY 002B  
                    _Par1 004B                      _Par2 0049                      cmd@i 001B  
                    _main 7CCE                      _init 006D                      end@i 0002  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9         ??_Coord_Validated 0002                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
            ___param_bank 000000                     ??_PWM 0007           __end_of_OneShot 747C  
           _Ins_Validated 78CE                     ??_cmd 001B                     ??_end 0002  
         Movimiento@F3246 0051           Movimiento@F3249 004C            __CFG_CCP2MX$ON 000000  
         __end_of___aldiv 7CCE                     ?_main 0001                     _CMCON 000FB4  
                   _T2CON 000FCA           __end_of___lwdiv 77D8           __end_of___lwmod 7680  
                   _RCREG 000FAE             _Par_Validated 76F2                     _SPBRG 000FAF  
                   _PORTB 000F81                     _PORTC 000F82                     _PORTD 000F83  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TXREG 000FAD           Movimiento@i_720 0015             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000        __size_of_UARTConfi 0072                     _Error 0056  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000          __end_of_UARTRead 7386  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
      __size_of_UARTWrite 0016            __CFG_EBTRB$OFF 000000                     _click 003F  
                   _coord 79F8                     _start 747C                     main@a 001F  
                   main@b 0022                     main@i 0027                     tablat 000FF5  
                   plusw1 000FE3                     plusw2 000FDB                     status 000FD8  
          __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000            __CFG_MCLRE$OFF 000000  
         __initialization 750C              __end_of_main 7E66            ?_Ins_Validated 0001  
        __end_of_InicialX 73DA          __end_of_InicialY 73FA                    ??_main 001F  
          ?_Par_Validated 0001             __activetblptr 000002                    _ADCON1 000FC1  
                  ?_coord 0001                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
                  ?_start 0001                    _OSCCON 000FD3                    _TMR2ON 007E52  
               ??_OneShot 0001      __end_of_ContarPulsos 75BE            __CFG_XINST$OFF 000000  
                  _PasosX 0031                    _PasosY 002F         __end_of_UARTConfi 76F2  
              _Movimiento 7ADC               _CoordRelatX 0043               _CoordRelatY 0041  
               ??___aldiv 0009         __end_of_UARTWrite 739C                    ___wmul 73FA  
          __CFG_STVREN$ON 000000                 ??___lwdiv 000A                 ??___lwmod 0005  
                  _cord_x 0047                    _cord_y 0045                    _letter 004A  
                  clear_0 7552                    coord@L 0003                    coord@i 0019  
                  coord@x 0005                    coord@y 0007              __pdataCOMRAM 004C  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
                  start@i 0002                __accesstop 0060   __end_of__initialization 7558  
           ___rparam_used 000001           ??_Ins_Validated 0002            __pcstackCOMRAM 0001  
            __pidataBANK0 739C                 ?_UARTRead 0001             __end_of_coord 7ADC  
           __end_of_start 74C2           ??_Par_Validated 0002             ?_ResetOneShot 0001  
          _UARTConfi$1730 0011             _PasosActuales 0035           _Coord_Validated 784C  
                 ??_coord 000B                   ??_start 0002     __end_of_Configuracion 761C  
               ?_InicialX 0001                 ?_InicialY 0001               ?_Movimiento 0001  
                 ?___wmul 0001                ??_UARTRead 0001                   _CCP1CON 000FBD  
                 _CCP2CON 000FBA            ??_ResetOneShot 0001          Coord_Validated@i 0002  
   __size_of_ContarPulsos 005C                ??_InicialX 0001                ??_InicialY 0001  
             Movimiento@i 0013           __CFG_VREGEN$OFF 000000                   _OneShot 744A  
                 __Hparam 0000                   __Lparam 0000                   ___aldiv 7BC2  
         __size_of___wmul 0026                   ___lwdiv 7764                   ___lwmod 761C  
                 __pcinit 750C                   __ramtop 0800                   __ptext0 7CCE  
                 __ptext1 7958                   __ptext2 747C                   __ptext3 74C2  
                 __ptext4 77D8                   __ptext5 79F8                   __ptext6 7374  
                 __ptext7 76F2                   __ptext8 78CE                   __ptext9 784C  
 __end_of_Coord_Validated 78CE                   _gracias 0077              __size_of_PWM 019A  
            __size_of_cmd 0074              __size_of_end 004A              _ContarPulsos 7562  
        ___aldiv@dividend 0001    Movimiento@loquequieras 0009                   coord@P1 0001  
                 coord@P2 0009       __size_of_Movimiento 00E6      end_of_initialization 7558  
           __Lmediumconst 0000                 _RCSTAbits 000FAB          ___aldiv@quotient 000B  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc2 000FDE                 _UARTConfi 7680                 _UARTWrite 7386  
               _PORTCbits 000F82                 _PORTDbits 000F83                 _TRISCbits 000F94  
           ?_verification 0001                 _TXSTAbits 000FAC      __end_of_ResetOneShot 744A  
              ?_UARTConfi 000F            __end_of___wmul 7420             __pidataCOMRAM 7365  
               _CoordAntX 003B                 _CoordAntY 0039         __size_of_UARTRead 0012  
              ?_UARTWrite 0001          ?_Coord_Validated 0001       start_initialization 750C  
             __end_of_PWM 8000               __end_of_cmd 784C               __end_of_end 750C  
          ??_verification 001D             UARTConfi@BAUD 000F                 _NextState 0040  
       __size_of_InicialX 0020         __size_of_InicialY 0020              ??_Movimiento 0007  
   __end_of_Ins_Validated 7958                  ??___wmul 0005               __pdataBANK0 0060  
        __CFG_LPT1OSC$OFF 000000     __end_of_Par_Validated 7764               __pbssCOMRAM 002B  
      __end_of_Movimiento 7BC2                  ?_OneShot 0001                 _main$1731 0025  
        ___lwdiv@dividend 0006                  ?___aldiv 0001                  ?___lwdiv 0006  
                ?___lwmod 0001               ??_UARTConfi 0011               ??_UARTWrite 0001  
  __size_of_Configuracion 005E          ___lwdiv@quotient 000A            __size_of_coord 00E4  
   __size_of_ResetOneShot 002A            __size_of_start 0046           ___aldiv@divisor 0005  
         ___aldiv@counter 0009            ___wmul@product 0005                  _PIR1bits 000F9E  
                _RCONbits 000FD0          __CFG_WDTPS$32768 000000                  _UARTRead 7374  
    __end_of_verification 79F8                 main@i_419 0029         ___wmul@multiplier 0001  
            _ResetOneShot 7420                 coord@read 0018             UARTWrite@data 0001  
             _INTCON2bits 000FF1               _INTCON3bits 000FF0                 copy_data0 7520  
               copy_data1 7540                  _InicialX 73BA                  _InicialY 73DA  
           _Configuracion 75BE                  __Hrparam 0000          __size_of_OneShot 0032  
                __Lrparam 0000          __size_of___aldiv 010C          __size_of___lwdiv 0074  
        __size_of___lwmod 0064         ContarPulsos@pasos 0001           ___lwdiv@divisor 0008  
         ___lwdiv@counter 000C                  __ptext10 761C                  __ptext11 7764  
                __ptext20 73BA                  __ptext12 7ADC                  __ptext21 75BE  
                __ptext13 7386                  __ptext22 7680                  __ptext14 7E66  
                __ptext23 7BC2                  __ptext15 73FA                  __ptext16 7562  
                __ptext17 7420                  __ptext18 744A                  __ptext19 73DA  
          Ins_Validated@i 0002            ?_Configuracion 0001             __size_of_main 0198  
 Movimiento@loquequieras2 000E                _CVRCONbits 000FB5                _INTCONbits 000FF2  
          Par_Validated@i 0002  __size_of_Coord_Validated 0082          ___lwmod@dividend 0001  
   __size_of_verification 00A0       __CFG_FOSC$INTOSC_EC 000000           ___lwmod@divisor 0003  
           ?_ContarPulsos 0001           ___lwmod@counter 0005              ___aldiv@sign 000A  
         ??_Configuracion 0015    __size_of_Ins_Validated 008A              _verification 7958  
         _pasosRecorridos 0037    __size_of_Par_Validated 0072  
