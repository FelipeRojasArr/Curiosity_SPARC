

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 01 16:49:44 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  0079F5                     __pidataCOMRAM:
    64                           	opt callstack 0
    65                           
    66                           ;initializer for _e_c
    67  0079F5  45                 	db	69
    68  0079F6  6E                 	db	110
    69  0079F7  74                 	db	116
    70  0079F8  65                 	db	101
    71  0079F9  72                 	db	114
    72  0079FA  5F                 	db	95
    73  0079FB  63                 	db	99
    74  0079FC  6F                 	db	111
    75  0079FD  6D                 	db	109
    76  0079FE  6D                 	db	109
    77  0079FF  61                 	db	97
    78  007A00  6E                 	db	110
    79  007A01  64                 	db	100
    80                           
    81                           ;initializer for _init
    82  007A02  57                 	db	87
    83  007A03  61                 	db	97
    84  007A04  69                 	db	105
    85  007A05  74                 	db	116
    86  007A06  69                 	db	105
    87  007A07  6E                 	db	110
    88  007A08  67                 	db	103
    89  007A09  2E                 	db	46
    90  007A0A  2E                 	db	46
    91  007A0B  2E                 	db	46
    92                           
    93                           ;initializer for _gracias
    94  007A0C  47                 	db	71
    95  007A0D  72                 	db	114
    96  007A0E  61                 	db	97
    97  007A0F  63                 	db	99
    98  007A10  69                 	db	105
    99  007A11  61                 	db	97
   100  007A12  73                 	db	115
   101                           
   102                           ;initializer for _Error
   103  007A13  45                 	db	69
   104  007A14  72                 	db	114
   105  007A15  72                 	db	114
   106  007A16  6F                 	db	111
   107  007A17  72                 	db	114
   108                           
   109                           	psect	nvCOMRAM
   110  000059                     __pnvCOMRAM:
   111                           	opt callstack 0
   112  000059                     _x:
   113                           	opt callstack 0
   114  000059                     	ds	2
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTDbits	set	3971
   117  0000                     _TRISC	set	3988
   118  0000                     _OSCCON	set	4051
   119  0000                     _RCREG	set	4014
   120  0000                     _TXREG	set	4013
   121  0000                     _PIR1bits	set	3998
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _TXSTAbits	set	4012
   124  0000                     _SPBRG	set	4015
   125  0000                     _TRISCbits	set	3988
   126  0000                     _PORTC	set	3970
   127  0000                     _RCIF	set	31989
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  007A3C                     __pcinit:
   133                           	opt callstack 0
   134  007A3C                     start_initialization:
   135                           	opt callstack 0
   136  007A3C                     __initialization:
   137                           	opt callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (35 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141  007A3C  0EF5               	movlw	low __pidataCOMRAM
   142  007A3E  6EF6               	movwf	tblptrl,c
   143  007A40  0E79               	movlw	high __pidataCOMRAM
   144  007A42  6EF7               	movwf	tblptrh,c
   145  007A44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146  007A46  6EF8               	movwf	tblptru,c
   147  007A48  EE00  F001         	lfsr	0,__pdataCOMRAM
   148  007A4C  EE10 F023          	lfsr	1,35
   149  007A50                     copy_data0:
   150  007A50  0009               	tblrd		*+
   151  007A52  CFF5 FFEE          	movff	tablat,postinc0
   152  007A56  50E5               	movf	postdec1,w,c
   153  007A58  50E1               	movf	fsr1l,w,c
   154  007A5A  E1FA               	bnz	copy_data0
   155                           
   156                           ; Clear objects allocated to COMRAM (23 bytes)
   157  007A5C  EE00  F042         	lfsr	0,__pbssCOMRAM
   158  007A60  0E17               	movlw	23
   159  007A62                     clear_0:
   160  007A62  6AEE               	clrf	postinc0,c
   161  007A64  06E8               	decf	wreg,f,c
   162  007A66  E1FD               	bnz	clear_0
   163  007A68                     end_of_initialization:
   164                           	opt callstack 0
   165  007A68                     __end_of__initialization:
   166                           	opt callstack 0
   167  007A68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  007A6A  6EF8               	movwf	tblptru,c
   169  007A6C  0100               	movlb	0
   170  007A6E  EF0C  F03D         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173  000042                     __pbssCOMRAM:
   174                           	opt callstack 0
   175  000042                     _ons:
   176                           	opt callstack 0
   177  000042                     	ds	2
   178  000044                     _PasosActuales:
   179                           	opt callstack 0
   180  000044                     	ds	2
   181  000046                     _pasosRecorridos:
   182                           	opt callstack 0
   183  000046                     	ds	2
   184  000048                     _CoordRelatY:
   185                           	opt callstack 0
   186  000048                     	ds	2
   187  00004A                     _CoordRelatX:
   188                           	opt callstack 0
   189  00004A                     	ds	2
   190  00004C                     _CoordAntY:
   191                           	opt callstack 0
   192  00004C                     	ds	2
   193  00004E                     _CoordAntX:
   194                           	opt callstack 0
   195  00004E                     	ds	2
   196  000050                     _click:
   197                           	opt callstack 0
   198  000050                     	ds	1
   199  000051                     _NextState:
   200                           	opt callstack 0
   201  000051                     	ds	1
   202  000052                     _cord_y:
   203                           	opt callstack 0
   204  000052                     	ds	2
   205  000054                     _cord_x:
   206                           	opt callstack 0
   207  000054                     	ds	2
   208  000056                     _Par2:
   209                           	opt callstack 0
   210  000056                     	ds	1
   211  000057                     _letter:
   212                           	opt callstack 0
   213  000057                     	ds	1
   214  000058                     _Par1:
   215                           	opt callstack 0
   216  000058                     	ds	1
   217                           
   218                           	psect	dataCOMRAM
   219  000001                     __pdataCOMRAM:
   220                           	opt callstack 0
   221  000001                     _e_c:
   222                           	opt callstack 0
   223  000001                     	ds	13
   224  00000E                     _init:
   225                           	opt callstack 0
   226  00000E                     	ds	10
   227  000018                     _gracias:
   228                           	opt callstack 0
   229  000018                     	ds	7
   230  00001F                     _Error:
   231                           	opt callstack 0
   232  00001F                     	ds	5
   233                           
   234                           	psect	cstackCOMRAM
   235  000024                     __pcstackCOMRAM:
   236                           	opt callstack 0
   237  000024                     ?___aldiv:
   238                           	opt callstack 0
   239  000024                     UARTWrite@data:
   240                           	opt callstack 0
   241  000024                     coord@P1:
   242                           	opt callstack 0
   243  000024                     ___aldiv@dividend:
   244                           	opt callstack 0
   245                           
   246                           ; 4 bytes @ 0x0
   247  000024                     	ds	1
   248  000025                     start@i:
   249                           	opt callstack 0
   250  000025                     Par_Validated@i:
   251                           	opt callstack 0
   252  000025                     Ins_Validated@i:
   253                           	opt callstack 0
   254  000025                     Coord_Validated@i:
   255                           	opt callstack 0
   256  000025                     end@i:
   257                           	opt callstack 0
   258                           
   259                           ; 2 bytes @ 0x1
   260  000025                     	ds	1
   261  000026                     coord@L:
   262                           	opt callstack 0
   263                           
   264                           ; 2 bytes @ 0x2
   265  000026                     	ds	2
   266  000028                     coord@x:
   267                           	opt callstack 0
   268  000028                     ___aldiv@divisor:
   269                           	opt callstack 0
   270                           
   271                           ; 4 bytes @ 0x4
   272  000028                     	ds	2
   273  00002A                     coord@y:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0x6
   277  00002A                     	ds	2
   278  00002C                     ___aldiv@counter:
   279                           	opt callstack 0
   280  00002C                     coord@P2:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x8
   284  00002C                     	ds	1
   285  00002D                     ___aldiv@sign:
   286                           	opt callstack 0
   287                           
   288                           ; 1 bytes @ 0x9
   289  00002D                     	ds	1
   290  00002E                     ??_coord:
   291  00002E                     ___aldiv@quotient:
   292                           	opt callstack 0
   293                           
   294                           ; 4 bytes @ 0xA
   295  00002E                     	ds	4
   296  000032                     UARTConfi@BAUD:
   297                           	opt callstack 0
   298  000032                     coord@buffer:
   299                           	opt callstack 0
   300                           
   301                           ; 9 bytes @ 0xE
   302  000032                     	ds	2
   303  000034                     _UARTConfi$1233:
   304                           	opt callstack 0
   305                           
   306                           ; 4 bytes @ 0x10
   307  000034                     	ds	7
   308  00003B                     coord@read:
   309                           	opt callstack 0
   310                           
   311                           ; 1 bytes @ 0x17
   312  00003B                     	ds	1
   313  00003C                     coord@i:
   314                           	opt callstack 0
   315                           
   316                           ; 2 bytes @ 0x18
   317  00003C                     	ds	2
   318  00003E                     cmd@i:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x1A
   322  00003E                     	ds	2
   323  000040                     ??_verification:
   324                           
   325                           ; 1 bytes @ 0x1C
   326  000040                     	ds	2
   327  000042                     
   328                           ; 1 bytes @ 0x1E
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 12 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels required when called:    4
   354 ;; This function calls:
   355 ;;		_UARTConfi
   356 ;;		_verification
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text0
   363  007A18                     __ptext0:
   364                           	opt callstack 0
   365  007A18                     _main:
   366                           	opt callstack 27
   367  007A18                     
   368                           ;main.c: 13:     OSCCON=0x72;
   369  007A18  0E72               	movlw	114
   370  007A1A  6ED3               	movwf	211,c	;volatile
   371  007A1C                     
   372                           ;main.c: 14:     UARTConfi(9600);
   373  007A1C  0E25               	movlw	37
   374  007A1E  6E33               	movwf	(UARTConfi@BAUD+1)^0,c
   375  007A20  0E80               	movlw	128
   376  007A22  6E32               	movwf	UARTConfi@BAUD^0,c
   377  007A24  EC81  F03D         	call	_UARTConfi	;wreg free
   378  007A28                     
   379                           ;main.c: 15:     TRISC=0X00;
   380  007A28  0E00               	movlw	0
   381  007A2A  6E94               	movwf	148,c	;volatile
   382  007A2C                     
   383                           ;main.c: 19:     x=1;
   384  007A2C  0E00               	movlw	0
   385  007A2E  6E5A               	movwf	(_x+1)^0,c
   386  007A30  0E01               	movlw	1
   387  007A32  6E59               	movwf	_x^0,c
   388  007A34                     
   389                           ;main.c: 20:     verification();
   390  007A34  ECB8  F03E         	call	_verification	;wreg free
   391  007A38  EF00  F000         	goto	start
   392  007A3C                     __end_of_main:
   393                           	opt callstack 0
   394                           
   395 ;; *************** function _verification *****************
   396 ;; Defined at:
   397 ;;		line 8 in file "verification.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   411 ;;      Params:         0       0       0       0       0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0       0       0       0       0
   413 ;;      Temps:          2       0       0       0       0       0       0       0       0
   414 ;;      Totals:         2       0       0       0       0       0       0       0       0
   415 ;;Total ram usage:        2 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; Hardware stack levels required when called:    3
   418 ;; This function calls:
   419 ;;		_Coord_Validated
   420 ;;		_Ins_Validated
   421 ;;		_Par_Validated
   422 ;;		_cmd
   423 ;;		_end
   424 ;;		_start
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text1
   431  007D70                     __ptext1:
   432                           	opt callstack 0
   433  007D70                     _verification:
   434                           	opt callstack 27
   435  007D70                     
   436                           ;verification.c: 9:     NextState = iddle_State;
   437  007D70  0E00               	movlw	0
   438  007D72  6E51               	movwf	_NextState^0,c
   439                           
   440                           ;verification.c: 10:     while(x==1){
   441  007D74  EFFE  F03E         	goto	l1506
   442  007D78                     l1490:
   443                           
   444                           ;verification.c: 14:                 NextState= start();
   445  007D78  EC39  F03D         	call	_start	;wreg free
   446  007D7C  6E51               	movwf	_NextState^0,c
   447                           
   448                           ;verification.c: 15:             };verification.c: 16:             break;
   449  007D7E  EFFE  F03E         	goto	l1506
   450  007D82                     l1492:
   451                           
   452                           ;verification.c: 18:                 NextState=cmd();
   453  007D82  ECBA  F03D         	call	_cmd	;wreg free
   454  007D86  6E51               	movwf	_NextState^0,c
   455                           
   456                           ;verification.c: 19:             };verification.c: 20:             break;
   457  007D88  EFFE  F03E         	goto	l1506
   458  007D8C                     l1494:
   459                           
   460                           ;verification.c: 22:                 NextState=Par_Validated();
   461  007D8C  ECF5  F03D         	call	_Par_Validated	;wreg free
   462  007D90  6E51               	movwf	_NextState^0,c
   463                           
   464                           ;verification.c: 23:             };verification.c: 24:             break;
   465  007D92  EFFE  F03E         	goto	l1506
   466  007D96                     l1496:
   467                           
   468                           ;verification.c: 26:                 NextState=Ins_Validated();
   469  007D96  EC73  F03E         	call	_Ins_Validated	;wreg free
   470  007D9A  6E51               	movwf	_NextState^0,c
   471                           
   472                           ;verification.c: 27:             };verification.c: 28:             break;
   473  007D9C  EFFE  F03E         	goto	l1506
   474  007DA0                     l1498:
   475                           
   476                           ;verification.c: 30:                 NextState=Coord_Validated();
   477  007DA0  EC32  F03E         	call	_Coord_Validated	;wreg free
   478  007DA4  6E51               	movwf	_NextState^0,c
   479                           
   480                           ;verification.c: 31:             };verification.c: 32:             break;
   481  007DA6  EFFE  F03E         	goto	l1506
   482  007DAA                     l1500:
   483                           
   484                           ;verification.c: 34:                 end();
   485  007DAA  EC5C  F03D         	call	_end	;wreg free
   486                           
   487                           ;verification.c: 35:             }break;
   488  007DAE  EFFE  F03E         	goto	l1506
   489  007DB2                     l1504:
   490  007DB2  5051               	movf	_NextState^0,w,c
   491  007DB4  6E40               	movwf	??_verification^0,c
   492  007DB6  6A41               	clrf	(??_verification+1)^0,c
   493                           
   494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   495                           ; Switch size 1, requested type "simple"
   496                           ; Number of cases is 1, Range of values is 0 to 0
   497                           ; switch strategies available:
   498                           ; Name         Instructions Cycles
   499                           ; simple_byte            4     3 (average)
   500                           ;	Chosen strategy is simple_byte
   501  007DB8  5041               	movf	(??_verification+1)^0,w,c
   502  007DBA  0A00               	xorlw	0	; case 0
   503  007DBC  B4D8               	btfsc	status,2,c
   504  007DBE  EFE3  F03E         	goto	l1526
   505  007DC2  EFFE  F03E         	goto	l1506
   506  007DC6                     l1526:
   507                           
   508                           ; Switch size 1, requested type "simple"
   509                           ; Number of cases is 6, Range of values is 0 to 6
   510                           ; switch strategies available:
   511                           ; Name         Instructions Cycles
   512                           ; simple_byte           19    10 (average)
   513                           ;	Chosen strategy is simple_byte
   514  007DC6  5040               	movf	??_verification^0,w,c
   515  007DC8  0A00               	xorlw	0	; case 0
   516  007DCA  B4D8               	btfsc	status,2,c
   517  007DCC  EFBC  F03E         	goto	l1490
   518  007DD0  0A01               	xorlw	1	; case 1
   519  007DD2  B4D8               	btfsc	status,2,c
   520  007DD4  EFC1  F03E         	goto	l1492
   521  007DD8  0A03               	xorlw	3	; case 2
   522  007DDA  B4D8               	btfsc	status,2,c
   523  007DDC  EFC6  F03E         	goto	l1494
   524  007DE0  0A01               	xorlw	1	; case 3
   525  007DE2  B4D8               	btfsc	status,2,c
   526  007DE4  EFCB  F03E         	goto	l1496
   527  007DE8  0A07               	xorlw	7	; case 4
   528  007DEA  B4D8               	btfsc	status,2,c
   529  007DEC  EFD0  F03E         	goto	l1498
   530  007DF0  0A02               	xorlw	2	; case 6
   531  007DF2  B4D8               	btfsc	status,2,c
   532  007DF4  EFD5  F03E         	goto	l1500
   533  007DF8  EFFE  F03E         	goto	l1506
   534  007DFC                     l1506:
   535                           
   536                           ;verification.c: 10:     while(x==1){
   537  007DFC  0459               	decf	_x^0,w,c
   538  007DFE  105A               	iorwf	(_x+1)^0,w,c
   539  007E00  B4D8               	btfsc	status,2,c
   540  007E02  EF05  F03F         	goto	u451
   541  007E06  EF07  F03F         	goto	u450
   542  007E0A                     u451:
   543  007E0A  EFD9  F03E         	goto	l1504
   544  007E0E                     u450:
   545  007E0E  0012               	return		;funcret
   546  007E10                     __end_of_verification:
   547                           	opt callstack 0
   548                           
   549 ;; *************** function _start *****************
   550 ;; Defined at:
   551 ;;		line 17 in file "cases.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  i               2    1[COMRAM] int 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      unsigned char 
   558 ;; Registers used:
   559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         2       0       0       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0
   568 ;;      Totals:         2       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        2 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    1
   572 ;; This function calls:
   573 ;;		_UARTWrite
   574 ;; This function is called by:
   575 ;;		_verification
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text2
   580  007A72                     __ptext2:
   581                           	opt callstack 0
   582  007A72                     _start:
   583                           	opt callstack 28
   584  007A72                     
   585                           ;cases.c: 18:      UARTWrite(13);
   586  007A72  0E0D               	movlw	13
   587  007A74  ECEF  F03C         	call	_UARTWrite
   588  007A78                     
   589                           ;cases.c: 19:      for(int i=0;i<10;i++){
   590  007A78  0E00               	movlw	0
   591  007A7A  6E26               	movwf	(start@i+1)^0,c
   592  007A7C  0E00               	movlw	0
   593  007A7E  6E25               	movwf	start@i^0,c
   594  007A80                     l1058:
   595                           
   596                           ;cases.c: 20:         UARTWrite(init[i]);
   597  007A80  0E0E               	movlw	low _init
   598  007A82  2425               	addwf	start@i^0,w,c
   599  007A84  6ED9               	movwf	fsr2l,c
   600  007A86  0E00               	movlw	high _init
   601  007A88  2026               	addwfc	(start@i+1)^0,w,c
   602  007A8A  6EDA               	movwf	fsr2h,c
   603  007A8C  50DF               	movf	indf2,w,c
   604  007A8E  ECEF  F03C         	call	_UARTWrite
   605  007A92                     
   606                           ;cases.c: 21:     }
   607  007A92  4A25               	infsnz	start@i^0,f,c
   608  007A94  2A26               	incf	(start@i+1)^0,f,c
   609  007A96  BE26               	btfsc	(start@i+1)^0,7,c
   610  007A98  EF57  F03D         	goto	u111
   611  007A9C  5026               	movf	(start@i+1)^0,w,c
   612  007A9E  E109               	bnz	u110
   613  007AA0  0E0A               	movlw	10
   614  007AA2  5C25               	subwf	start@i^0,w,c
   615  007AA4  A0D8               	btfss	status,0,c
   616  007AA6  EF57  F03D         	goto	u111
   617  007AAA  EF59  F03D         	goto	u110
   618  007AAE                     u111:
   619  007AAE  EF40  F03D         	goto	l1058
   620  007AB2                     u110:
   621  007AB2                     
   622                           ;cases.c: 22:      PORTC = 0xff;
   623  007AB2  6882               	setf	130,c	;volatile
   624  007AB4                     
   625                           ;cases.c: 23:      return wait_cmd_State;
   626  007AB4  0E01               	movlw	1
   627  007AB6  0012               	return		;funcret
   628  007AB8                     __end_of_start:
   629                           	opt callstack 0
   630                           
   631 ;; *************** function _end *****************
   632 ;; Defined at:
   633 ;;		line 94 in file "cases.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  i               2    1[COMRAM] int 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   647 ;;      Params:         0       0       0       0       0       0       0       0       0
   648 ;;      Locals:         2       0       0       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0
   650 ;;      Totals:         2       0       0       0       0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    1
   654 ;; This function calls:
   655 ;;		_UARTWrite
   656 ;; This function is called by:
   657 ;;		_verification
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  007AB8                     __ptext3:
   663                           	opt callstack 0
   664  007AB8                     _end:
   665                           	opt callstack 28
   666  007AB8                     
   667                           ;cases.c: 95:     UARTWrite(13);
   668  007AB8  0E0D               	movlw	13
   669  007ABA  ECEF  F03C         	call	_UARTWrite
   670  007ABE                     
   671                           ;cases.c: 96:     for(int i=0;i<7;i++){
   672  007ABE  0E00               	movlw	0
   673  007AC0  6E26               	movwf	(end@i+1)^0,c
   674  007AC2  0E00               	movlw	0
   675  007AC4  6E25               	movwf	end@i^0,c
   676  007AC6                     l1210:
   677                           
   678                           ;cases.c: 97:             UARTWrite(gracias[i]);
   679  007AC6  0E18               	movlw	low _gracias
   680  007AC8  2425               	addwf	end@i^0,w,c
   681  007ACA  6ED9               	movwf	fsr2l,c
   682  007ACC  0E00               	movlw	high _gracias
   683  007ACE  2026               	addwfc	(end@i+1)^0,w,c
   684  007AD0  6EDA               	movwf	fsr2h,c
   685  007AD2  50DF               	movf	indf2,w,c
   686  007AD4  ECEF  F03C         	call	_UARTWrite
   687  007AD8                     
   688                           ;cases.c: 98:     }
   689  007AD8  4A25               	infsnz	end@i^0,f,c
   690  007ADA  2A26               	incf	(end@i+1)^0,f,c
   691  007ADC  BE26               	btfsc	(end@i+1)^0,7,c
   692  007ADE  EF7A  F03D         	goto	u221
   693  007AE2  5026               	movf	(end@i+1)^0,w,c
   694  007AE4  E109               	bnz	u220
   695  007AE6  0E07               	movlw	7
   696  007AE8  5C25               	subwf	end@i^0,w,c
   697  007AEA  A0D8               	btfss	status,0,c
   698  007AEC  EF7A  F03D         	goto	u221
   699  007AF0  EF7C  F03D         	goto	u220
   700  007AF4                     u221:
   701  007AF4  EF63  F03D         	goto	l1210
   702  007AF8                     u220:
   703  007AF8                     
   704                           ;cases.c: 99:      x=0;
   705  007AF8  0E00               	movlw	0
   706  007AFA  6E5A               	movwf	(_x+1)^0,c
   707  007AFC  0E00               	movlw	0
   708  007AFE  6E59               	movwf	_x^0,c
   709  007B00  0012               	return		;funcret
   710  007B02                     __end_of_end:
   711                           	opt callstack 0
   712                           
   713 ;; *************** function _cmd *****************
   714 ;; Defined at:
   715 ;;		line 27 in file "cases.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  i               2   26[COMRAM] int 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      unsigned char 
   722 ;; Registers used:
   723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         0       0       0       0       0       0       0       0       0
   730 ;;      Locals:         2       0       0       0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    2
   736 ;; This function calls:
   737 ;;		_UARTWrite
   738 ;;		_coord
   739 ;; This function is called by:
   740 ;;		_verification
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text4
   745  007B74                     __ptext4:
   746                           	opt callstack 0
   747  007B74                     _cmd:
   748                           	opt callstack 27
   749  007B74                     
   750                           ;cases.c: 28:     UARTWrite(13);
   751  007B74  0E0D               	movlw	13
   752  007B76  ECEF  F03C         	call	_UARTWrite
   753  007B7A                     
   754                           ;cases.c: 29:     PORTC = 0x00;
   755  007B7A  0E00               	movlw	0
   756  007B7C  6E82               	movwf	130,c	;volatile
   757  007B7E                     
   758                           ;cases.c: 30:     for(int i=0;i<10;i++){
   759  007B7E  0E00               	movlw	0
   760  007B80  6E3F               	movwf	(cmd@i+1)^0,c
   761  007B82  0E00               	movlw	0
   762  007B84  6E3E               	movwf	cmd@i^0,c
   763  007B86                     l1412:
   764                           
   765                           ;cases.c: 31:         UARTWrite(e_c[i]);
   766  007B86  0E01               	movlw	low _e_c
   767  007B88  243E               	addwf	cmd@i^0,w,c
   768  007B8A  6ED9               	movwf	fsr2l,c
   769  007B8C  0E00               	movlw	high _e_c
   770  007B8E  203F               	addwfc	(cmd@i+1)^0,w,c
   771  007B90  6EDA               	movwf	fsr2h,c
   772  007B92  50DF               	movf	indf2,w,c
   773  007B94  ECEF  F03C         	call	_UARTWrite
   774  007B98                     
   775                           ;cases.c: 32:     }
   776  007B98  4A3E               	infsnz	cmd@i^0,f,c
   777  007B9A  2A3F               	incf	(cmd@i+1)^0,f,c
   778  007B9C  BE3F               	btfsc	(cmd@i+1)^0,7,c
   779  007B9E  EFDA  F03D         	goto	u381
   780  007BA2  503F               	movf	(cmd@i+1)^0,w,c
   781  007BA4  E109               	bnz	u380
   782  007BA6  0E0A               	movlw	10
   783  007BA8  5C3E               	subwf	cmd@i^0,w,c
   784  007BAA  A0D8               	btfss	status,0,c
   785  007BAC  EFDA  F03D         	goto	u381
   786  007BB0  EFDC  F03D         	goto	u380
   787  007BB4                     u381:
   788  007BB4  EFC3  F03D         	goto	l1412
   789  007BB8                     u380:
   790  007BB8                     
   791                           ;cases.c: 33:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
   792  007BB8  0E58               	movlw	low _Par1
   793  007BBA  6E24               	movwf	coord@P1^0,c
   794  007BBC  0E00               	movlw	high _Par1
   795  007BBE  6E25               	movwf	(coord@P1+1)^0,c
   796  007BC0  0E57               	movlw	low _letter
   797  007BC2  6E26               	movwf	coord@L^0,c
   798  007BC4  0E00               	movlw	high _letter
   799  007BC6  6E27               	movwf	(coord@L+1)^0,c
   800  007BC8  0E54               	movlw	low _cord_x
   801  007BCA  6E28               	movwf	coord@x^0,c
   802  007BCC  0E00               	movlw	high _cord_x
   803  007BCE  6E29               	movwf	(coord@x+1)^0,c
   804  007BD0  0E52               	movlw	low _cord_y
   805  007BD2  6E2A               	movwf	coord@y^0,c
   806  007BD4  0E00               	movlw	high _cord_y
   807  007BD6  6E2B               	movwf	(coord@y+1)^0,c
   808  007BD8  0E56               	movlw	low _Par2
   809  007BDA  6E2C               	movwf	coord@P2^0,c
   810  007BDC  0E00               	movlw	high _Par2
   811  007BDE  6E2D               	movwf	(coord@P2+1)^0,c
   812  007BE0  EC08  F03F         	call	_coord	;wreg free
   813  007BE4                     
   814                           ;cases.c: 34:     PORTC =0Xff;
   815  007BE4  6882               	setf	130,c	;volatile
   816  007BE6                     
   817                           ;cases.c: 35:     return validate_Par_State;
   818  007BE6  0E02               	movlw	2
   819  007BE8  0012               	return		;funcret
   820  007BEA                     __end_of_cmd:
   821                           	opt callstack 0
   822                           
   823 ;; *************** function _coord *****************
   824 ;; Defined at:
   825 ;;		line 12 in file "coordenadas.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  P1              2    0[COMRAM] PTR unsigned char 
   828 ;;		 -> Par1(1), 
   829 ;;  L               2    2[COMRAM] PTR unsigned char 
   830 ;;		 -> letter(1), 
   831 ;;  x               2    4[COMRAM] PTR unsigned short 
   832 ;;		 -> cord_x(2), 
   833 ;;  y               2    6[COMRAM] PTR unsigned short 
   834 ;;		 -> cord_y(2), 
   835 ;;  P2              2    8[COMRAM] PTR unsigned char 
   836 ;;		 -> Par2(1), 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  i               2   24[COMRAM] int 
   839 ;;  buffer          9   14[COMRAM] unsigned char [9]
   840 ;;  read            1   23[COMRAM] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  2    0[COMRAM] int 
   843 ;; Registers used:
   844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   850 ;;      Params:        10       0       0       0       0       0       0       0       0
   851 ;;      Locals:        12       0       0       0       0       0       0       0       0
   852 ;;      Temps:          4       0       0       0       0       0       0       0       0
   853 ;;      Totals:        26       0       0       0       0       0       0       0       0
   854 ;;Total ram usage:       26 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    1
   857 ;; This function calls:
   858 ;;		_UARTRead
   859 ;; This function is called by:
   860 ;;		_cmd
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text5
   865  007E10                     __ptext5:
   866                           	opt callstack 0
   867  007E10                     _coord:
   868                           	opt callstack 27
   869  007E10                     
   870                           ;coordenadas.c: 13:   char buffer [9];;coordenadas.c: 14:         char read;;coordenadas
      +                          .c: 16:         for(int i=0; i<=8; i++){
   871  007E10  0E00               	movlw	0
   872  007E12  6E3D               	movwf	(coord@i+1)^0,c
   873  007E14  0E00               	movlw	0
   874  007E16  6E3C               	movwf	coord@i^0,c
   875  007E18                     l1388:
   876                           
   877                           ;coordenadas.c: 17:             read= UARTRead();
   878  007E18  ECE6  F03C         	call	_UARTRead	;wreg free
   879  007E1C  6E3B               	movwf	coord@read^0,c
   880  007E1E                     
   881                           ;coordenadas.c: 18:             buffer[i]=read;
   882  007E1E  0E32               	movlw	low coord@buffer
   883  007E20  243C               	addwf	coord@i^0,w,c
   884  007E22  6ED9               	movwf	fsr2l,c
   885  007E24  0E00               	movlw	high coord@buffer
   886  007E26  203D               	addwfc	(coord@i+1)^0,w,c
   887  007E28  6EDA               	movwf	fsr2h,c
   888  007E2A  C03B  FFDF         	movff	coord@read,indf2
   889  007E2E                     
   890                           ;coordenadas.c: 19:         }
   891  007E2E  4A3C               	infsnz	coord@i^0,f,c
   892  007E30  2A3D               	incf	(coord@i+1)^0,f,c
   893  007E32  BE3D               	btfsc	(coord@i+1)^0,7,c
   894  007E34  EF25  F03F         	goto	u371
   895  007E38  503D               	movf	(coord@i+1)^0,w,c
   896  007E3A  E109               	bnz	u370
   897  007E3C  0E09               	movlw	9
   898  007E3E  5C3C               	subwf	coord@i^0,w,c
   899  007E40  A0D8               	btfss	status,0,c
   900  007E42  EF25  F03F         	goto	u371
   901  007E46  EF27  F03F         	goto	u370
   902  007E4A                     u371:
   903  007E4A  EF0C  F03F         	goto	l1388
   904  007E4E                     u370:
   905  007E4E                     
   906                           ;coordenadas.c: 20:         *P1= buffer[0];
   907  007E4E  C024  FFD9         	movff	coord@P1,fsr2l
   908  007E52  C025  FFDA         	movff	coord@P1+1,fsr2h
   909  007E56  C032  FFDF         	movff	coord@buffer,indf2
   910                           
   911                           ;coordenadas.c: 21:         *L= buffer[1];
   912  007E5A  C026  FFD9         	movff	coord@L,fsr2l
   913  007E5E  C027  FFDA         	movff	coord@L+1,fsr2h
   914  007E62  C033  FFDF         	movff	coord@buffer+1,indf2
   915  007E66                     
   916                           ;coordenadas.c: 22:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
   917  007E66  0E30               	movlw	48
   918  007E68  6E2E               	movwf	??_coord^0,c
   919  007E6A  0EEB               	movlw	235
   920  007E6C  6E2F               	movwf	(??_coord+1)^0,c
   921  007E6E  5034               	movf	(coord@buffer+2)^0,w,c
   922  007E70  0D64               	mullw	100
   923  007E72  CFF3 F030          	movff	prodl,??_coord+2
   924  007E76  CFF4 F031          	movff	prodh,??_coord+3
   925  007E7A  5035               	movf	(coord@buffer+3)^0,w,c
   926  007E7C  0D0A               	mullw	10
   927  007E7E  50F3               	movf	243,w,c
   928  007E80  2630               	addwf	(??_coord+2)^0,f,c
   929  007E82  50F4               	movf	244,w,c
   930  007E84  2231               	addwfc	(??_coord+3)^0,f,c
   931  007E86  5036               	movf	(coord@buffer+4)^0,w,c
   932  007E88  2630               	addwf	(??_coord+2)^0,f,c
   933  007E8A  0E00               	movlw	0
   934  007E8C  2231               	addwfc	(??_coord+3)^0,f,c
   935  007E8E  502E               	movf	??_coord^0,w,c
   936  007E90  2630               	addwf	(??_coord+2)^0,f,c
   937  007E92  502F               	movf	(??_coord+1)^0,w,c
   938  007E94  2231               	addwfc	(??_coord+3)^0,f,c
   939  007E96  C028  FFD9         	movff	coord@x,fsr2l
   940  007E9A  C029  FFDA         	movff	coord@x+1,fsr2h
   941  007E9E  C030  FFDE         	movff	??_coord+2,postinc2
   942  007EA2  C031  FFDD         	movff	??_coord+3,postdec2
   943  007EA6                     
   944                           ;coordenadas.c: 23:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
   945  007EA6  0E30               	movlw	48
   946  007EA8  6E2E               	movwf	??_coord^0,c
   947  007EAA  0EEB               	movlw	235
   948  007EAC  6E2F               	movwf	(??_coord+1)^0,c
   949  007EAE  5037               	movf	(coord@buffer+5)^0,w,c
   950  007EB0  0D64               	mullw	100
   951  007EB2  CFF3 F030          	movff	prodl,??_coord+2
   952  007EB6  CFF4 F031          	movff	prodh,??_coord+3
   953  007EBA  5038               	movf	(coord@buffer+6)^0,w,c
   954  007EBC  0D0A               	mullw	10
   955  007EBE  50F3               	movf	243,w,c
   956  007EC0  2630               	addwf	(??_coord+2)^0,f,c
   957  007EC2  50F4               	movf	244,w,c
   958  007EC4  2231               	addwfc	(??_coord+3)^0,f,c
   959  007EC6  5039               	movf	(coord@buffer+7)^0,w,c
   960  007EC8  2630               	addwf	(??_coord+2)^0,f,c
   961  007ECA  0E00               	movlw	0
   962  007ECC  2231               	addwfc	(??_coord+3)^0,f,c
   963  007ECE  502E               	movf	??_coord^0,w,c
   964  007ED0  2630               	addwf	(??_coord+2)^0,f,c
   965  007ED2  502F               	movf	(??_coord+1)^0,w,c
   966  007ED4  2231               	addwfc	(??_coord+3)^0,f,c
   967  007ED6  C02A  FFD9         	movff	coord@y,fsr2l
   968  007EDA  C02B  FFDA         	movff	coord@y+1,fsr2h
   969  007EDE  C030  FFDE         	movff	??_coord+2,postinc2
   970  007EE2  C031  FFDD         	movff	??_coord+3,postdec2
   971                           
   972                           ;coordenadas.c: 24:   *P2= buffer[8];
   973  007EE6  C02C  FFD9         	movff	coord@P2,fsr2l
   974  007EEA  C02D  FFDA         	movff	coord@P2+1,fsr2h
   975  007EEE  C03A  FFDF         	movff	coord@buffer+8,indf2
   976  007EF2  0012               	return		;funcret
   977  007EF4                     __end_of_coord:
   978                           	opt callstack 0
   979                           
   980 ;; *************** function _UARTRead *****************
   981 ;; Defined at:
   982 ;;		line 32 in file "UART.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      unsigned char 
   989 ;; Registers used:
   990 ;;		wreg, status,2
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   996 ;;      Params:         0       0       0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_coord
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text6
  1010  0079CC                     __ptext6:
  1011                           	opt callstack 0
  1012  0079CC                     _UARTRead:
  1013                           	opt callstack 27
  1014  0079CC                     l96:
  1015  0079CC  AA9E               	btfss	3998,5,c	;volatile
  1016  0079CE  EFEB  F03C         	goto	u11
  1017  0079D2  EFED  F03C         	goto	u10
  1018  0079D6                     u11:
  1019  0079D6  EFE6  F03C         	goto	l96
  1020  0079DA                     u10:
  1021  0079DA                     
  1022                           ;UART.c: 34:     return RCREG;
  1023  0079DA  50AE               	movf	174,w,c	;volatile
  1024  0079DC  0012               	return		;funcret
  1025  0079DE                     __end_of_UARTRead:
  1026                           	opt callstack 0
  1027                           
  1028 ;; *************** function _Par_Validated *****************
  1029 ;; Defined at:
  1030 ;;		line 38 in file "cases.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  i               2    1[COMRAM] int 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      unsigned char 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0
  1045 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1047 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        2 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    1
  1051 ;; This function calls:
  1052 ;;		_UARTWrite
  1053 ;; This function is called by:
  1054 ;;		_verification
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text7
  1059  007BEA                     __ptext7:
  1060                           	opt callstack 0
  1061  007BEA                     _Par_Validated:
  1062                           	opt callstack 28
  1063  007BEA                     
  1064                           ;cases.c: 39:     PORTC=0x00;
  1065  007BEA  0E00               	movlw	0
  1066  007BEC  6E82               	movwf	130,c	;volatile
  1067  007BEE                     
  1068                           ;cases.c: 40:     if(Par1==0X3C && Par2==0x3E){
  1069  007BEE  0E3C               	movlw	60
  1070  007BF0  1858               	xorwf	_Par1^0,w,c
  1071  007BF2  A4D8               	btfss	status,2,c
  1072  007BF4  EFFE  F03D         	goto	u131
  1073  007BF8  EF00  F03E         	goto	u130
  1074  007BFC                     u131:
  1075  007BFC  EF0E  F03E         	goto	l1106
  1076  007C00                     u130:
  1077  007C00  0E3E               	movlw	62
  1078  007C02  1856               	xorwf	_Par2^0,w,c
  1079  007C04  A4D8               	btfss	status,2,c
  1080  007C06  EF07  F03E         	goto	u141
  1081  007C0A  EF09  F03E         	goto	u140
  1082  007C0E                     u141:
  1083  007C0E  EF0E  F03E         	goto	l1106
  1084  007C12                     u140:
  1085  007C12                     
  1086                           ;cases.c: 41:         PORTC=0X02;
  1087  007C12  0E02               	movlw	2
  1088  007C14  6E82               	movwf	130,c	;volatile
  1089  007C16                     
  1090                           ;cases.c: 42:         return validate_Instruct_State;
  1091  007C16  0E03               	movlw	3
  1092  007C18  EF31  F03E         	goto	l44
  1093  007C1C                     l1106:
  1094                           
  1095                           ;cases.c: 45:         UARTWrite(13);
  1096  007C1C  0E0D               	movlw	13
  1097  007C1E  ECEF  F03C         	call	_UARTWrite
  1098  007C22                     
  1099                           ;cases.c: 46:         for(int i=0;i<5;i++){
  1100  007C22  0E00               	movlw	0
  1101  007C24  6E26               	movwf	(Par_Validated@i+1)^0,c
  1102  007C26  0E00               	movlw	0
  1103  007C28  6E25               	movwf	Par_Validated@i^0,c
  1104  007C2A                     l1114:
  1105                           
  1106                           ;cases.c: 47:             UARTWrite(Error[i]);
  1107  007C2A  0E1F               	movlw	low _Error
  1108  007C2C  2425               	addwf	Par_Validated@i^0,w,c
  1109  007C2E  6ED9               	movwf	fsr2l,c
  1110  007C30  0E00               	movlw	high _Error
  1111  007C32  2026               	addwfc	(Par_Validated@i+1)^0,w,c
  1112  007C34  6EDA               	movwf	fsr2h,c
  1113  007C36  50DF               	movf	indf2,w,c
  1114  007C38  ECEF  F03C         	call	_UARTWrite
  1115  007C3C                     
  1116                           ;cases.c: 48:         }
  1117  007C3C  4A25               	infsnz	Par_Validated@i^0,f,c
  1118  007C3E  2A26               	incf	(Par_Validated@i+1)^0,f,c
  1119  007C40  BE26               	btfsc	(Par_Validated@i+1)^0,7,c
  1120  007C42  EF2C  F03E         	goto	u151
  1121  007C46  5026               	movf	(Par_Validated@i+1)^0,w,c
  1122  007C48  E109               	bnz	u150
  1123  007C4A  0E05               	movlw	5
  1124  007C4C  5C25               	subwf	Par_Validated@i^0,w,c
  1125  007C4E  A0D8               	btfss	status,0,c
  1126  007C50  EF2C  F03E         	goto	u151
  1127  007C54  EF2E  F03E         	goto	u150
  1128  007C58                     u151:
  1129  007C58  EF15  F03E         	goto	l1114
  1130  007C5C                     u150:
  1131  007C5C                     
  1132                           ;cases.c: 49:         PORTC= 0X04;
  1133  007C5C  0E04               	movlw	4
  1134  007C5E  6E82               	movwf	130,c	;volatile
  1135  007C60                     
  1136                           ;cases.c: 50:         return wait_cmd_State;
  1137  007C60  0E01               	movlw	1
  1138  007C62                     l44:
  1139  007C62  0012               	return		;funcret
  1140  007C64                     __end_of_Par_Validated:
  1141                           	opt callstack 0
  1142                           
  1143 ;; *************** function _Ins_Validated *****************
  1144 ;; Defined at:
  1145 ;;		line 54 in file "cases.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  i               2    1[COMRAM] int 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      unsigned char 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1159 ;;      Params:         0       0       0       0       0       0       0       0       0
  1160 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1162 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1163 ;;Total ram usage:        2 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    1
  1166 ;; This function calls:
  1167 ;;		_UARTWrite
  1168 ;; This function is called by:
  1169 ;;		_verification
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text8
  1174  007CE6                     __ptext8:
  1175                           	opt callstack 0
  1176  007CE6                     _Ins_Validated:
  1177                           	opt callstack 28
  1178  007CE6                     
  1179                           ;cases.c: 55:     PORTC=0x00;
  1180  007CE6  0E00               	movlw	0
  1181  007CE8  6E82               	movwf	130,c	;volatile
  1182  007CEA                     
  1183                           ;cases.c: 56:     if(letter==0x43){
  1184  007CEA  0E43               	movlw	67
  1185  007CEC  1857               	xorwf	_letter^0,w,c
  1186  007CEE  A4D8               	btfss	status,2,c
  1187  007CF0  EF7C  F03E         	goto	u161
  1188  007CF4  EF7E  F03E         	goto	u160
  1189  007CF8                     u161:
  1190  007CF8  EF85  F03E         	goto	l1138
  1191  007CFC                     u160:
  1192  007CFC                     
  1193                           ;cases.c: 57:         PORTC=0X02;
  1194  007CFC  0E02               	movlw	2
  1195  007CFE  6E82               	movwf	130,c	;volatile
  1196                           
  1197                           ;cases.c: 58:         click=1;
  1198  007D00  0E01               	movlw	1
  1199  007D02  6E50               	movwf	_click^0,c
  1200  007D04                     l1132:
  1201                           
  1202                           ;cases.c: 59:         return validate_Coord_State;
  1203  007D04  0E04               	movlw	4
  1204  007D06  EFB7  F03E         	goto	l51
  1205  007D0A                     l1138:
  1206  007D0A  0E53               	movlw	83
  1207  007D0C  1857               	xorwf	_letter^0,w,c
  1208  007D0E  A4D8               	btfss	status,2,c
  1209  007D10  EF8C  F03E         	goto	u171
  1210  007D14  EF8E  F03E         	goto	u170
  1211  007D18                     u171:
  1212  007D18  EF94  F03E         	goto	l1148
  1213  007D1C                     u170:
  1214  007D1C                     
  1215                           ;cases.c: 63:         PORTC=0X02;
  1216  007D1C  0E02               	movlw	2
  1217  007D1E  6E82               	movwf	130,c	;volatile
  1218                           
  1219                           ;cases.c: 64:         click=0;
  1220  007D20  0E00               	movlw	0
  1221  007D22  6E50               	movwf	_click^0,c
  1222  007D24  EF82  F03E         	goto	l1132
  1223  007D28                     l1148:
  1224                           
  1225                           ;cases.c: 68:         UARTWrite(13);
  1226  007D28  0E0D               	movlw	13
  1227  007D2A  ECEF  F03C         	call	_UARTWrite
  1228  007D2E                     
  1229                           ;cases.c: 69:         for(int i=0;i<5;i++){
  1230  007D2E  0E00               	movlw	0
  1231  007D30  6E26               	movwf	(Ins_Validated@i+1)^0,c
  1232  007D32  0E00               	movlw	0
  1233  007D34  6E25               	movwf	Ins_Validated@i^0,c
  1234  007D36                     l1156:
  1235                           
  1236                           ;cases.c: 70:             UARTWrite(Error[i]);
  1237  007D36  0E1F               	movlw	low _Error
  1238  007D38  2425               	addwf	Ins_Validated@i^0,w,c
  1239  007D3A  6ED9               	movwf	fsr2l,c
  1240  007D3C  0E00               	movlw	high _Error
  1241  007D3E  2026               	addwfc	(Ins_Validated@i+1)^0,w,c
  1242  007D40  6EDA               	movwf	fsr2h,c
  1243  007D42  50DF               	movf	indf2,w,c
  1244  007D44  ECEF  F03C         	call	_UARTWrite
  1245  007D48                     
  1246                           ;cases.c: 71:         }
  1247  007D48  4A25               	infsnz	Ins_Validated@i^0,f,c
  1248  007D4A  2A26               	incf	(Ins_Validated@i+1)^0,f,c
  1249  007D4C  BE26               	btfsc	(Ins_Validated@i+1)^0,7,c
  1250  007D4E  EFB2  F03E         	goto	u181
  1251  007D52  5026               	movf	(Ins_Validated@i+1)^0,w,c
  1252  007D54  E109               	bnz	u180
  1253  007D56  0E05               	movlw	5
  1254  007D58  5C25               	subwf	Ins_Validated@i^0,w,c
  1255  007D5A  A0D8               	btfss	status,0,c
  1256  007D5C  EFB2  F03E         	goto	u181
  1257  007D60  EFB4  F03E         	goto	u180
  1258  007D64                     u181:
  1259  007D64  EF9B  F03E         	goto	l1156
  1260  007D68                     u180:
  1261  007D68                     
  1262                           ;cases.c: 72:         PORTC= 0X04;
  1263  007D68  0E04               	movlw	4
  1264  007D6A  6E82               	movwf	130,c	;volatile
  1265  007D6C                     
  1266                           ;cases.c: 73:         return wait_cmd_State;
  1267  007D6C  0E01               	movlw	1
  1268  007D6E                     l51:
  1269  007D6E  0012               	return		;funcret
  1270  007D70                     __end_of_Ins_Validated:
  1271                           	opt callstack 0
  1272                           
  1273 ;; *************** function _Coord_Validated *****************
  1274 ;; Defined at:
  1275 ;;		line 77 in file "cases.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  i               2    1[COMRAM] int 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      unsigned char 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1293 ;;Total ram usage:        2 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    1
  1296 ;; This function calls:
  1297 ;;		_UARTWrite
  1298 ;; This function is called by:
  1299 ;;		_verification
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text9
  1304  007C64                     __ptext9:
  1305                           	opt callstack 0
  1306  007C64                     _Coord_Validated:
  1307                           	opt callstack 28
  1308  007C64                     
  1309                           ;cases.c: 78:     PORTC=0x00;
  1310  007C64  0E00               	movlw	0
  1311  007C66  6E82               	movwf	130,c	;volatile
  1312  007C68                     
  1313                           ;cases.c: 79:     if(cord_x<=300 && cord_y<=300){
  1314  007C68  0E2D               	movlw	45
  1315  007C6A  5C54               	subwf	_cord_x^0,w,c
  1316  007C6C  0E01               	movlw	1
  1317  007C6E  5855               	subwfb	(_cord_x+1)^0,w,c
  1318  007C70  B0D8               	btfsc	status,0,c
  1319  007C72  EF3D  F03E         	goto	u191
  1320  007C76  EF3F  F03E         	goto	u190
  1321  007C7A                     u191:
  1322  007C7A  EF4F  F03E         	goto	l1182
  1323  007C7E                     u190:
  1324  007C7E  0E2D               	movlw	45
  1325  007C80  5C52               	subwf	_cord_y^0,w,c
  1326  007C82  0E01               	movlw	1
  1327  007C84  5853               	subwfb	(_cord_y+1)^0,w,c
  1328  007C86  B0D8               	btfsc	status,0,c
  1329  007C88  EF48  F03E         	goto	u201
  1330  007C8C  EF4A  F03E         	goto	u200
  1331  007C90                     u201:
  1332  007C90  EF4F  F03E         	goto	l1182
  1333  007C94                     u200:
  1334  007C94                     
  1335                           ;cases.c: 80:         PORTC=0X02;
  1336  007C94  0E02               	movlw	2
  1337  007C96  6E82               	movwf	130,c	;volatile
  1338  007C98                     
  1339                           ;cases.c: 81:         return end_State;
  1340  007C98  0E06               	movlw	6
  1341  007C9A  EF72  F03E         	goto	l60
  1342  007C9E                     l1182:
  1343                           
  1344                           ;cases.c: 84:         UARTWrite(13);
  1345  007C9E  0E0D               	movlw	13
  1346  007CA0  ECEF  F03C         	call	_UARTWrite
  1347  007CA4                     
  1348                           ;cases.c: 85:         for(int i=0;i<5;i++){
  1349  007CA4  0E00               	movlw	0
  1350  007CA6  6E26               	movwf	(Coord_Validated@i+1)^0,c
  1351  007CA8  0E00               	movlw	0
  1352  007CAA  6E25               	movwf	Coord_Validated@i^0,c
  1353  007CAC                     l1190:
  1354                           
  1355                           ;cases.c: 86:             UARTWrite(Error[i]);
  1356  007CAC  0E1F               	movlw	low _Error
  1357  007CAE  2425               	addwf	Coord_Validated@i^0,w,c
  1358  007CB0  6ED9               	movwf	fsr2l,c
  1359  007CB2  0E00               	movlw	high _Error
  1360  007CB4  2026               	addwfc	(Coord_Validated@i+1)^0,w,c
  1361  007CB6  6EDA               	movwf	fsr2h,c
  1362  007CB8  50DF               	movf	indf2,w,c
  1363  007CBA  ECEF  F03C         	call	_UARTWrite
  1364  007CBE                     
  1365                           ;cases.c: 87:         }
  1366  007CBE  4A25               	infsnz	Coord_Validated@i^0,f,c
  1367  007CC0  2A26               	incf	(Coord_Validated@i+1)^0,f,c
  1368  007CC2  BE26               	btfsc	(Coord_Validated@i+1)^0,7,c
  1369  007CC4  EF6D  F03E         	goto	u211
  1370  007CC8  5026               	movf	(Coord_Validated@i+1)^0,w,c
  1371  007CCA  E109               	bnz	u210
  1372  007CCC  0E05               	movlw	5
  1373  007CCE  5C25               	subwf	Coord_Validated@i^0,w,c
  1374  007CD0  A0D8               	btfss	status,0,c
  1375  007CD2  EF6D  F03E         	goto	u211
  1376  007CD6  EF6F  F03E         	goto	u210
  1377  007CDA                     u211:
  1378  007CDA  EF56  F03E         	goto	l1190
  1379  007CDE                     u210:
  1380  007CDE                     
  1381                           ;cases.c: 88:         PORTC= 0X04;
  1382  007CDE  0E04               	movlw	4
  1383  007CE0  6E82               	movwf	130,c	;volatile
  1384  007CE2                     
  1385                           ;cases.c: 89:        return wait_cmd_State;
  1386  007CE2  0E01               	movlw	1
  1387  007CE4                     l60:
  1388  007CE4  0012               	return		;funcret
  1389  007CE6                     __end_of_Coord_Validated:
  1390                           	opt callstack 0
  1391                           
  1392 ;; *************** function _UARTWrite *****************
  1393 ;; Defined at:
  1394 ;;		line 26 in file "UART.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  data            1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  data            1    0[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1411 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        1 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_start
  1418 ;;		_cmd
  1419 ;;		_Par_Validated
  1420 ;;		_Ins_Validated
  1421 ;;		_Coord_Validated
  1422 ;;		_end
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text10
  1427  0079DE                     __ptext10:
  1428                           	opt callstack 0
  1429  0079DE                     _UARTWrite:
  1430                           	opt callstack 28
  1431                           
  1432                           ;incstack = 0
  1433                           ;UARTWrite@data stored from wreg
  1434  0079DE  6E24               	movwf	UARTWrite@data^0,c
  1435  0079E0                     l90:
  1436  0079E0  A89E               	btfss	158,4,c	;volatile
  1437  0079E2  EFF5  F03C         	goto	u61
  1438  0079E6  EFF7  F03C         	goto	u60
  1439  0079EA                     u61:
  1440  0079EA  EFF0  F03C         	goto	l90
  1441  0079EE                     u60:
  1442  0079EE                     
  1443                           ;UART.c: 28:     TXREG= data;
  1444  0079EE  C024  FFAD         	movff	UARTWrite@data,4013	;volatile
  1445  0079F2  0012               	return		;funcret
  1446  0079F4                     __end_of_UARTWrite:
  1447                           	opt callstack 0
  1448                           
  1449 ;; *************** function _UARTConfi *****************
  1450 ;; Defined at:
  1451 ;;		line 7 in file "UART.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  BAUD            2   14[COMRAM] int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1465 ;;      Params:         2       0       0       0       0       0       0       0       0
  1466 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1468 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    1
  1472 ;; This function calls:
  1473 ;;		___aldiv
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text11
  1480  007B02                     __ptext11:
  1481                           	opt callstack 0
  1482  007B02                     _UARTConfi:
  1483                           	opt callstack 29
  1484  007B02                     
  1485                           ;UART.c: 9:     TRISCbits.RC6=0;
  1486  007B02  9C94               	bcf	148,6,c	;volatile
  1487                           
  1488                           ;UART.c: 10:     TRISCbits.RC7=1;
  1489  007B04  8E94               	bsf	148,7,c	;volatile
  1490  007B06                     
  1491                           ;UART.c: 12:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1492  007B06  C032  F028         	movff	UARTConfi@BAUD,___aldiv@divisor
  1493  007B0A  C033  F029         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
  1494  007B0E  0E00               	movlw	0
  1495  007B10  BE29               	btfsc	(___aldiv@divisor+1)^0,7,c
  1496  007B12  0EFF               	movlw	-1
  1497  007B14  6E2A               	movwf	(___aldiv@divisor+2)^0,c
  1498  007B16  6E2B               	movwf	(___aldiv@divisor+3)^0,c
  1499  007B18  0E00               	movlw	0
  1500  007B1A  6E24               	movwf	___aldiv@dividend^0,c
  1501  007B1C  0E12               	movlw	18
  1502  007B1E  6E25               	movwf	(___aldiv@dividend+1)^0,c
  1503  007B20  0E7A               	movlw	122
  1504  007B22  6E26               	movwf	(___aldiv@dividend+2)^0,c
  1505  007B24  0E00               	movlw	0
  1506  007B26  6E27               	movwf	(___aldiv@dividend+3)^0,c
  1507  007B28  EC7A  F03F         	call	___aldiv	;wreg free
  1508  007B2C  C024  F034         	movff	?___aldiv,_UARTConfi$1233
  1509  007B30  C025  F035         	movff	?___aldiv+1,_UARTConfi$1233+1
  1510  007B34  C026  F036         	movff	?___aldiv+2,_UARTConfi$1233+2
  1511  007B38  C027  F037         	movff	?___aldiv+3,_UARTConfi$1233+3
  1512                           
  1513                           ;UART.c: 12:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1514  007B3C  C034  F024         	movff	_UARTConfi$1233,___aldiv@dividend
  1515  007B40  C035  F025         	movff	_UARTConfi$1233+1,___aldiv@dividend+1
  1516  007B44  C036  F026         	movff	_UARTConfi$1233+2,___aldiv@dividend+2
  1517  007B48  C037  F027         	movff	_UARTConfi$1233+3,___aldiv@dividend+3
  1518  007B4C  0E40               	movlw	64
  1519  007B4E  6E28               	movwf	___aldiv@divisor^0,c
  1520  007B50  0E00               	movlw	0
  1521  007B52  6E29               	movwf	(___aldiv@divisor+1)^0,c
  1522  007B54  0E00               	movlw	0
  1523  007B56  6E2A               	movwf	(___aldiv@divisor+2)^0,c
  1524  007B58  0E00               	movlw	0
  1525  007B5A  6E2B               	movwf	(___aldiv@divisor+3)^0,c
  1526  007B5C  EC7A  F03F         	call	___aldiv	;wreg free
  1527  007B60  0424               	decf	?___aldiv^0,w,c
  1528  007B62  6EAF               	movwf	175,c	;volatile
  1529  007B64                     
  1530                           ;UART.c: 13:     TXSTAbits.BRGH = 0;
  1531  007B64  94AC               	bcf	172,2,c	;volatile
  1532  007B66                     
  1533                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  1534  007B66  98AC               	bcf	172,4,c	;volatile
  1535  007B68                     
  1536                           ;UART.c: 15:     RCSTAbits.SPEN = 1;
  1537  007B68  8EAB               	bsf	171,7,c	;volatile
  1538  007B6A                     
  1539                           ;UART.c: 18:     TXSTAbits.TX9 = 0;
  1540  007B6A  9CAC               	bcf	172,6,c	;volatile
  1541  007B6C                     
  1542                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  1543  007B6C  8AAC               	bsf	172,5,c	;volatile
  1544  007B6E                     
  1545                           ;UART.c: 22:     RCSTAbits.RC9 = 0;
  1546  007B6E  9CAB               	bcf	171,6,c	;volatile
  1547  007B70                     
  1548                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1549  007B70  88AB               	bsf	171,4,c	;volatile
  1550  007B72  0012               	return		;funcret
  1551  007B74                     __end_of_UARTConfi:
  1552                           	opt callstack 0
  1553                           
  1554 ;; *************** function ___aldiv *****************
  1555 ;; Defined at:
  1556 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  dividend        4    0[COMRAM] long 
  1559 ;;  divisor         4    4[COMRAM] long 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  quotient        4   10[COMRAM] long 
  1562 ;;  sign            1    9[COMRAM] unsigned char 
  1563 ;;  counter         1    8[COMRAM] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  4    0[COMRAM] long 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1573 ;;      Params:         8       0       0       0       0       0       0       0       0
  1574 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1576 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1577 ;;Total ram usage:       14 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_UARTConfi
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text12
  1587  007EF4                     __ptext12:
  1588                           	opt callstack 0
  1589  007EF4                     ___aldiv:
  1590                           	opt callstack 29
  1591  007EF4  0E00               	movlw	0
  1592  007EF6  6E2D               	movwf	___aldiv@sign^0,c
  1593  007EF8  BE2B               	btfsc	(___aldiv@divisor+3)^0,7,c
  1594  007EFA  EF83  F03F         	goto	u390
  1595  007EFE  EF81  F03F         	goto	u391
  1596  007F02                     u391:
  1597  007F02  EF8D  F03F         	goto	l1434
  1598  007F06                     u390:
  1599  007F06  1E2B               	comf	(___aldiv@divisor+3)^0,f,c
  1600  007F08  1E2A               	comf	(___aldiv@divisor+2)^0,f,c
  1601  007F0A  1E29               	comf	(___aldiv@divisor+1)^0,f,c
  1602  007F0C  6C28               	negf	___aldiv@divisor^0,c
  1603  007F0E  0E00               	movlw	0
  1604  007F10  2229               	addwfc	(___aldiv@divisor+1)^0,f,c
  1605  007F12  222A               	addwfc	(___aldiv@divisor+2)^0,f,c
  1606  007F14  222B               	addwfc	(___aldiv@divisor+3)^0,f,c
  1607  007F16  0E01               	movlw	1
  1608  007F18  6E2D               	movwf	___aldiv@sign^0,c
  1609  007F1A                     l1434:
  1610  007F1A  BE27               	btfsc	(___aldiv@dividend+3)^0,7,c
  1611  007F1C  EF94  F03F         	goto	u400
  1612  007F20  EF92  F03F         	goto	u401
  1613  007F24                     u401:
  1614  007F24  EF9E  F03F         	goto	l1440
  1615  007F28                     u400:
  1616  007F28  1E27               	comf	(___aldiv@dividend+3)^0,f,c
  1617  007F2A  1E26               	comf	(___aldiv@dividend+2)^0,f,c
  1618  007F2C  1E25               	comf	(___aldiv@dividend+1)^0,f,c
  1619  007F2E  6C24               	negf	___aldiv@dividend^0,c
  1620  007F30  0E00               	movlw	0
  1621  007F32  2225               	addwfc	(___aldiv@dividend+1)^0,f,c
  1622  007F34  2226               	addwfc	(___aldiv@dividend+2)^0,f,c
  1623  007F36  2227               	addwfc	(___aldiv@dividend+3)^0,f,c
  1624  007F38  0E01               	movlw	1
  1625  007F3A  1A2D               	xorwf	___aldiv@sign^0,f,c
  1626  007F3C                     l1440:
  1627  007F3C  0E00               	movlw	0
  1628  007F3E  6E2E               	movwf	___aldiv@quotient^0,c
  1629  007F40  0E00               	movlw	0
  1630  007F42  6E2F               	movwf	(___aldiv@quotient+1)^0,c
  1631  007F44  0E00               	movlw	0
  1632  007F46  6E30               	movwf	(___aldiv@quotient+2)^0,c
  1633  007F48  0E00               	movlw	0
  1634  007F4A  6E31               	movwf	(___aldiv@quotient+3)^0,c
  1635  007F4C  5028               	movf	___aldiv@divisor^0,w,c
  1636  007F4E  1029               	iorwf	(___aldiv@divisor+1)^0,w,c
  1637  007F50  102A               	iorwf	(___aldiv@divisor+2)^0,w,c
  1638  007F52  102B               	iorwf	(___aldiv@divisor+3)^0,w,c
  1639  007F54  B4D8               	btfsc	status,2,c
  1640  007F56  EFAF  F03F         	goto	u411
  1641  007F5A  EFB1  F03F         	goto	u410
  1642  007F5E                     u411:
  1643  007F5E  EFE7  F03F         	goto	l1462
  1644  007F62                     u410:
  1645  007F62  0E01               	movlw	1
  1646  007F64  6E2C               	movwf	___aldiv@counter^0,c
  1647  007F66  EFBB  F03F         	goto	l1448
  1648  007F6A                     l1446:
  1649  007F6A  90D8               	bcf	status,0,c
  1650  007F6C  3628               	rlcf	___aldiv@divisor^0,f,c
  1651  007F6E  3629               	rlcf	(___aldiv@divisor+1)^0,f,c
  1652  007F70  362A               	rlcf	(___aldiv@divisor+2)^0,f,c
  1653  007F72  362B               	rlcf	(___aldiv@divisor+3)^0,f,c
  1654  007F74  2A2C               	incf	___aldiv@counter^0,f,c
  1655  007F76                     l1448:
  1656  007F76  AE2B               	btfss	(___aldiv@divisor+3)^0,7,c
  1657  007F78  EFC0  F03F         	goto	u421
  1658  007F7C  EFC2  F03F         	goto	u420
  1659  007F80                     u421:
  1660  007F80  EFB5  F03F         	goto	l1446
  1661  007F84                     u420:
  1662  007F84                     l1450:
  1663  007F84  90D8               	bcf	status,0,c
  1664  007F86  362E               	rlcf	___aldiv@quotient^0,f,c
  1665  007F88  362F               	rlcf	(___aldiv@quotient+1)^0,f,c
  1666  007F8A  3630               	rlcf	(___aldiv@quotient+2)^0,f,c
  1667  007F8C  3631               	rlcf	(___aldiv@quotient+3)^0,f,c
  1668  007F8E  5028               	movf	___aldiv@divisor^0,w,c
  1669  007F90  5C24               	subwf	___aldiv@dividend^0,w,c
  1670  007F92  5029               	movf	(___aldiv@divisor+1)^0,w,c
  1671  007F94  5825               	subwfb	(___aldiv@dividend+1)^0,w,c
  1672  007F96  502A               	movf	(___aldiv@divisor+2)^0,w,c
  1673  007F98  5826               	subwfb	(___aldiv@dividend+2)^0,w,c
  1674  007F9A  502B               	movf	(___aldiv@divisor+3)^0,w,c
  1675  007F9C  5827               	subwfb	(___aldiv@dividend+3)^0,w,c
  1676  007F9E  A0D8               	btfss	status,0,c
  1677  007FA0  EFD4  F03F         	goto	u431
  1678  007FA4  EFD6  F03F         	goto	u430
  1679  007FA8                     u431:
  1680  007FA8  EFDF  F03F         	goto	l1458
  1681  007FAC                     u430:
  1682  007FAC  5028               	movf	___aldiv@divisor^0,w,c
  1683  007FAE  5E24               	subwf	___aldiv@dividend^0,f,c
  1684  007FB0  5029               	movf	(___aldiv@divisor+1)^0,w,c
  1685  007FB2  5A25               	subwfb	(___aldiv@dividend+1)^0,f,c
  1686  007FB4  502A               	movf	(___aldiv@divisor+2)^0,w,c
  1687  007FB6  5A26               	subwfb	(___aldiv@dividend+2)^0,f,c
  1688  007FB8  502B               	movf	(___aldiv@divisor+3)^0,w,c
  1689  007FBA  5A27               	subwfb	(___aldiv@dividend+3)^0,f,c
  1690  007FBC  802E               	bsf	___aldiv@quotient^0,0,c
  1691  007FBE                     l1458:
  1692  007FBE  90D8               	bcf	status,0,c
  1693  007FC0  322B               	rrcf	(___aldiv@divisor+3)^0,f,c
  1694  007FC2  322A               	rrcf	(___aldiv@divisor+2)^0,f,c
  1695  007FC4  3229               	rrcf	(___aldiv@divisor+1)^0,f,c
  1696  007FC6  3228               	rrcf	___aldiv@divisor^0,f,c
  1697  007FC8  2E2C               	decfsz	___aldiv@counter^0,f,c
  1698  007FCA  EFC2  F03F         	goto	l1450
  1699  007FCE                     l1462:
  1700  007FCE  502D               	movf	___aldiv@sign^0,w,c
  1701  007FD0  B4D8               	btfsc	status,2,c
  1702  007FD2  EFED  F03F         	goto	u441
  1703  007FD6  EFEF  F03F         	goto	u440
  1704  007FDA                     u441:
  1705  007FDA  EFF7  F03F         	goto	l1466
  1706  007FDE                     u440:
  1707  007FDE  1E31               	comf	(___aldiv@quotient+3)^0,f,c
  1708  007FE0  1E30               	comf	(___aldiv@quotient+2)^0,f,c
  1709  007FE2  1E2F               	comf	(___aldiv@quotient+1)^0,f,c
  1710  007FE4  6C2E               	negf	___aldiv@quotient^0,c
  1711  007FE6  0E00               	movlw	0
  1712  007FE8  222F               	addwfc	(___aldiv@quotient+1)^0,f,c
  1713  007FEA  2230               	addwfc	(___aldiv@quotient+2)^0,f,c
  1714  007FEC  2231               	addwfc	(___aldiv@quotient+3)^0,f,c
  1715  007FEE                     l1466:
  1716  007FEE  C02E  F024         	movff	___aldiv@quotient,?___aldiv
  1717  007FF2  C02F  F025         	movff	___aldiv@quotient+1,?___aldiv+1
  1718  007FF6  C030  F026         	movff	___aldiv@quotient+2,?___aldiv+2
  1719  007FFA  C031  F027         	movff	___aldiv@quotient+3,?___aldiv+3
  1720  007FFE  0012               	return		;funcret
  1721  008000                     __end_of___aldiv:
  1722                           	opt callstack 0
  1723  0000                     
  1724                           	psect	rparam
  1725  0000                     tosu	equ	0xFFF
  1726                           tosh	equ	0xFFE
  1727                           tosl	equ	0xFFD
  1728                           stkptr	equ	0xFFC
  1729                           pclatu	equ	0xFFB
  1730                           pclath	equ	0xFFA
  1731                           pcl	equ	0xFF9
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           indf0	equ	0xFEF
  1739                           postinc0	equ	0xFEE
  1740                           postdec0	equ	0xFED
  1741                           preinc0	equ	0xFEC
  1742                           plusw0	equ	0xFEB
  1743                           fsr0h	equ	0xFEA
  1744                           fsr0l	equ	0xFE9
  1745                           wreg	equ	0xFE8
  1746                           indf1	equ	0xFE7
  1747                           postinc1	equ	0xFE6
  1748                           postdec1	equ	0xFE5
  1749                           preinc1	equ	0xFE4
  1750                           plusw1	equ	0xFE3
  1751                           fsr1h	equ	0xFE2
  1752                           fsr1l	equ	0xFE1
  1753                           bsr	equ	0xFE0
  1754                           indf2	equ	0xFDF
  1755                           postinc2	equ	0xFDE
  1756                           postdec2	equ	0xFDD
  1757                           preinc2	equ	0xFDC
  1758                           plusw2	equ	0xFDB
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         23
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _verification->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite
    _UARTConfi->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1919
                          _UARTConfi
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    1194
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _end                                                  2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0     894
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (3) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (3) _UARTWrite                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTConfi                                            6     4      2     725
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTConfi
     ___aldiv
   _verification
     _Coord_Validated
       _UARTWrite
     _Ins_Validated
       _UARTWrite
     _Par_Validated
       _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
     _end
       _UARTWrite
     _start
       _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      5A       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      20        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 01 16:49:44 2019

                       _x 0059                        l40 7BE8                        l34 7AB2  
                      l51 7D6E                        l35 7AB6                        l60 7CE4  
                      l44 7C62                        l90 79E0                        l68 7B00  
                      l93 79F2                        l87 7B72                        l96 79CC  
                      l99 79DC                        u10 79DA                        u11 79D6  
                      u60 79EE                        u61 79EA                       l122 7EF2  
                     l151 7A38                       l274 7E0E                       l396 7FFE  
                     l990 79CC                       l992 79DA                       u110 7AB2  
                     u111 7AAE                       u200 7C94                       u201 7C90  
                     u210 7CDE                       u130 7C00                       u211 7CDA  
                     u131 7BFC                       u140 7C12                       u220 7AF8  
                     u141 7C0E                       u221 7AF4                       u150 7C5C  
                     u151 7C58                       u400 7F28                       u160 7CFC  
                     u401 7F24                       u161 7CF8                       u410 7F62  
                     u170 7D1C                       u411 7F5E                       u171 7D18  
                     u420 7F84                       u180 7D68                       u421 7F80  
                     u181 7D64                       u430 7FAC                       u190 7C7E  
                     u431 7FA8                       u191 7C7A                       u440 7FDE  
                     u441 7FDA                       u370 7E4E                       u450 7E0E  
                     u371 7E4A                       u451 7E0A                       u380 7BB8  
                     u381 7BB4                       u390 7F06                       u391 7F02  
                     _e_c 0001                       _cmd 7B74                       _end 7AB8  
                     _ons 0042                       wreg 000FE8              __CFG_LVP$OFF 000000  
             coord@buffer 0032              __CFG_WDT$OFF 000000                      l1100 7C16  
                    l1014 79E0                      l1016 79EE                      l1120 7C5C  
                    l1130 7CFC                      l1122 7C60                      l1114 7C2A  
                    l1106 7C1C                      l1210 7AC6                      l1202 7AB8  
                    l1050 7A72                      l1140 7D1C                      l1132 7D04  
                    l1116 7C3C                      l1108 7C22                      l1212 7AD8  
                    l1204 7ABE                      l1060 7A92                      l1052 7A78  
                    l1150 7D2E                      l1126 7CE6                      l1118 7C40  
                    l1214 7ADC                      l1062 7A96                      l1160 7D4C  
                    l1128 7CEA                      l1400 7EA6                      l1216 7AF8  
                    l1064 7AB4                      l1170 7C68                      l1162 7D68  
                    l1138 7D0A                      l1402 7B74                      l1058 7A80  
                    l1172 7C7E                      l1164 7D6C                      l1156 7D36  
                    l1148 7D28                      l1092 7BEA                      l1420 7BE4  
                    l1412 7B86                      l1404 7B7A                      l1500 7DAA  
                    l1430 7F06                      l1190 7CAC                      l1174 7C94  
                    l1182 7C9E                      l1158 7D48                      l1094 7BEE  
                    l1422 7BE6                      l1414 7B98                      l1406 7B7E  
                    l1440 7F3C                      l1432 7F16                      l1192 7CBE  
                    l1184 7CA4                      l1176 7C98                      l1168 7C64  
                    l1096 7C00                      l1416 7B9C                      l1504 7DB2  
                    l1520 7A34                      l1512 7A18                      l1450 7F84  
                    l1442 7F4C                      l1434 7F1A                      l1426 7EF4  
                    l1194 7CC2                      l1098 7C12                      l1418 7BB8  
                    l1506 7DFC                      l1514 7A1C                      ?_cmd 0024  
                    l1460 7FC8                      l1452 7F8E                      l1444 7F62  
                    l1436 7F28                      l1428 7EF8                      l1196 7CDE  
                    l1516 7A28                      l1454 7FAC                      l1446 7F6A  
                    l1462 7FCE                      l1438 7F38                      l1470 7B02  
                    l1198 7CE2                      l1390 7E1E                      l1382 7E10  
                    l1526 7DC6                      l1518 7A2C                      l1464 7FDE  
                    l1456 7FBC                      l1448 7F76                      l1480 7B6A  
                    l1472 7B06                      l1392 7E2E                      l1466 7FEE  
                    l1458 7FBE                      l1482 7B6C                      l1474 7B64  
                    l1394 7E32                      l1490 7D78                      l1484 7B6E  
                    l1476 7B66                      l1396 7E4E                      l1388 7E18  
                    l1492 7D82                      ?_end 0024                      l1486 7B70  
                    l1478 7B68                      l1398 7E66                      l1494 7D8C  
                    l1496 7D96                      l1488 7D70                      l1498 7DA0  
                    _RCIF 007CF5                      _Par1 0058                      _Par2 0056  
                    cmd@i 003E                      _main 7A18                      _init 000E  
                    end@i 0025                      fsr2h 000FDA                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9         ??_Coord_Validated 0025  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
            ___param_bank 000000             _Ins_Validated 7CE6                     ??_cmd 003E  
                   ??_end 0025             __CFG_PLLDIV$2 000000           __end_of___aldiv 8000  
                   ?_main 0024                     _RCREG 000FAE             _Par_Validated 7BEA  
                   _SPBRG 000FAF                     _PORTC 000F82                     _TRISC 000F94  
                   _TXREG 000FAD        __size_of_UARTConfi 0072                     _Error 001F  
        __end_of_UARTRead 79DE        __size_of_UARTWrite 0016                     _click 0050  
                   _coord 7E10                     _start 7A72                     tablat 000FF5  
                   status 000FD8            __CFG_MCLRE$OFF 000000           __initialization 7A3C  
            __end_of_main 7A3C            ?_Ins_Validated 0024                    ??_main 0042  
          ?_Par_Validated 0024             __activetblptr 000002                    ?_coord 0024  
                  ?_start 0024                    _OSCCON 000FD3         __end_of_UARTConfi 7B74  
             _CoordRelatX 004A               _CoordRelatY 0048                 ??___aldiv 002C  
       __end_of_UARTWrite 79F4                    _cord_x 0054                    _cord_y 0052  
                  _letter 0057                    clear_0 7A62                    coord@L 0026  
                  coord@i 003C                    coord@x 0028                    coord@y 002A  
            __pdataCOMRAM 0001                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    start@i 0025                __accesstop 0060  
 __end_of__initialization 7A68           __CFG_PBADEN$OFF 000000             ___rparam_used 000001  
         ??_Ins_Validated 0025            __pcstackCOMRAM 0024                 ?_UARTRead 0024  
           __end_of_coord 7EF4             __end_of_start 7AB8           ??_Par_Validated 0025  
          _UARTConfi$1233 0034             _PasosActuales 0044           _Coord_Validated 7C64  
                 ??_coord 002E                   ??_start 0025                __pnvCOMRAM 0059  
              ??_UARTRead 0024          Coord_Validated@i 0025                   __Hparam 0000  
                 __Lparam 0000                   ___aldiv 7EF4                   __pcinit 7A3C  
                 __ramtop 0800                   __ptext0 7A18                   __ptext1 7D70  
                 __ptext2 7A72                   __ptext3 7AB8                   __ptext4 7B74  
                 __ptext5 7E10                   __ptext6 79CC                   __ptext7 7BEA  
                 __ptext8 7CE6                   __ptext9 7C64   __end_of_Coord_Validated 7CE6  
                 _gracias 0018              __size_of_cmd 0076              __size_of_end 004A  
        ___aldiv@dividend 0024                   coord@P1 0024                   coord@P2 002C  
    end_of_initialization 7A68             __Lmediumconst 0000                 _RCSTAbits 000FAB  
        ___aldiv@quotient 002E                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc2 000FDE                 _UARTConfi 7B02  
               _UARTWrite 79DE                 _PORTCbits 000F82                 _PORTDbits 000F83  
               _TRISCbits 000F94             ?_verification 0024                 _TXSTAbits 000FAC  
              ?_UARTConfi 0032             __pidataCOMRAM 79F5                 _CoordAntX 004E  
               _CoordAntY 004C         __size_of_UARTRead 0012                ?_UARTWrite 0024  
        ?_Coord_Validated 0024       start_initialization 7A3C               __end_of_cmd 7BEA  
             __end_of_end 7B02            ??_verification 0040             UARTConfi@BAUD 0032  
               _NextState 0051     __end_of_Ins_Validated 7D70     __end_of_Par_Validated 7C64  
             __pbssCOMRAM 0042                  ?___aldiv 0024               ??_UARTConfi 0034  
             ??_UARTWrite 0024            __size_of_coord 00E4            __size_of_start 0046  
         ___aldiv@divisor 0028           ___aldiv@counter 002C                  _PIR1bits 000F9E  
                _UARTRead 79CC      __end_of_verification 7E10                 coord@read 003B  
           UARTWrite@data 0024                 copy_data0 7A50                  __Hrparam 0000  
                __Lrparam 0000          __size_of___aldiv 010C     __CFG_FOSC$INTOSCIO_EC 000000  
                __ptext10 79DE                  __ptext11 7B02                  __ptext12 7EF4  
          Ins_Validated@i 0025             __size_of_main 0024            Par_Validated@i 0025  
__size_of_Coord_Validated 0082     __size_of_verification 00A0              ___aldiv@sign 002D  
  __size_of_Ins_Validated 008A              _verification 7D70           _pasosRecorridos 0046  
  __size_of_Par_Validated 007A  
