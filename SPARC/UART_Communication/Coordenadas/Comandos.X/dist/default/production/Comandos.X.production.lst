

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 15:47:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  007A64                     __pidataCOMRAM:
    63                           	opt callstack 0
    64                           
    65                           ;initializer for _e_c
    66  007A64  45                 	db	69
    67  007A65  6E                 	db	110
    68  007A66  74                 	db	116
    69  007A67  65                 	db	101
    70  007A68  72                 	db	114
    71  007A69  5F                 	db	95
    72  007A6A  63                 	db	99
    73  007A6B  6F                 	db	111
    74  007A6C  6D                 	db	109
    75  007A6D  6D                 	db	109
    76  007A6E  61                 	db	97
    77  007A6F  6E                 	db	110
    78  007A70  64                 	db	100
    79                           
    80                           ;initializer for _init
    81  007A71  57                 	db	87
    82  007A72  61                 	db	97
    83  007A73  69                 	db	105
    84  007A74  74                 	db	116
    85  007A75  69                 	db	105
    86  007A76  6E                 	db	110
    87  007A77  67                 	db	103
    88  007A78  2E                 	db	46
    89  007A79  2E                 	db	46
    90  007A7A  2E                 	db	46
    91                           
    92                           ;initializer for _Error
    93  007A7B  45                 	db	69
    94  007A7C  72                 	db	114
    95  007A7D  72                 	db	114
    96  007A7E  6F                 	db	111
    97  007A7F  72                 	db	114
    98                           
    99                           ;initializer for _okay
   100  007A80  4F                 	db	79
   101  007A81  6B                 	db	107
   102  007A82  61                 	db	97
   103  007A83  79                 	db	121
   104  0000                     _PORTCbits	set	3970
   105  0000                     _PORTDbits	set	3971
   106  0000                     _TRISC	set	3988
   107  0000                     _OSCCON	set	4051
   108  0000                     _RCREG	set	4014
   109  0000                     _TXREG	set	4013
   110  0000                     _PIR1bits	set	3998
   111  0000                     _RCSTAbits	set	4011
   112  0000                     _TXSTAbits	set	4012
   113  0000                     _SPBRG	set	4015
   114  0000                     _TRISCbits	set	3988
   115  0000                     _PORTC	set	3970
   116  0000                     _RCIF	set	31989
   117                           
   118                           ; #config settings
   119  0000                     
   120                           	psect	cinit
   121  007A84                     __pcinit:
   122                           	opt callstack 0
   123  007A84                     start_initialization:
   124                           	opt callstack 0
   125  007A84                     __initialization:
   126                           	opt callstack 0
   127                           
   128                           ; Initialize objects allocated to COMRAM (32 bytes)
   129                           ; load TBLPTR registers with __pidataCOMRAM
   130  007A84  0E64               	movlw	low __pidataCOMRAM
   131  007A86  6EF6               	movwf	tblptrl,c
   132  007A88  0E7A               	movlw	high __pidataCOMRAM
   133  007A8A  6EF7               	movwf	tblptrh,c
   134  007A8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   135  007A8E  6EF8               	movwf	tblptru,c
   136  007A90  EE00  F001         	lfsr	0,__pdataCOMRAM
   137  007A94  EE10 F020          	lfsr	1,32
   138  007A98                     copy_data0:
   139  007A98  0009               	tblrd		*+
   140  007A9A  CFF5 FFEE          	movff	tablat,postinc0
   141  007A9E  50E5               	movf	postdec1,w,c
   142  007AA0  50E1               	movf	fsr1l,w,c
   143  007AA2  E1FA               	bnz	copy_data0
   144                           
   145                           ; Clear objects allocated to COMRAM (23 bytes)
   146  007AA4  EE00  F03F         	lfsr	0,__pbssCOMRAM
   147  007AA8  0E17               	movlw	23
   148  007AAA                     clear_0:
   149  007AAA  6AEE               	clrf	postinc0,c
   150  007AAC  06E8               	decf	wreg,f,c
   151  007AAE  E1FD               	bnz	clear_0
   152  007AB0                     end_of_initialization:
   153                           	opt callstack 0
   154  007AB0                     __end_of__initialization:
   155                           	opt callstack 0
   156  007AB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  007AB2  6EF8               	movwf	tblptru,c
   158  007AB4  0100               	movlb	0
   159  007AB6  EF24  F03D         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162  00003F                     __pbssCOMRAM:
   163                           	opt callstack 0
   164  00003F                     _ons:
   165                           	opt callstack 0
   166  00003F                     	ds	2
   167  000041                     _PasosActuales:
   168                           	opt callstack 0
   169  000041                     	ds	2
   170  000043                     _pasosRecorridos:
   171                           	opt callstack 0
   172  000043                     	ds	2
   173  000045                     _CoordRelatY:
   174                           	opt callstack 0
   175  000045                     	ds	2
   176  000047                     _CoordRelatX:
   177                           	opt callstack 0
   178  000047                     	ds	2
   179  000049                     _CoordAntY:
   180                           	opt callstack 0
   181  000049                     	ds	2
   182  00004B                     _CoordAntX:
   183                           	opt callstack 0
   184  00004B                     	ds	2
   185  00004D                     _click:
   186                           	opt callstack 0
   187  00004D                     	ds	1
   188  00004E                     _NextState:
   189                           	opt callstack 0
   190  00004E                     	ds	1
   191  00004F                     _cord_y:
   192                           	opt callstack 0
   193  00004F                     	ds	2
   194  000051                     _cord_x:
   195                           	opt callstack 0
   196  000051                     	ds	2
   197  000053                     _Par2:
   198                           	opt callstack 0
   199  000053                     	ds	1
   200  000054                     _letter:
   201                           	opt callstack 0
   202  000054                     	ds	1
   203  000055                     _Par1:
   204                           	opt callstack 0
   205  000055                     	ds	1
   206                           
   207                           	psect	dataCOMRAM
   208  000001                     __pdataCOMRAM:
   209                           	opt callstack 0
   210  000001                     _e_c:
   211                           	opt callstack 0
   212  000001                     	ds	13
   213  00000E                     _init:
   214                           	opt callstack 0
   215  00000E                     	ds	10
   216  000018                     _Error:
   217                           	opt callstack 0
   218  000018                     	ds	5
   219  00001D                     _okay:
   220                           	opt callstack 0
   221  00001D                     	ds	4
   222                           
   223                           	psect	cstackCOMRAM
   224  000021                     __pcstackCOMRAM:
   225                           	opt callstack 0
   226  000021                     ?___aldiv:
   227                           	opt callstack 0
   228  000021                     UARTWrite@data:
   229                           	opt callstack 0
   230  000021                     coord@P1:
   231                           	opt callstack 0
   232  000021                     ___aldiv@dividend:
   233                           	opt callstack 0
   234                           
   235                           ; 4 bytes @ 0x0
   236  000021                     	ds	1
   237  000022                     start@i:
   238                           	opt callstack 0
   239  000022                     Par_Validated@i:
   240                           	opt callstack 0
   241  000022                     Ins_Validated@i:
   242                           	opt callstack 0
   243  000022                     Coord_Validated@i:
   244                           	opt callstack 0
   245  000022                     end@i:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0x1
   249  000022                     	ds	1
   250  000023                     coord@L:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254  000023                     	ds	2
   255  000025                     coord@x:
   256                           	opt callstack 0
   257  000025                     ___aldiv@divisor:
   258                           	opt callstack 0
   259                           
   260                           ; 4 bytes @ 0x4
   261  000025                     	ds	2
   262  000027                     coord@y:
   263                           	opt callstack 0
   264                           
   265                           ; 2 bytes @ 0x6
   266  000027                     	ds	2
   267  000029                     ___aldiv@counter:
   268                           	opt callstack 0
   269  000029                     coord@P2:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x8
   273  000029                     	ds	1
   274  00002A                     ___aldiv@sign:
   275                           	opt callstack 0
   276                           
   277                           ; 1 bytes @ 0x9
   278  00002A                     	ds	1
   279  00002B                     ??_coord:
   280  00002B                     ___aldiv@quotient:
   281                           	opt callstack 0
   282                           
   283                           ; 4 bytes @ 0xA
   284  00002B                     	ds	4
   285  00002F                     UARTConfi@BAUD:
   286                           	opt callstack 0
   287  00002F                     coord@buffer:
   288                           	opt callstack 0
   289                           
   290                           ; 9 bytes @ 0xE
   291  00002F                     	ds	2
   292  000031                     _UARTConfi$1186:
   293                           	opt callstack 0
   294                           
   295                           ; 4 bytes @ 0x10
   296  000031                     	ds	7
   297  000038                     coord@read:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x17
   301  000038                     	ds	1
   302  000039                     coord@i:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0x18
   306  000039                     	ds	2
   307  00003B                     cmd@i:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x1A
   311  00003B                     	ds	2
   312  00003D                     ??_verification:
   313                           
   314                           ; 1 bytes @ 0x1C
   315  00003D                     	ds	2
   316  00003F                     
   317                           ; 1 bytes @ 0x1E
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 11 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   337 ;;      Params:         0       0       0       0       0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels required when called:    4
   343 ;; This function calls:
   344 ;;		_UARTConfi
   345 ;;		_verification
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  007A48                     __ptext0:
   353                           	opt callstack 0
   354  007A48                     _main:
   355                           	opt callstack 27
   356  007A48                     
   357                           ;main.c: 12:     OSCCON=0x72;
   358  007A48  0E72               	movlw	114
   359  007A4A  6ED3               	movwf	211,c	;volatile
   360  007A4C                     
   361                           ;main.c: 13:     UARTConfi(9600);
   362  007A4C  0E25               	movlw	37
   363  007A4E  6E30               	movwf	(UARTConfi@BAUD+1)^0,c
   364  007A50  0E80               	movlw	128
   365  007A52  6E2F               	movwf	UARTConfi@BAUD^0,c
   366  007A54  EC9C  F03D         	call	_UARTConfi	;wreg free
   367  007A58                     
   368                           ;main.c: 14:     TRISC=0X00;
   369  007A58  0E00               	movlw	0
   370  007A5A  6E94               	movwf	148,c	;volatile
   371  007A5C                     
   372                           ;main.c: 15:     verification();
   373  007A5C  EC88  F03E         	call	_verification	;wreg free
   374  007A60  EF00  F000         	goto	start
   375  007A64                     __end_of_main:
   376                           	opt callstack 0
   377                           
   378 ;; *************** function _verification *****************
   379 ;; Defined at:
   380 ;;		line 6 in file "verification.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   394 ;;      Params:         0       0       0       0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0
   396 ;;      Temps:          2       0       0       0       0       0       0       0       0
   397 ;;      Totals:         2       0       0       0       0       0       0       0       0
   398 ;;Total ram usage:        2 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; Hardware stack levels required when called:    3
   401 ;; This function calls:
   402 ;;		_Coord_Validated
   403 ;;		_Ins_Validated
   404 ;;		_Par_Validated
   405 ;;		_cmd
   406 ;;		_end
   407 ;;		_start
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text1
   414  007D10                     __ptext1:
   415                           	opt callstack 0
   416  007D10                     _verification:
   417                           	opt callstack 27
   418  007D10                     
   419                           ;verification.c: 7:     NextState = iddle_State;
   420  007D10  0E00               	movlw	0
   421  007D12  6E4E               	movwf	_NextState^0,c
   422                           
   423                           ;verification.c: 8:     switch(NextState)
   424  007D14  EF9F  F03E         	goto	l1419
   425  007D18                     l1405:
   426                           
   427                           ;verification.c: 11:                 NextState= start();
   428  007D18  EC7C  F03D         	call	_start	;wreg free
   429  007D1C  6E4E               	movwf	_NextState^0,c
   430  007D1E                     l1407:
   431                           
   432                           ;verification.c: 15:                 NextState=cmd();
   433  007D1E  EC0F  F03E         	call	_cmd	;wreg free
   434  007D22  6E4E               	movwf	_NextState^0,c
   435  007D24                     l1409:
   436                           
   437                           ;verification.c: 19:                 NextState=Par_Validated();
   438  007D24  ECD5  F03D         	call	_Par_Validated	;wreg free
   439  007D28  6E4E               	movwf	_NextState^0,c
   440  007D2A                     l1411:
   441                           
   442                           ;verification.c: 23:                 NextState=Ins_Validated();
   443  007D2A  ECC6  F03E         	call	_Ins_Validated	;wreg free
   444  007D2E  6E4E               	movwf	_NextState^0,c
   445  007D30                     l1413:
   446                           
   447                           ;verification.c: 27:                 NextState=Coord_Validated();
   448  007D30  EC4A  F03E         	call	_Coord_Validated	;wreg free
   449  007D34  6E4E               	movwf	_NextState^0,c
   450  007D36                     l1415:
   451                           
   452                           ;verification.c: 31:                 end();
   453  007D36  EC5D  F03D         	call	_end	;wreg free
   454                           
   455                           ;verification.c: 32:             }break;
   456  007D3A  EFC5  F03E         	goto	l265
   457  007D3E                     l1419:
   458  007D3E  0E00               	movlw	0
   459  007D40  6E3D               	movwf	??_verification^0,c
   460  007D42  0E00               	movlw	0
   461  007D44  6E3E               	movwf	(??_verification+1)^0,c
   462                           
   463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   464                           ; Switch size 1, requested type "simple"
   465                           ; Number of cases is 1, Range of values is 0 to 0
   466                           ; switch strategies available:
   467                           ; Name         Instructions Cycles
   468                           ; simple_byte            4     3 (average)
   469                           ;	Chosen strategy is simple_byte
   470  007D46  503E               	movf	(??_verification+1)^0,w,c
   471  007D48  0A00               	xorlw	0	; case 0
   472  007D4A  B4D8               	btfsc	status,2,c
   473  007D4C  EFAA  F03E         	goto	l1437
   474  007D50  EFC5  F03E         	goto	l265
   475  007D54                     l1437:
   476                           
   477                           ; Switch size 1, requested type "simple"
   478                           ; Number of cases is 6, Range of values is 0 to 6
   479                           ; switch strategies available:
   480                           ; Name         Instructions Cycles
   481                           ; simple_byte           19    10 (average)
   482                           ;	Chosen strategy is simple_byte
   483  007D54  503D               	movf	??_verification^0,w,c
   484  007D56  0A00               	xorlw	0	; case 0
   485  007D58  B4D8               	btfsc	status,2,c
   486  007D5A  EF8C  F03E         	goto	l1405
   487  007D5E  0A01               	xorlw	1	; case 1
   488  007D60  B4D8               	btfsc	status,2,c
   489  007D62  EF8F  F03E         	goto	l1407
   490  007D66  0A03               	xorlw	3	; case 2
   491  007D68  B4D8               	btfsc	status,2,c
   492  007D6A  EF92  F03E         	goto	l1409
   493  007D6E  0A01               	xorlw	1	; case 3
   494  007D70  B4D8               	btfsc	status,2,c
   495  007D72  EF95  F03E         	goto	l1411
   496  007D76  0A07               	xorlw	7	; case 4
   497  007D78  B4D8               	btfsc	status,2,c
   498  007D7A  EF98  F03E         	goto	l1413
   499  007D7E  0A02               	xorlw	2	; case 6
   500  007D80  B4D8               	btfsc	status,2,c
   501  007D82  EF9B  F03E         	goto	l1415
   502  007D86  EFC5  F03E         	goto	l265
   503  007D8A                     l265:
   504  007D8A  0012               	return		;funcret
   505  007D8C                     __end_of_verification:
   506                           	opt callstack 0
   507                           
   508 ;; *************** function _start *****************
   509 ;; Defined at:
   510 ;;		line 14 in file "cases.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  i               2    1[COMRAM] int 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      unsigned char 
   517 ;; Registers used:
   518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   524 ;;      Params:         0       0       0       0       0       0       0       0       0
   525 ;;      Locals:         2       0       0       0       0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0
   527 ;;      Totals:         2       0       0       0       0       0       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; Hardware stack levels required when called:    1
   531 ;; This function calls:
   532 ;;		_UARTWrite
   533 ;; This function is called by:
   534 ;;		_verification
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text2
   539  007AF8                     __ptext2:
   540                           	opt callstack 0
   541  007AF8                     _start:
   542                           	opt callstack 28
   543  007AF8                     
   544                           ;cases.c: 15:      for(int i=0;i<10;i++){
   545  007AF8  0E00               	movlw	0
   546  007AFA  6E23               	movwf	(start@i+1)^0,c
   547  007AFC  0E00               	movlw	0
   548  007AFE  6E22               	movwf	start@i^0,c
   549  007B00                     l977:
   550                           
   551                           ;cases.c: 16:         UARTWrite(init[i]);
   552  007B00  0E0E               	movlw	low _init
   553  007B02  2422               	addwf	start@i^0,w,c
   554  007B04  6ED9               	movwf	fsr2l,c
   555  007B06  0E00               	movlw	high _init
   556  007B08  2023               	addwfc	(start@i+1)^0,w,c
   557  007B0A  6EDA               	movwf	fsr2h,c
   558  007B0C  50DF               	movf	indf2,w,c
   559  007B0E  EC19  F03D         	call	_UARTWrite
   560  007B12                     
   561                           ;cases.c: 17:     }
   562  007B12  4A22               	infsnz	start@i^0,f,c
   563  007B14  2A23               	incf	(start@i+1)^0,f,c
   564  007B16  BE23               	btfsc	(start@i+1)^0,7,c
   565  007B18  EF97  F03D         	goto	u41
   566  007B1C  5023               	movf	(start@i+1)^0,w,c
   567  007B1E  E109               	bnz	u40
   568  007B20  0E0A               	movlw	10
   569  007B22  5C22               	subwf	start@i^0,w,c
   570  007B24  A0D8               	btfss	status,0,c
   571  007B26  EF97  F03D         	goto	u41
   572  007B2A  EF99  F03D         	goto	u40
   573  007B2E                     u41:
   574  007B2E  EF80  F03D         	goto	l977
   575  007B32                     u40:
   576  007B32                     
   577                           ;cases.c: 18:      PORTC = 0xff;
   578  007B32  6882               	setf	130,c	;volatile
   579  007B34                     
   580                           ;cases.c: 19:      return wait_cmd_State;
   581  007B34  0E01               	movlw	1
   582  007B36  0012               	return		;funcret
   583  007B38                     __end_of_start:
   584                           	opt callstack 0
   585                           
   586 ;; *************** function _end *****************
   587 ;; Defined at:
   588 ;;		line 87 in file "cases.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  i               2    1[COMRAM] int 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         0       0       0       0       0       0       0       0       0
   603 ;;      Locals:         2       0       0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0
   605 ;;      Totals:         2       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        2 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    1
   609 ;; This function calls:
   610 ;;		_UARTWrite
   611 ;; This function is called by:
   612 ;;		_verification
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text3
   617  007ABA                     __ptext3:
   618                           	opt callstack 0
   619  007ABA                     _end:
   620                           	opt callstack 28
   621  007ABA                     
   622                           ;cases.c: 88:     for(int i=0;i<4;i++){
   623  007ABA  0E00               	movlw	0
   624  007ABC  6E23               	movwf	(end@i+1)^0,c
   625  007ABE  0E00               	movlw	0
   626  007AC0  6E22               	movwf	end@i^0,c
   627  007AC2                     l1121:
   628                           
   629                           ;cases.c: 89:         UARTWrite(okay[i]);
   630  007AC2  0E1D               	movlw	low _okay
   631  007AC4  2422               	addwf	end@i^0,w,c
   632  007AC6  6ED9               	movwf	fsr2l,c
   633  007AC8  0E00               	movlw	high _okay
   634  007ACA  2023               	addwfc	(end@i+1)^0,w,c
   635  007ACC  6EDA               	movwf	fsr2h,c
   636  007ACE  50DF               	movf	indf2,w,c
   637  007AD0  EC19  F03D         	call	_UARTWrite
   638  007AD4                     
   639                           ;cases.c: 90:     }
   640  007AD4  4A22               	infsnz	end@i^0,f,c
   641  007AD6  2A23               	incf	(end@i+1)^0,f,c
   642  007AD8  BE23               	btfsc	(end@i+1)^0,7,c
   643  007ADA  EF78  F03D         	goto	u151
   644  007ADE  5023               	movf	(end@i+1)^0,w,c
   645  007AE0  E109               	bnz	u150
   646  007AE2  0E04               	movlw	4
   647  007AE4  5C22               	subwf	end@i^0,w,c
   648  007AE6  A0D8               	btfss	status,0,c
   649  007AE8  EF78  F03D         	goto	u151
   650  007AEC  EF7A  F03D         	goto	u150
   651  007AF0                     u151:
   652  007AF0  EF61  F03D         	goto	l1121
   653  007AF4                     u150:
   654  007AF4                     
   655                           ;cases.c: 91:     PORTC=0XFF;
   656  007AF4  6882               	setf	130,c	;volatile
   657  007AF6  0012               	return		;funcret
   658  007AF8                     __end_of_end:
   659                           	opt callstack 0
   660                           
   661 ;; *************** function _cmd *****************
   662 ;; Defined at:
   663 ;;		line 23 in file "cases.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  i               2   26[COMRAM] int 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      unsigned char 
   670 ;; Registers used:
   671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         2       0       0       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0
   680 ;;      Totals:         2       0       0       0       0       0       0       0       0
   681 ;;Total ram usage:        2 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		_UARTWrite
   686 ;;		_coord
   687 ;; This function is called by:
   688 ;;		_verification
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text4
   693  007C1E                     __ptext4:
   694                           	opt callstack 0
   695  007C1E                     _cmd:
   696                           	opt callstack 27
   697  007C1E                     
   698                           ;cases.c: 24:     UARTWrite(13);
   699  007C1E  0E0D               	movlw	13
   700  007C20  EC19  F03D         	call	_UARTWrite
   701  007C24                     
   702                           ;cases.c: 25:     PORTC = 0x00;
   703  007C24  0E00               	movlw	0
   704  007C26  6E82               	movwf	130,c	;volatile
   705  007C28                     
   706                           ;cases.c: 26:     for(int i=0;i<10;i++){
   707  007C28  0E00               	movlw	0
   708  007C2A  6E3C               	movwf	(cmd@i+1)^0,c
   709  007C2C  0E00               	movlw	0
   710  007C2E  6E3B               	movwf	cmd@i^0,c
   711  007C30                     l1327:
   712                           
   713                           ;cases.c: 27:         UARTWrite(e_c[i]);
   714  007C30  0E01               	movlw	low _e_c
   715  007C32  243B               	addwf	cmd@i^0,w,c
   716  007C34  6ED9               	movwf	fsr2l,c
   717  007C36  0E00               	movlw	high _e_c
   718  007C38  203C               	addwfc	(cmd@i+1)^0,w,c
   719  007C3A  6EDA               	movwf	fsr2h,c
   720  007C3C  50DF               	movf	indf2,w,c
   721  007C3E  EC19  F03D         	call	_UARTWrite
   722  007C42                     
   723                           ;cases.c: 28:     }
   724  007C42  4A3B               	infsnz	cmd@i^0,f,c
   725  007C44  2A3C               	incf	(cmd@i+1)^0,f,c
   726  007C46  BE3C               	btfsc	(cmd@i+1)^0,7,c
   727  007C48  EF2F  F03E         	goto	u361
   728  007C4C  503C               	movf	(cmd@i+1)^0,w,c
   729  007C4E  E109               	bnz	u360
   730  007C50  0E0A               	movlw	10
   731  007C52  5C3B               	subwf	cmd@i^0,w,c
   732  007C54  A0D8               	btfss	status,0,c
   733  007C56  EF2F  F03E         	goto	u361
   734  007C5A  EF31  F03E         	goto	u360
   735  007C5E                     u361:
   736  007C5E  EF18  F03E         	goto	l1327
   737  007C62                     u360:
   738  007C62                     
   739                           ;cases.c: 29:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
   740  007C62  0E55               	movlw	low _Par1
   741  007C64  6E21               	movwf	coord@P1^0,c
   742  007C66  0E00               	movlw	high _Par1
   743  007C68  6E22               	movwf	(coord@P1+1)^0,c
   744  007C6A  0E54               	movlw	low _letter
   745  007C6C  6E23               	movwf	coord@L^0,c
   746  007C6E  0E00               	movlw	high _letter
   747  007C70  6E24               	movwf	(coord@L+1)^0,c
   748  007C72  0E51               	movlw	low _cord_x
   749  007C74  6E25               	movwf	coord@x^0,c
   750  007C76  0E00               	movlw	high _cord_x
   751  007C78  6E26               	movwf	(coord@x+1)^0,c
   752  007C7A  0E4F               	movlw	low _cord_y
   753  007C7C  6E27               	movwf	coord@y^0,c
   754  007C7E  0E00               	movlw	high _cord_y
   755  007C80  6E28               	movwf	(coord@y+1)^0,c
   756  007C82  0E53               	movlw	low _Par2
   757  007C84  6E29               	movwf	coord@P2^0,c
   758  007C86  0E00               	movlw	high _Par2
   759  007C88  6E2A               	movwf	(coord@P2+1)^0,c
   760  007C8A  EC08  F03F         	call	_coord	;wreg free
   761  007C8E                     
   762                           ;cases.c: 30:     PORTC =0Xff;
   763  007C8E  6882               	setf	130,c	;volatile
   764  007C90                     
   765                           ;cases.c: 31:     return validate_Par_State;
   766  007C90  0E02               	movlw	2
   767  007C92  0012               	return		;funcret
   768  007C94                     __end_of_cmd:
   769                           	opt callstack 0
   770                           
   771 ;; *************** function _coord *****************
   772 ;; Defined at:
   773 ;;		line 9 in file "coordenadas.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  P1              2    0[COMRAM] PTR unsigned char 
   776 ;;		 -> Par1(1), 
   777 ;;  L               2    2[COMRAM] PTR unsigned char 
   778 ;;		 -> letter(1), 
   779 ;;  x               2    4[COMRAM] PTR unsigned short 
   780 ;;		 -> cord_x(2), 
   781 ;;  y               2    6[COMRAM] PTR unsigned short 
   782 ;;		 -> cord_y(2), 
   783 ;;  P2              2    8[COMRAM] PTR unsigned char 
   784 ;;		 -> Par2(1), 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  i               2   24[COMRAM] int 
   787 ;;  buffer          9   14[COMRAM] unsigned char [9]
   788 ;;  read            1   23[COMRAM] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  2    0[COMRAM] int 
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:        10       0       0       0       0       0       0       0       0
   799 ;;      Locals:        12       0       0       0       0       0       0       0       0
   800 ;;      Temps:          4       0       0       0       0       0       0       0       0
   801 ;;      Totals:        26       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:       26 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    1
   805 ;; This function calls:
   806 ;;		_UARTRead
   807 ;; This function is called by:
   808 ;;		_cmd
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text5
   813  007E10                     __ptext5:
   814                           	opt callstack 0
   815  007E10                     _coord:
   816                           	opt callstack 27
   817  007E10                     
   818                           ;coordenadas.c: 10:   char buffer [9];;coordenadas.c: 11:         char read;;coordenadas
      +                          .c: 13:         for(int i=0; i<=8; i++){
   819  007E10  0E00               	movlw	0
   820  007E12  6E3A               	movwf	(coord@i+1)^0,c
   821  007E14  0E00               	movlw	0
   822  007E16  6E39               	movwf	coord@i^0,c
   823  007E18                     l1303:
   824                           
   825                           ;coordenadas.c: 14:             read= UARTRead();
   826  007E18  EC10  F03D         	call	_UARTRead	;wreg free
   827  007E1C  6E38               	movwf	coord@read^0,c
   828  007E1E                     
   829                           ;coordenadas.c: 15:             buffer[i]=read;
   830  007E1E  0E2F               	movlw	low coord@buffer
   831  007E20  2439               	addwf	coord@i^0,w,c
   832  007E22  6ED9               	movwf	fsr2l,c
   833  007E24  0E00               	movlw	high coord@buffer
   834  007E26  203A               	addwfc	(coord@i+1)^0,w,c
   835  007E28  6EDA               	movwf	fsr2h,c
   836  007E2A  C038  FFDF         	movff	coord@read,indf2
   837  007E2E                     
   838                           ;coordenadas.c: 16:         }
   839  007E2E  4A39               	infsnz	coord@i^0,f,c
   840  007E30  2A3A               	incf	(coord@i+1)^0,f,c
   841  007E32  BE3A               	btfsc	(coord@i+1)^0,7,c
   842  007E34  EF25  F03F         	goto	u351
   843  007E38  503A               	movf	(coord@i+1)^0,w,c
   844  007E3A  E109               	bnz	u350
   845  007E3C  0E09               	movlw	9
   846  007E3E  5C39               	subwf	coord@i^0,w,c
   847  007E40  A0D8               	btfss	status,0,c
   848  007E42  EF25  F03F         	goto	u351
   849  007E46  EF27  F03F         	goto	u350
   850  007E4A                     u351:
   851  007E4A  EF0C  F03F         	goto	l1303
   852  007E4E                     u350:
   853  007E4E                     
   854                           ;coordenadas.c: 17:         *P1= buffer[0];
   855  007E4E  C021  FFD9         	movff	coord@P1,fsr2l
   856  007E52  C022  FFDA         	movff	coord@P1+1,fsr2h
   857  007E56  C02F  FFDF         	movff	coord@buffer,indf2
   858                           
   859                           ;coordenadas.c: 18:         *L= buffer[1];
   860  007E5A  C023  FFD9         	movff	coord@L,fsr2l
   861  007E5E  C024  FFDA         	movff	coord@L+1,fsr2h
   862  007E62  C030  FFDF         	movff	coord@buffer+1,indf2
   863  007E66                     
   864                           ;coordenadas.c: 19:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
   865  007E66  0E30               	movlw	48
   866  007E68  6E2B               	movwf	??_coord^0,c
   867  007E6A  0EEB               	movlw	235
   868  007E6C  6E2C               	movwf	(??_coord+1)^0,c
   869  007E6E  5031               	movf	(coord@buffer+2)^0,w,c
   870  007E70  0D64               	mullw	100
   871  007E72  CFF3 F02D          	movff	prodl,??_coord+2
   872  007E76  CFF4 F02E          	movff	prodh,??_coord+3
   873  007E7A  5032               	movf	(coord@buffer+3)^0,w,c
   874  007E7C  0D0A               	mullw	10
   875  007E7E  50F3               	movf	243,w,c
   876  007E80  262D               	addwf	(??_coord+2)^0,f,c
   877  007E82  50F4               	movf	244,w,c
   878  007E84  222E               	addwfc	(??_coord+3)^0,f,c
   879  007E86  5033               	movf	(coord@buffer+4)^0,w,c
   880  007E88  262D               	addwf	(??_coord+2)^0,f,c
   881  007E8A  0E00               	movlw	0
   882  007E8C  222E               	addwfc	(??_coord+3)^0,f,c
   883  007E8E  502B               	movf	??_coord^0,w,c
   884  007E90  262D               	addwf	(??_coord+2)^0,f,c
   885  007E92  502C               	movf	(??_coord+1)^0,w,c
   886  007E94  222E               	addwfc	(??_coord+3)^0,f,c
   887  007E96  C025  FFD9         	movff	coord@x,fsr2l
   888  007E9A  C026  FFDA         	movff	coord@x+1,fsr2h
   889  007E9E  C02D  FFDE         	movff	??_coord+2,postinc2
   890  007EA2  C02E  FFDD         	movff	??_coord+3,postdec2
   891  007EA6                     
   892                           ;coordenadas.c: 20:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
   893  007EA6  0E30               	movlw	48
   894  007EA8  6E2B               	movwf	??_coord^0,c
   895  007EAA  0EEB               	movlw	235
   896  007EAC  6E2C               	movwf	(??_coord+1)^0,c
   897  007EAE  5034               	movf	(coord@buffer+5)^0,w,c
   898  007EB0  0D64               	mullw	100
   899  007EB2  CFF3 F02D          	movff	prodl,??_coord+2
   900  007EB6  CFF4 F02E          	movff	prodh,??_coord+3
   901  007EBA  5035               	movf	(coord@buffer+6)^0,w,c
   902  007EBC  0D0A               	mullw	10
   903  007EBE  50F3               	movf	243,w,c
   904  007EC0  262D               	addwf	(??_coord+2)^0,f,c
   905  007EC2  50F4               	movf	244,w,c
   906  007EC4  222E               	addwfc	(??_coord+3)^0,f,c
   907  007EC6  5036               	movf	(coord@buffer+7)^0,w,c
   908  007EC8  262D               	addwf	(??_coord+2)^0,f,c
   909  007ECA  0E00               	movlw	0
   910  007ECC  222E               	addwfc	(??_coord+3)^0,f,c
   911  007ECE  502B               	movf	??_coord^0,w,c
   912  007ED0  262D               	addwf	(??_coord+2)^0,f,c
   913  007ED2  502C               	movf	(??_coord+1)^0,w,c
   914  007ED4  222E               	addwfc	(??_coord+3)^0,f,c
   915  007ED6  C027  FFD9         	movff	coord@y,fsr2l
   916  007EDA  C028  FFDA         	movff	coord@y+1,fsr2h
   917  007EDE  C02D  FFDE         	movff	??_coord+2,postinc2
   918  007EE2  C02E  FFDD         	movff	??_coord+3,postdec2
   919                           
   920                           ;coordenadas.c: 21:   *P2= buffer[8];
   921  007EE6  C029  FFD9         	movff	coord@P2,fsr2l
   922  007EEA  C02A  FFDA         	movff	coord@P2+1,fsr2h
   923  007EEE  C037  FFDF         	movff	coord@buffer+8,indf2
   924  007EF2  0012               	return		;funcret
   925  007EF4                     __end_of_coord:
   926                           	opt callstack 0
   927                           
   928 ;; *************** function _UARTRead *****************
   929 ;; Defined at:
   930 ;;		line 30 in file "UART.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      unsigned char 
   937 ;; Registers used:
   938 ;;		wreg, status,2
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   944 ;;      Params:         0       0       0       0       0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0
   947 ;;      Totals:         0       0       0       0       0       0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_coord
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text6
   958  007A20                     __ptext6:
   959                           	opt callstack 0
   960  007A20                     _UARTRead:
   961                           	opt callstack 27
   962  007A20                     l94:
   963  007A20  AA9E               	btfss	3998,5,c	;volatile
   964  007A22  EF15  F03D         	goto	u11
   965  007A26  EF17  F03D         	goto	u10
   966  007A2A                     u11:
   967  007A2A  EF10  F03D         	goto	l94
   968  007A2E                     u10:
   969  007A2E                     
   970                           ;UART.c: 32:     return RCREG;
   971  007A2E  50AE               	movf	174,w,c	;volatile
   972  007A30  0012               	return		;funcret
   973  007A32                     __end_of_UARTRead:
   974                           	opt callstack 0
   975                           
   976 ;; *************** function _Par_Validated *****************
   977 ;; Defined at:
   978 ;;		line 34 in file "cases.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  i               2    1[COMRAM] int 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      unsigned char 
   985 ;; Registers used:
   986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         2       0       0       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0
   995 ;;      Totals:         2       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    1
   999 ;; This function calls:
  1000 ;;		_UARTWrite
  1001 ;; This function is called by:
  1002 ;;		_verification
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text7
  1007  007BAA                     __ptext7:
  1008                           	opt callstack 0
  1009  007BAA                     _Par_Validated:
  1010                           	opt callstack 28
  1011  007BAA                     
  1012                           ;cases.c: 35:     PORTC=0x00;
  1013  007BAA  0E00               	movlw	0
  1014  007BAC  6E82               	movwf	130,c	;volatile
  1015  007BAE                     
  1016                           ;cases.c: 36:     if(Par1==0X3C && Par2==0x3E){
  1017  007BAE  0E3C               	movlw	60
  1018  007BB0  1855               	xorwf	_Par1^0,w,c
  1019  007BB2  A4D8               	btfss	status,2,c
  1020  007BB4  EFDE  F03D         	goto	u61
  1021  007BB8  EFE0  F03D         	goto	u60
  1022  007BBC                     u61:
  1023  007BBC  EFEE  F03D         	goto	l1025
  1024  007BC0                     u60:
  1025  007BC0  0E3E               	movlw	62
  1026  007BC2  1853               	xorwf	_Par2^0,w,c
  1027  007BC4  A4D8               	btfss	status,2,c
  1028  007BC6  EFE7  F03D         	goto	u71
  1029  007BCA  EFE9  F03D         	goto	u70
  1030  007BCE                     u71:
  1031  007BCE  EFEE  F03D         	goto	l1025
  1032  007BD2                     u70:
  1033  007BD2                     
  1034                           ;cases.c: 37:         PORTC=0X02;
  1035  007BD2  0E02               	movlw	2
  1036  007BD4  6E82               	movwf	130,c	;volatile
  1037  007BD6                     
  1038                           ;cases.c: 38:         return validate_Instruct_State;
  1039  007BD6  0E03               	movlw	3
  1040  007BD8  EF0E  F03E         	goto	l42
  1041  007BDC                     l1025:
  1042                           
  1043                           ;cases.c: 41:         for(int i=0;i<5;i++){
  1044  007BDC  0E00               	movlw	0
  1045  007BDE  6E23               	movwf	(Par_Validated@i+1)^0,c
  1046  007BE0  0E00               	movlw	0
  1047  007BE2  6E22               	movwf	Par_Validated@i^0,c
  1048  007BE4                     l1031:
  1049                           
  1050                           ;cases.c: 42:             UARTWrite(Error[i]);
  1051  007BE4  0E18               	movlw	low _Error
  1052  007BE6  2422               	addwf	Par_Validated@i^0,w,c
  1053  007BE8  6ED9               	movwf	fsr2l,c
  1054  007BEA  0E00               	movlw	high _Error
  1055  007BEC  2023               	addwfc	(Par_Validated@i+1)^0,w,c
  1056  007BEE  6EDA               	movwf	fsr2h,c
  1057  007BF0  50DF               	movf	indf2,w,c
  1058  007BF2  EC19  F03D         	call	_UARTWrite
  1059  007BF6                     
  1060                           ;cases.c: 43:         }
  1061  007BF6  4A22               	infsnz	Par_Validated@i^0,f,c
  1062  007BF8  2A23               	incf	(Par_Validated@i+1)^0,f,c
  1063  007BFA  BE23               	btfsc	(Par_Validated@i+1)^0,7,c
  1064  007BFC  EF09  F03E         	goto	u81
  1065  007C00  5023               	movf	(Par_Validated@i+1)^0,w,c
  1066  007C02  E109               	bnz	u80
  1067  007C04  0E05               	movlw	5
  1068  007C06  5C22               	subwf	Par_Validated@i^0,w,c
  1069  007C08  A0D8               	btfss	status,0,c
  1070  007C0A  EF09  F03E         	goto	u81
  1071  007C0E  EF0B  F03E         	goto	u80
  1072  007C12                     u81:
  1073  007C12  EFF2  F03D         	goto	l1031
  1074  007C16                     u80:
  1075  007C16                     
  1076                           ;cases.c: 44:         PORTC= 0X04;
  1077  007C16  0E04               	movlw	4
  1078  007C18  6E82               	movwf	130,c	;volatile
  1079  007C1A                     
  1080                           ;cases.c: 45:         return wait_cmd_State;
  1081  007C1A  0E01               	movlw	1
  1082  007C1C                     l42:
  1083  007C1C  0012               	return		;funcret
  1084  007C1E                     __end_of_Par_Validated:
  1085                           	opt callstack 0
  1086                           
  1087 ;; *************** function _Ins_Validated *****************
  1088 ;; Defined at:
  1089 ;;		line 49 in file "cases.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  i               2    1[COMRAM] int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      unsigned char 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0
  1104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1106 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    1
  1110 ;; This function calls:
  1111 ;;		_UARTWrite
  1112 ;; This function is called by:
  1113 ;;		_verification
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text8
  1118  007D8C                     __ptext8:
  1119                           	opt callstack 0
  1120  007D8C                     _Ins_Validated:
  1121                           	opt callstack 28
  1122  007D8C                     
  1123                           ;cases.c: 50:     PORTC=0x00;
  1124  007D8C  0E00               	movlw	0
  1125  007D8E  6E82               	movwf	130,c	;volatile
  1126  007D90                     
  1127                           ;cases.c: 51:     if(letter==0x43){
  1128  007D90  0E43               	movlw	67
  1129  007D92  1854               	xorwf	_letter^0,w,c
  1130  007D94  A4D8               	btfss	status,2,c
  1131  007D96  EFCF  F03E         	goto	u91
  1132  007D9A  EFD1  F03E         	goto	u90
  1133  007D9E                     u91:
  1134  007D9E  EFD8  F03E         	goto	l1055
  1135  007DA2                     u90:
  1136  007DA2                     
  1137                           ;cases.c: 52:         PORTC=0X02;
  1138  007DA2  0E02               	movlw	2
  1139  007DA4  6E82               	movwf	130,c	;volatile
  1140                           
  1141                           ;cases.c: 53:         click=1;
  1142  007DA6  0E01               	movlw	1
  1143  007DA8  6E4D               	movwf	_click^0,c
  1144  007DAA                     l1049:
  1145                           
  1146                           ;cases.c: 54:         return validate_Coord_State;
  1147  007DAA  0E04               	movlw	4
  1148  007DAC  EF07  F03F         	goto	l49
  1149  007DB0                     l1055:
  1150  007DB0  0E53               	movlw	83
  1151  007DB2  1854               	xorwf	_letter^0,w,c
  1152  007DB4  A4D8               	btfss	status,2,c
  1153  007DB6  EFDF  F03E         	goto	u101
  1154  007DBA  EFE1  F03E         	goto	u100
  1155  007DBE                     u101:
  1156  007DBE  EFE7  F03E         	goto	l1065
  1157  007DC2                     u100:
  1158  007DC2                     
  1159                           ;cases.c: 58:         PORTC=0X02;
  1160  007DC2  0E02               	movlw	2
  1161  007DC4  6E82               	movwf	130,c	;volatile
  1162                           
  1163                           ;cases.c: 59:         click=0;
  1164  007DC6  0E00               	movlw	0
  1165  007DC8  6E4D               	movwf	_click^0,c
  1166  007DCA  EFD5  F03E         	goto	l1049
  1167  007DCE                     l1065:
  1168                           
  1169                           ;cases.c: 63:         for(int i=0;i<5;i++){
  1170  007DCE  0E00               	movlw	0
  1171  007DD0  6E23               	movwf	(Ins_Validated@i+1)^0,c
  1172  007DD2  0E00               	movlw	0
  1173  007DD4  6E22               	movwf	Ins_Validated@i^0,c
  1174  007DD6                     l1071:
  1175                           
  1176                           ;cases.c: 64:             UARTWrite(Error[i]);
  1177  007DD6  0E18               	movlw	low _Error
  1178  007DD8  2422               	addwf	Ins_Validated@i^0,w,c
  1179  007DDA  6ED9               	movwf	fsr2l,c
  1180  007DDC  0E00               	movlw	high _Error
  1181  007DDE  2023               	addwfc	(Ins_Validated@i+1)^0,w,c
  1182  007DE0  6EDA               	movwf	fsr2h,c
  1183  007DE2  50DF               	movf	indf2,w,c
  1184  007DE4  EC19  F03D         	call	_UARTWrite
  1185  007DE8                     
  1186                           ;cases.c: 65:         }
  1187  007DE8  4A22               	infsnz	Ins_Validated@i^0,f,c
  1188  007DEA  2A23               	incf	(Ins_Validated@i+1)^0,f,c
  1189  007DEC  BE23               	btfsc	(Ins_Validated@i+1)^0,7,c
  1190  007DEE  EF02  F03F         	goto	u111
  1191  007DF2  5023               	movf	(Ins_Validated@i+1)^0,w,c
  1192  007DF4  E109               	bnz	u110
  1193  007DF6  0E05               	movlw	5
  1194  007DF8  5C22               	subwf	Ins_Validated@i^0,w,c
  1195  007DFA  A0D8               	btfss	status,0,c
  1196  007DFC  EF02  F03F         	goto	u111
  1197  007E00  EF04  F03F         	goto	u110
  1198  007E04                     u111:
  1199  007E04  EFEB  F03E         	goto	l1071
  1200  007E08                     u110:
  1201  007E08                     
  1202                           ;cases.c: 66:         PORTC= 0X04;
  1203  007E08  0E04               	movlw	4
  1204  007E0A  6E82               	movwf	130,c	;volatile
  1205  007E0C                     
  1206                           ;cases.c: 67:         return wait_cmd_State;
  1207  007E0C  0E01               	movlw	1
  1208  007E0E                     l49:
  1209  007E0E  0012               	return		;funcret
  1210  007E10                     __end_of_Ins_Validated:
  1211                           	opt callstack 0
  1212                           
  1213 ;; *************** function _Coord_Validated *****************
  1214 ;; Defined at:
  1215 ;;		line 71 in file "cases.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  i               2    1[COMRAM] int 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      unsigned char 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0
  1230 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    1
  1236 ;; This function calls:
  1237 ;;		_UARTWrite
  1238 ;; This function is called by:
  1239 ;;		_verification
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text9
  1244  007C94                     __ptext9:
  1245                           	opt callstack 0
  1246  007C94                     _Coord_Validated:
  1247                           	opt callstack 28
  1248  007C94                     
  1249                           ;cases.c: 72:     PORTC=0x00;
  1250  007C94  0E00               	movlw	0
  1251  007C96  6E82               	movwf	130,c	;volatile
  1252  007C98                     
  1253                           ;cases.c: 73:     if(cord_x<=300 && cord_y<=300){
  1254  007C98  0E2D               	movlw	45
  1255  007C9A  5C51               	subwf	_cord_x^0,w,c
  1256  007C9C  0E01               	movlw	1
  1257  007C9E  5852               	subwfb	(_cord_x+1)^0,w,c
  1258  007CA0  B0D8               	btfsc	status,0,c
  1259  007CA2  EF55  F03E         	goto	u121
  1260  007CA6  EF57  F03E         	goto	u120
  1261  007CAA                     u121:
  1262  007CAA  EF67  F03E         	goto	l1097
  1263  007CAE                     u120:
  1264  007CAE  0E2D               	movlw	45
  1265  007CB0  5C4F               	subwf	_cord_y^0,w,c
  1266  007CB2  0E01               	movlw	1
  1267  007CB4  5850               	subwfb	(_cord_y+1)^0,w,c
  1268  007CB6  B0D8               	btfsc	status,0,c
  1269  007CB8  EF60  F03E         	goto	u131
  1270  007CBC  EF62  F03E         	goto	u130
  1271  007CC0                     u131:
  1272  007CC0  EF67  F03E         	goto	l1097
  1273  007CC4                     u130:
  1274  007CC4                     
  1275                           ;cases.c: 74:         PORTC=0X02;
  1276  007CC4  0E02               	movlw	2
  1277  007CC6  6E82               	movwf	130,c	;volatile
  1278  007CC8                     
  1279                           ;cases.c: 75:         return end_State;
  1280  007CC8  0E06               	movlw	6
  1281  007CCA  EF87  F03E         	goto	l58
  1282  007CCE                     l1097:
  1283                           
  1284                           ;cases.c: 78:         for(int i=0;i<5;i++){
  1285  007CCE  0E00               	movlw	0
  1286  007CD0  6E23               	movwf	(Coord_Validated@i+1)^0,c
  1287  007CD2  0E00               	movlw	0
  1288  007CD4  6E22               	movwf	Coord_Validated@i^0,c
  1289  007CD6                     l1103:
  1290                           
  1291                           ;cases.c: 79:             UARTWrite(Error[i]);
  1292  007CD6  0E18               	movlw	low _Error
  1293  007CD8  2422               	addwf	Coord_Validated@i^0,w,c
  1294  007CDA  6ED9               	movwf	fsr2l,c
  1295  007CDC  0E00               	movlw	high _Error
  1296  007CDE  2023               	addwfc	(Coord_Validated@i+1)^0,w,c
  1297  007CE0  6EDA               	movwf	fsr2h,c
  1298  007CE2  50DF               	movf	indf2,w,c
  1299  007CE4  EC19  F03D         	call	_UARTWrite
  1300  007CE8                     
  1301                           ;cases.c: 80:         }
  1302  007CE8  4A22               	infsnz	Coord_Validated@i^0,f,c
  1303  007CEA  2A23               	incf	(Coord_Validated@i+1)^0,f,c
  1304  007CEC  BE23               	btfsc	(Coord_Validated@i+1)^0,7,c
  1305  007CEE  EF82  F03E         	goto	u141
  1306  007CF2  5023               	movf	(Coord_Validated@i+1)^0,w,c
  1307  007CF4  E109               	bnz	u140
  1308  007CF6  0E05               	movlw	5
  1309  007CF8  5C22               	subwf	Coord_Validated@i^0,w,c
  1310  007CFA  A0D8               	btfss	status,0,c
  1311  007CFC  EF82  F03E         	goto	u141
  1312  007D00  EF84  F03E         	goto	u140
  1313  007D04                     u141:
  1314  007D04  EF6B  F03E         	goto	l1103
  1315  007D08                     u140:
  1316  007D08                     
  1317                           ;cases.c: 81:         PORTC= 0X04;
  1318  007D08  0E04               	movlw	4
  1319  007D0A  6E82               	movwf	130,c	;volatile
  1320  007D0C                     
  1321                           ;cases.c: 82:        return wait_cmd_State;
  1322  007D0C  0E01               	movlw	1
  1323  007D0E                     l58:
  1324  007D0E  0012               	return		;funcret
  1325  007D10                     __end_of_Coord_Validated:
  1326                           	opt callstack 0
  1327                           
  1328 ;; *************** function _UARTWrite *****************
  1329 ;; Defined at:
  1330 ;;		line 24 in file "UART.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  data            1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  data            1    0[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_start
  1354 ;;		_cmd
  1355 ;;		_Par_Validated
  1356 ;;		_Ins_Validated
  1357 ;;		_Coord_Validated
  1358 ;;		_end
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text10
  1363  007A32                     __ptext10:
  1364                           	opt callstack 0
  1365  007A32                     _UARTWrite:
  1366                           	opt callstack 28
  1367                           
  1368                           ;incstack = 0
  1369                           ;UARTWrite@data stored from wreg
  1370  007A32  6E21               	movwf	UARTWrite@data^0,c
  1371  007A34                     l88:
  1372  007A34  A89E               	btfss	158,4,c	;volatile
  1373  007A36  EF1F  F03D         	goto	u21
  1374  007A3A  EF21  F03D         	goto	u20
  1375  007A3E                     u21:
  1376  007A3E  EF1A  F03D         	goto	l88
  1377  007A42                     u20:
  1378  007A42                     
  1379                           ;UART.c: 26:     TXREG= data;
  1380  007A42  C021  FFAD         	movff	UARTWrite@data,4013	;volatile
  1381  007A46  0012               	return		;funcret
  1382  007A48                     __end_of_UARTWrite:
  1383                           	opt callstack 0
  1384                           
  1385 ;; *************** function _UARTConfi *****************
  1386 ;; Defined at:
  1387 ;;		line 5 in file "UART.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  BAUD            2   14[COMRAM] int 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1401 ;;      Params:         2       0       0       0       0       0       0       0       0
  1402 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1404 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1405 ;;Total ram usage:        6 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    1
  1408 ;; This function calls:
  1409 ;;		___aldiv
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text11
  1416  007B38                     __ptext11:
  1417                           	opt callstack 0
  1418  007B38                     _UARTConfi:
  1419                           	opt callstack 29
  1420  007B38                     
  1421                           ;UART.c: 7:     TRISCbits.RC6=0;
  1422  007B38  9C94               	bcf	148,6,c	;volatile
  1423                           
  1424                           ;UART.c: 8:     TRISCbits.RC7=1;
  1425  007B3A  8E94               	bsf	148,7,c	;volatile
  1426  007B3C                     
  1427                           ;UART.c: 10:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1428  007B3C  C02F  F025         	movff	UARTConfi@BAUD,___aldiv@divisor
  1429  007B40  C030  F026         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
  1430  007B44  0E00               	movlw	0
  1431  007B46  BE26               	btfsc	(___aldiv@divisor+1)^0,7,c
  1432  007B48  0EFF               	movlw	-1
  1433  007B4A  6E27               	movwf	(___aldiv@divisor+2)^0,c
  1434  007B4C  6E28               	movwf	(___aldiv@divisor+3)^0,c
  1435  007B4E  0E00               	movlw	0
  1436  007B50  6E21               	movwf	___aldiv@dividend^0,c
  1437  007B52  0E12               	movlw	18
  1438  007B54  6E22               	movwf	(___aldiv@dividend+1)^0,c
  1439  007B56  0E7A               	movlw	122
  1440  007B58  6E23               	movwf	(___aldiv@dividend+2)^0,c
  1441  007B5A  0E00               	movlw	0
  1442  007B5C  6E24               	movwf	(___aldiv@dividend+3)^0,c
  1443  007B5E  EC7A  F03F         	call	___aldiv	;wreg free
  1444  007B62  C021  F031         	movff	?___aldiv,_UARTConfi$1186
  1445  007B66  C022  F032         	movff	?___aldiv+1,_UARTConfi$1186+1
  1446  007B6A  C023  F033         	movff	?___aldiv+2,_UARTConfi$1186+2
  1447  007B6E  C024  F034         	movff	?___aldiv+3,_UARTConfi$1186+3
  1448                           
  1449                           ;UART.c: 10:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1450  007B72  C031  F021         	movff	_UARTConfi$1186,___aldiv@dividend
  1451  007B76  C032  F022         	movff	_UARTConfi$1186+1,___aldiv@dividend+1
  1452  007B7A  C033  F023         	movff	_UARTConfi$1186+2,___aldiv@dividend+2
  1453  007B7E  C034  F024         	movff	_UARTConfi$1186+3,___aldiv@dividend+3
  1454  007B82  0E40               	movlw	64
  1455  007B84  6E25               	movwf	___aldiv@divisor^0,c
  1456  007B86  0E00               	movlw	0
  1457  007B88  6E26               	movwf	(___aldiv@divisor+1)^0,c
  1458  007B8A  0E00               	movlw	0
  1459  007B8C  6E27               	movwf	(___aldiv@divisor+2)^0,c
  1460  007B8E  0E00               	movlw	0
  1461  007B90  6E28               	movwf	(___aldiv@divisor+3)^0,c
  1462  007B92  EC7A  F03F         	call	___aldiv	;wreg free
  1463  007B96  0421               	decf	?___aldiv^0,w,c
  1464  007B98  6EAF               	movwf	175,c	;volatile
  1465  007B9A                     
  1466                           ;UART.c: 11:     TXSTAbits.BRGH = 0;
  1467  007B9A  94AC               	bcf	172,2,c	;volatile
  1468  007B9C                     
  1469                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  1470  007B9C  98AC               	bcf	172,4,c	;volatile
  1471  007B9E                     
  1472                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  1473  007B9E  8EAB               	bsf	171,7,c	;volatile
  1474  007BA0                     
  1475                           ;UART.c: 16:     TXSTAbits.TX9 = 0;
  1476  007BA0  9CAC               	bcf	172,6,c	;volatile
  1477  007BA2                     
  1478                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1479  007BA2  8AAC               	bsf	172,5,c	;volatile
  1480  007BA4                     
  1481                           ;UART.c: 20:     RCSTAbits.RC9 = 0;
  1482  007BA4  9CAB               	bcf	171,6,c	;volatile
  1483  007BA6                     
  1484                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1485  007BA6  88AB               	bsf	171,4,c	;volatile
  1486  007BA8  0012               	return		;funcret
  1487  007BAA                     __end_of_UARTConfi:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function ___aldiv *****************
  1491 ;; Defined at:
  1492 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  dividend        4    0[COMRAM] long 
  1495 ;;  divisor         4    4[COMRAM] long 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  quotient        4   10[COMRAM] long 
  1498 ;;  sign            1    9[COMRAM] unsigned char 
  1499 ;;  counter         1    8[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  4    0[COMRAM] long 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         8       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1512 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:       14 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_UARTConfi
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text12
  1523  007EF4                     __ptext12:
  1524                           	opt callstack 0
  1525  007EF4                     ___aldiv:
  1526                           	opt callstack 29
  1527  007EF4  0E00               	movlw	0
  1528  007EF6  6E2A               	movwf	___aldiv@sign^0,c
  1529  007EF8  BE28               	btfsc	(___aldiv@divisor+3)^0,7,c
  1530  007EFA  EF83  F03F         	goto	u370
  1531  007EFE  EF81  F03F         	goto	u371
  1532  007F02                     u371:
  1533  007F02  EF8D  F03F         	goto	l1349
  1534  007F06                     u370:
  1535  007F06  1E28               	comf	(___aldiv@divisor+3)^0,f,c
  1536  007F08  1E27               	comf	(___aldiv@divisor+2)^0,f,c
  1537  007F0A  1E26               	comf	(___aldiv@divisor+1)^0,f,c
  1538  007F0C  6C25               	negf	___aldiv@divisor^0,c
  1539  007F0E  0E00               	movlw	0
  1540  007F10  2226               	addwfc	(___aldiv@divisor+1)^0,f,c
  1541  007F12  2227               	addwfc	(___aldiv@divisor+2)^0,f,c
  1542  007F14  2228               	addwfc	(___aldiv@divisor+3)^0,f,c
  1543  007F16  0E01               	movlw	1
  1544  007F18  6E2A               	movwf	___aldiv@sign^0,c
  1545  007F1A                     l1349:
  1546  007F1A  BE24               	btfsc	(___aldiv@dividend+3)^0,7,c
  1547  007F1C  EF94  F03F         	goto	u380
  1548  007F20  EF92  F03F         	goto	u381
  1549  007F24                     u381:
  1550  007F24  EF9E  F03F         	goto	l1355
  1551  007F28                     u380:
  1552  007F28  1E24               	comf	(___aldiv@dividend+3)^0,f,c
  1553  007F2A  1E23               	comf	(___aldiv@dividend+2)^0,f,c
  1554  007F2C  1E22               	comf	(___aldiv@dividend+1)^0,f,c
  1555  007F2E  6C21               	negf	___aldiv@dividend^0,c
  1556  007F30  0E00               	movlw	0
  1557  007F32  2222               	addwfc	(___aldiv@dividend+1)^0,f,c
  1558  007F34  2223               	addwfc	(___aldiv@dividend+2)^0,f,c
  1559  007F36  2224               	addwfc	(___aldiv@dividend+3)^0,f,c
  1560  007F38  0E01               	movlw	1
  1561  007F3A  1A2A               	xorwf	___aldiv@sign^0,f,c
  1562  007F3C                     l1355:
  1563  007F3C  0E00               	movlw	0
  1564  007F3E  6E2B               	movwf	___aldiv@quotient^0,c
  1565  007F40  0E00               	movlw	0
  1566  007F42  6E2C               	movwf	(___aldiv@quotient+1)^0,c
  1567  007F44  0E00               	movlw	0
  1568  007F46  6E2D               	movwf	(___aldiv@quotient+2)^0,c
  1569  007F48  0E00               	movlw	0
  1570  007F4A  6E2E               	movwf	(___aldiv@quotient+3)^0,c
  1571  007F4C  5025               	movf	___aldiv@divisor^0,w,c
  1572  007F4E  1026               	iorwf	(___aldiv@divisor+1)^0,w,c
  1573  007F50  1027               	iorwf	(___aldiv@divisor+2)^0,w,c
  1574  007F52  1028               	iorwf	(___aldiv@divisor+3)^0,w,c
  1575  007F54  B4D8               	btfsc	status,2,c
  1576  007F56  EFAF  F03F         	goto	u391
  1577  007F5A  EFB1  F03F         	goto	u390
  1578  007F5E                     u391:
  1579  007F5E  EFE7  F03F         	goto	l1377
  1580  007F62                     u390:
  1581  007F62  0E01               	movlw	1
  1582  007F64  6E29               	movwf	___aldiv@counter^0,c
  1583  007F66  EFBB  F03F         	goto	l1363
  1584  007F6A                     l1361:
  1585  007F6A  90D8               	bcf	status,0,c
  1586  007F6C  3625               	rlcf	___aldiv@divisor^0,f,c
  1587  007F6E  3626               	rlcf	(___aldiv@divisor+1)^0,f,c
  1588  007F70  3627               	rlcf	(___aldiv@divisor+2)^0,f,c
  1589  007F72  3628               	rlcf	(___aldiv@divisor+3)^0,f,c
  1590  007F74  2A29               	incf	___aldiv@counter^0,f,c
  1591  007F76                     l1363:
  1592  007F76  AE28               	btfss	(___aldiv@divisor+3)^0,7,c
  1593  007F78  EFC0  F03F         	goto	u401
  1594  007F7C  EFC2  F03F         	goto	u400
  1595  007F80                     u401:
  1596  007F80  EFB5  F03F         	goto	l1361
  1597  007F84                     u400:
  1598  007F84                     l1365:
  1599  007F84  90D8               	bcf	status,0,c
  1600  007F86  362B               	rlcf	___aldiv@quotient^0,f,c
  1601  007F88  362C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1602  007F8A  362D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1603  007F8C  362E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1604  007F8E  5025               	movf	___aldiv@divisor^0,w,c
  1605  007F90  5C21               	subwf	___aldiv@dividend^0,w,c
  1606  007F92  5026               	movf	(___aldiv@divisor+1)^0,w,c
  1607  007F94  5822               	subwfb	(___aldiv@dividend+1)^0,w,c
  1608  007F96  5027               	movf	(___aldiv@divisor+2)^0,w,c
  1609  007F98  5823               	subwfb	(___aldiv@dividend+2)^0,w,c
  1610  007F9A  5028               	movf	(___aldiv@divisor+3)^0,w,c
  1611  007F9C  5824               	subwfb	(___aldiv@dividend+3)^0,w,c
  1612  007F9E  A0D8               	btfss	status,0,c
  1613  007FA0  EFD4  F03F         	goto	u411
  1614  007FA4  EFD6  F03F         	goto	u410
  1615  007FA8                     u411:
  1616  007FA8  EFDF  F03F         	goto	l1373
  1617  007FAC                     u410:
  1618  007FAC  5025               	movf	___aldiv@divisor^0,w,c
  1619  007FAE  5E21               	subwf	___aldiv@dividend^0,f,c
  1620  007FB0  5026               	movf	(___aldiv@divisor+1)^0,w,c
  1621  007FB2  5A22               	subwfb	(___aldiv@dividend+1)^0,f,c
  1622  007FB4  5027               	movf	(___aldiv@divisor+2)^0,w,c
  1623  007FB6  5A23               	subwfb	(___aldiv@dividend+2)^0,f,c
  1624  007FB8  5028               	movf	(___aldiv@divisor+3)^0,w,c
  1625  007FBA  5A24               	subwfb	(___aldiv@dividend+3)^0,f,c
  1626  007FBC  802B               	bsf	___aldiv@quotient^0,0,c
  1627  007FBE                     l1373:
  1628  007FBE  90D8               	bcf	status,0,c
  1629  007FC0  3228               	rrcf	(___aldiv@divisor+3)^0,f,c
  1630  007FC2  3227               	rrcf	(___aldiv@divisor+2)^0,f,c
  1631  007FC4  3226               	rrcf	(___aldiv@divisor+1)^0,f,c
  1632  007FC6  3225               	rrcf	___aldiv@divisor^0,f,c
  1633  007FC8  2E29               	decfsz	___aldiv@counter^0,f,c
  1634  007FCA  EFC2  F03F         	goto	l1365
  1635  007FCE                     l1377:
  1636  007FCE  502A               	movf	___aldiv@sign^0,w,c
  1637  007FD0  B4D8               	btfsc	status,2,c
  1638  007FD2  EFED  F03F         	goto	u421
  1639  007FD6  EFEF  F03F         	goto	u420
  1640  007FDA                     u421:
  1641  007FDA  EFF7  F03F         	goto	l1381
  1642  007FDE                     u420:
  1643  007FDE  1E2E               	comf	(___aldiv@quotient+3)^0,f,c
  1644  007FE0  1E2D               	comf	(___aldiv@quotient+2)^0,f,c
  1645  007FE2  1E2C               	comf	(___aldiv@quotient+1)^0,f,c
  1646  007FE4  6C2B               	negf	___aldiv@quotient^0,c
  1647  007FE6  0E00               	movlw	0
  1648  007FE8  222C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1649  007FEA  222D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1650  007FEC  222E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1651  007FEE                     l1381:
  1652  007FEE  C02B  F021         	movff	___aldiv@quotient,?___aldiv
  1653  007FF2  C02C  F022         	movff	___aldiv@quotient+1,?___aldiv+1
  1654  007FF6  C02D  F023         	movff	___aldiv@quotient+2,?___aldiv+2
  1655  007FFA  C02E  F024         	movff	___aldiv@quotient+3,?___aldiv+3
  1656  007FFE  0012               	return		;funcret
  1657  008000                     __end_of___aldiv:
  1658                           	opt callstack 0
  1659  0000                     
  1660                           	psect	rparam
  1661  0000                     tosu	equ	0xFFF
  1662                           tosh	equ	0xFFE
  1663                           tosl	equ	0xFFD
  1664                           stkptr	equ	0xFFC
  1665                           pclatu	equ	0xFFB
  1666                           pclath	equ	0xFFA
  1667                           pcl	equ	0xFF9
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           prodh	equ	0xFF4
  1673                           prodl	equ	0xFF3
  1674                           indf0	equ	0xFEF
  1675                           postinc0	equ	0xFEE
  1676                           postdec0	equ	0xFED
  1677                           preinc0	equ	0xFEC
  1678                           plusw0	equ	0xFEB
  1679                           fsr0h	equ	0xFEA
  1680                           fsr0l	equ	0xFE9
  1681                           wreg	equ	0xFE8
  1682                           indf1	equ	0xFE7
  1683                           postinc1	equ	0xFE6
  1684                           postdec1	equ	0xFE5
  1685                           preinc1	equ	0xFE4
  1686                           plusw1	equ	0xFE3
  1687                           fsr1h	equ	0xFE2
  1688                           fsr1l	equ	0xFE1
  1689                           bsr	equ	0xFE0
  1690                           indf2	equ	0xFDF
  1691                           postinc2	equ	0xFDE
  1692                           postdec2	equ	0xFDD
  1693                           preinc2	equ	0xFDC
  1694                           plusw2	equ	0xFDB
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _verification->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite
    _UARTConfi->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1919
                          _UARTConfi
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    1194
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _end                                                  2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0     894
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (3) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (3) _UARTWrite                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTConfi                                            6     4      2     725
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTConfi
     ___aldiv
   _verification
     _Coord_Validated
       _UARTWrite
     _Ins_Validated
       _UARTWrite
     _Par_Validated
       _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
     _end
       _UARTWrite
     _start
       _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      55       1       89.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      20        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 15:47:53 2019

                      l32 7B32                        l33 7B36                        l42 7C1C  
                      l38 7C92                        l49 7E0E                        l65 7AF4  
                      l58 7D0E                        l66 7AF6                        l91 7A46  
                      l85 7BA8                        l94 7A20                        l88 7A34  
                      l97 7A30                        u10 7A2E                        u11 7A2A  
                      u20 7A42                        u21 7A3E                        u40 7B32  
                      u41 7B2E                        u60 7BC0                        u61 7BBC  
                      u70 7BD2                        u71 7BCE                        u80 7C16  
                      u81 7C12                        u90 7DA2                        u91 7D9E  
                     l118 7EF2                       l145 7A60                       l265 7D8A  
                     l347 7FFE                       l941 7A20                       l943 7A2E  
                     l947 7A34                       l971 7AF8                       l949 7A42  
                     l981 7B16                       l983 7B34                       l977 7B00  
                     l979 7B12                       u100 7DC2                       u101 7DBE  
                     u110 7E08                       u111 7E04                       u120 7CAE  
                     u121 7CAA                       u130 7CC4                       u131 7CC0  
                     u140 7D08                       u141 7D04                       u150 7AF4  
                     u151 7AF0                       u400 7F84                       u401 7F80  
                     u410 7FAC                       u411 7FA8                       u420 7FDE  
                     u421 7FDA                       u350 7E4E                       u351 7E4A  
                     u360 7C62                       u361 7C5E                       u370 7F06  
                     u371 7F02                       u380 7F28                       u381 7F24  
                     u390 7F62                       u391 7F5E                       _e_c 0001  
                     _cmd 7C1E                       _end 7ABA                       _ons 003F  
                     wreg 000FE8              __CFG_LVP$OFF 000000               coord@buffer 002F  
            __CFG_WDT$OFF 000000                      l1011 7BAA                      l1013 7BAE  
                    l1111 7D0C                      l1103 7CD6                      l1031 7BE4  
                    l1015 7BC0                      l1105 7CE8                      l1033 7BF6  
                    l1017 7BD2                      l1025 7BDC                      l1121 7AC2  
                    l1107 7CEC                      l1043 7D8C                      l1035 7BFA  
                    l1019 7BD6                      l1123 7AD4                      l1115 7ABA  
                    l1109 7D08                      l1045 7D90                      l1037 7C16  
                    l1125 7AD8                      l1071 7DD6                      l1047 7DA2  
                    l1055 7DB0                      l1039 7C1A                      l1311 7E4E  
                    l1303 7E18                      l1401 7BA6                      l1073 7DE8  
                    l1057 7DC2                      l1065 7DCE                      l1049 7DAA  
                    l1313 7E66                      l1305 7E1E                      l1321 7C28  
                    l1091 7CC8                      l1083 7C94                      l1075 7DEC  
                    l1315 7EA6                      l1307 7E2E                      l1331 7C46  
                    l1411 7D2A                      l1403 7D10                      l1341 7EF4  
                    l1085 7C98                      l1077 7E08                      l1309 7E32  
                    l1333 7C62                      l1317 7C1E                      l1413 7D30  
                    l1405 7D18                      l1351 7F28                      l1343 7EF8  
                    l1087 7CAE                      l1079 7E0C                      l1335 7C8E  
                    l1327 7C30                      l1319 7C24                      l1415 7D36  
                    l1407 7D1E                      l1431 7A5C                      l1361 7F6A  
                    l1353 7F38                      l1345 7F06                      l1089 7CC4  
                    l1097 7CCE                      l1337 7C90                      l1329 7C42  
                    l1409 7D24                      l1425 7A48                      ?_cmd 0021  
                    l1371 7FBC                      l1363 7F76                      l1355 7F3C  
                    l1347 7F16                      l1419 7D3E                      l1427 7A4C  
                    l1381 7FEE                      l1373 7FBE                      l1365 7F84  
                    l1357 7F4C                      l1349 7F1A                      l1437 7D54  
                    l1429 7A58                      l1375 7FC8                      l1367 7F8E  
                    l1359 7F62                      l1391 7B9C                      l1369 7FAC  
                    l1377 7FCE                      l1393 7B9E                      l1385 7B38  
                    l1297 7E10                      l1379 7FDE                      l1395 7BA0  
                    l1387 7B3C                      ?_end 0021                      l1397 7BA2  
                    l1389 7B9A                      l1399 7BA4                      _RCIF 007CF5  
                    _Par1 0055                      _Par2 0053                      cmd@i 003B  
                    _main 7A48                      _init 000E                      end@i 0022  
                    _okay 001D                      fsr2h 000FDA                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9         ??_Coord_Validated 0022  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
            ___param_bank 000000             _Ins_Validated 7D8C                     ??_cmd 003B  
                   ??_end 0022             __CFG_PLLDIV$2 000000           __end_of___aldiv 8000  
                   ?_main 0021                     _RCREG 000FAE             _Par_Validated 7BAA  
                   _SPBRG 000FAF                     _PORTC 000F82                     _TRISC 000F94  
                   _TXREG 000FAD        __size_of_UARTConfi 0072                     _Error 0018  
        __end_of_UARTRead 7A32        __size_of_UARTWrite 0016                     _click 004D  
                   _coord 7E10                     _start 7AF8                     tablat 000FF5  
                   status 000FD8            __CFG_MCLRE$OFF 000000           __initialization 7A84  
            __end_of_main 7A64            ?_Ins_Validated 0021                    ??_main 003F  
          ?_Par_Validated 0021             __activetblptr 000002                    ?_coord 0021  
                  ?_start 0021                    _OSCCON 000FD3         __end_of_UARTConfi 7BAA  
             _CoordRelatX 0047               _CoordRelatY 0045                 ??___aldiv 0029  
       __end_of_UARTWrite 7A48                    _cord_x 0051                    _cord_y 004F  
                  _letter 0054                    clear_0 7AAA                    coord@L 0023  
                  coord@i 0039                    coord@x 0025                    coord@y 0027  
            __pdataCOMRAM 0001                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    start@i 0022                __accesstop 0060  
 __end_of__initialization 7AB0           __CFG_PBADEN$OFF 000000             ___rparam_used 000001  
         ??_Ins_Validated 0022            __pcstackCOMRAM 0021                 ?_UARTRead 0021  
           __end_of_coord 7EF4             __end_of_start 7B38           ??_Par_Validated 0022  
          _UARTConfi$1186 0031             _PasosActuales 0041           _Coord_Validated 7C94  
                 ??_coord 002B                   ??_start 0022                ??_UARTRead 0021  
        Coord_Validated@i 0022                   __Hparam 0000                   __Lparam 0000  
                 ___aldiv 7EF4                   __pcinit 7A84                   __ramtop 0800  
                 __ptext0 7A48                   __ptext1 7D10                   __ptext2 7AF8  
                 __ptext3 7ABA                   __ptext4 7C1E                   __ptext5 7E10  
                 __ptext6 7A20                   __ptext7 7BAA                   __ptext8 7D8C  
                 __ptext9 7C94   __end_of_Coord_Validated 7D10              __size_of_cmd 0076  
            __size_of_end 003E          ___aldiv@dividend 0021                   coord@P1 0021  
                 coord@P2 0029      end_of_initialization 7AB0             __Lmediumconst 0000  
               _RCSTAbits 000FAB          ___aldiv@quotient 002B                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _UARTConfi 7B38                 _UARTWrite 7A32                 _PORTCbits 000F82  
               _PORTDbits 000F83                 _TRISCbits 000F94             ?_verification 0021  
               _TXSTAbits 000FAC                ?_UARTConfi 002F             __pidataCOMRAM 7A64  
               _CoordAntX 004B                 _CoordAntY 0049         __size_of_UARTRead 0012  
              ?_UARTWrite 0021          ?_Coord_Validated 0021       start_initialization 7A84  
             __end_of_cmd 7C94               __end_of_end 7AF8            ??_verification 003D  
           UARTConfi@BAUD 002F                 _NextState 004E     __end_of_Ins_Validated 7E10  
   __end_of_Par_Validated 7C1E               __pbssCOMRAM 003F                  ?___aldiv 0021  
             ??_UARTConfi 0031               ??_UARTWrite 0021            __size_of_coord 00E4  
          __size_of_start 0040           ___aldiv@divisor 0025           ___aldiv@counter 0029  
                _PIR1bits 000F9E                  _UARTRead 7A20      __end_of_verification 7D8C  
               coord@read 0038             UARTWrite@data 0021                 copy_data0 7A98  
                __Hrparam 0000                  __Lrparam 0000          __size_of___aldiv 010C  
                __ptext10 7A32                  __ptext11 7B38                  __ptext12 7EF4  
          Ins_Validated@i 0022             __size_of_main 001C            Par_Validated@i 0022  
__size_of_Coord_Validated 007C     __size_of_verification 007C       __CFG_FOSC$INTOSC_HS 000000  
            ___aldiv@sign 002A    __size_of_Ins_Validated 0084              _verification 7D10  
         _pasosRecorridos 0043    __size_of_Par_Validated 0074  
