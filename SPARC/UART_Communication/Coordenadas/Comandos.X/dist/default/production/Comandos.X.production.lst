

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 10 11:51:47 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	nvCOMRAM
    82  00003D                     __pnvCOMRAM:
    83                           	opt callstack 0
    84  00003D                     _CoordAntY:
    85                           	opt callstack 0
    86  00003D                     	ds	2
    87  00003F                     _CoordAntX:
    88                           	opt callstack 0
    89  00003F                     	ds	2
    90  000041                     _ControlFlagVerification:
    91                           	opt callstack 0
    92  000041                     	ds	2
    93  0000                     _TMR2	set	4044
    94  0000                     _T2CON	set	4042
    95  0000                     _CCPR2L	set	4027
    96  0000                     _CCP2CON	set	4026
    97  0000                     _CCPR1L	set	4030
    98  0000                     _CCP1CON	set	4029
    99  0000                     _PR2	set	4043
   100  0000                     _TRISB	set	3987
   101  0000                     _LATB	set	3978
   102  0000                     _PORTB	set	3969
   103  0000                     _TRISC	set	3988
   104  0000                     _LATC	set	3979
   105  0000                     _PORTC	set	3970
   106  0000                     _TRISD	set	3989
   107  0000                     _LATD	set	3980
   108  0000                     _PORTD	set	3971
   109  0000                     _ADCON1	set	4033
   110  0000                     _CVRCONbits	set	4021
   111  0000                     _CMCON	set	4020
   112  0000                     _OSCCON	set	4051
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _RCONbits	set	4048
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTDbits	set	3971
   117  0000                     _INTCON3bits	set	4080
   118  0000                     _PORTBbits	set	3969
   119  0000                     _INTCONbits	set	4082
   120  0000                     _RCSTA1bits	set	4011
   121  0000                     _TXSTA1bits	set	4012
   122  0000                     _RCREG	set	4014
   123  0000                     _TXREG	set	4013
   124  0000                     _PIR1bits	set	3998
   125  0000                     _RCSTAbits	set	4011
   126  0000                     _TXSTAbits	set	4012
   127  0000                     _SPBRG	set	4015
   128  0000                     _TRISCbits	set	3988
   129  0000                     _TMR2ON	set	32338
   130                           
   131                           	psect	smallconst
   132  000800                     __psmallconst:
   133                           	opt callstack 0
   134  000800  00                 	db	0
   135  000801                     STR_5:
   136  000801  54                 	db	84	;'T'
   137  000802  6F                 	db	111	;'o'
   138  000803  75                 	db	117	;'u'
   139  000804  63                 	db	99	;'c'
   140  000805  68                 	db	104	;'h'
   141  000806  20                 	db	32
   142  000807  49                 	db	73	;'I'
   143  000808  6E                 	db	110	;'n'
   144  000809  73                 	db	115	;'s'
   145  00080A  74                 	db	116	;'t'
   146  00080B  72                 	db	114	;'r'
   147  00080C  75                 	db	117	;'u'
   148  00080D  63                 	db	99	;'c'
   149  00080E  63                 	db	99	;'c'
   150  00080F  74                 	db	116	;'t'
   151  000810  69                 	db	105	;'i'
   152  000811  6F                 	db	111	;'o'
   153  000812  6E                 	db	110	;'n'
   154  000813  20                 	db	32
   155  000814  69                 	db	105	;'i'
   156  000815  73                 	db	115	;'s'
   157  000816  20                 	db	32
   158  000817  6E                 	db	110	;'n'
   159  000818  6F                 	db	111	;'o'
   160  000819  74                 	db	116	;'t'
   161  00081A  20                 	db	32
   162  00081B  72                 	db	114	;'r'
   163  00081C  65                 	db	101	;'e'
   164  00081D  63                 	db	99	;'c'
   165  00081E  6F                 	db	111	;'o'
   166  00081F  67                 	db	103	;'g'
   167  000820  6E                 	db	110	;'n'
   168  000821  69                 	db	105	;'i'
   169  000822  7A                 	db	122	;'z'
   170  000823  65                 	db	101	;'e'
   171  000824  64                 	db	100	;'d'
   172  000825  00                 	db	0
   173  000826                     STR_4:
   174  000826  46                 	db	70	;'F'
   175  000827  72                 	db	114	;'r'
   176  000828  61                 	db	97	;'a'
   177  000829  6D                 	db	109	;'m'
   178  00082A  65                 	db	101	;'e'
   179  00082B  73                 	db	115	;'s'
   180  00082C  20                 	db	32
   181  00082D  61                 	db	97	;'a'
   182  00082E  72                 	db	114	;'r'
   183  00082F  65                 	db	101	;'e'
   184  000830  20                 	db	32
   185  000831  6E                 	db	110	;'n'
   186  000832  6F                 	db	111	;'o'
   187  000833  74                 	db	116	;'t'
   188  000834  20                 	db	32
   189  000835  69                 	db	105	;'i'
   190  000836  6E                 	db	110	;'n'
   191  000837  73                 	db	115	;'s'
   192  000838  65                 	db	101	;'e'
   193  000839  72                 	db	114	;'r'
   194  00083A  74                 	db	116	;'t'
   195  00083B  65                 	db	101	;'e'
   196  00083C  64                 	db	100	;'d'
   197  00083D  20                 	db	32
   198  00083E  63                 	db	99	;'c'
   199  00083F  6F                 	db	111	;'o'
   200  000840  72                 	db	114	;'r'
   201  000841  72                 	db	114	;'r'
   202  000842  65                 	db	101	;'e'
   203  000843  63                 	db	99	;'c'
   204  000844  74                 	db	116	;'t'
   205  000845  6C                 	db	108	;'l'
   206  000846  79                 	db	121	;'y'
   207  000847  00                 	db	0
   208  000848                     STR_3:
   209  000848  43                 	db	67	;'C'
   210  000849  6F                 	db	111	;'o'
   211  00084A  6D                 	db	109	;'m'
   212  00084B  6D                 	db	109	;'m'
   213  00084C  61                 	db	97	;'a'
   214  00084D  6E                 	db	110	;'n'
   215  00084E  64                 	db	100	;'d'
   216  00084F  73                 	db	115	;'s'
   217  000850  20                 	db	32
   218  000851  77                 	db	119	;'w'
   219  000852  65                 	db	101	;'e'
   220  000853  72                 	db	114	;'r'
   221  000854  65                 	db	101	;'e'
   222  000855  20                 	db	32
   223  000856  6E                 	db	110	;'n'
   224  000857  6F                 	db	111	;'o'
   225  000858  74                 	db	116	;'t'
   226  000859  20                 	db	32
   227  00085A  72                 	db	114	;'r'
   228  00085B  65                 	db	101	;'e'
   229  00085C  63                 	db	99	;'c'
   230  00085D  6F                 	db	111	;'o'
   231  00085E  67                 	db	103	;'g'
   232  00085F  6E                 	db	110	;'n'
   233  000860  69                 	db	105	;'i'
   234  000861  7A                 	db	122	;'z'
   235  000862  65                 	db	101	;'e'
   236  000863  64                 	db	100	;'d'
   237  000864  00                 	db	0
   238  000865                     STR_6:
   239  000865  53                 	db	83	;'S'
   240  000866  75                 	db	117	;'u'
   241  000867  72                 	db	114	;'r'
   242  000868  70                 	db	112	;'p'
   243  000869  61                 	db	97	;'a'
   244  00086A  73                 	db	115	;'s'
   245  00086B  73                 	db	115	;'s'
   246  00086C  65                 	db	101	;'e'
   247  00086D  73                 	db	115	;'s'
   248  00086E  20                 	db	32
   249  00086F  63                 	db	99	;'c'
   250  000870  6F                 	db	111	;'o'
   251  000871  6F                 	db	111	;'o'
   252  000872  72                 	db	114	;'r'
   253  000873  64                 	db	100	;'d'
   254  000874  69                 	db	105	;'i'
   255  000875  6E                 	db	110	;'n'
   256  000876  61                 	db	97	;'a'
   257  000877  74                 	db	116	;'t'
   258  000878  65                 	db	101	;'e'
   259  000879  73                 	db	115	;'s'
   260  00087A  20                 	db	32
   261  00087B  73                 	db	115	;'s'
   262  00087C  69                 	db	105	;'i'
   263  00087D  7A                 	db	122	;'z'
   264  00087E  65                 	db	101	;'e'
   265  00087F  00                 	db	0
   266  000880                     STR_7:
   267  000880  56                 	db	86	;'V'
   268  000881  65                 	db	101	;'e'
   269  000882  72                 	db	114	;'r'
   270  000883  69                 	db	105	;'i'
   271  000884  66                 	db	102	;'f'
   272  000885  79                 	db	121	;'y'
   273  000886  20                 	db	32
   274  000887  43                 	db	67	;'C'
   275  000888  6F                 	db	111	;'o'
   276  000889  6D                 	db	109	;'m'
   277  00088A  70                 	db	112	;'p'
   278  00088B  6C                 	db	108	;'l'
   279  00088C  65                 	db	101	;'e'
   280  00088D  74                 	db	116	;'t'
   281  00088E  65                 	db	101	;'e'
   282  00088F  64                 	db	100	;'d'
   283  000890  00                 	db	0
   284  000891                     STR_2:
   285  000891  45                 	db	69	;'E'
   286  000892  6E                 	db	110	;'n'
   287  000893  74                 	db	116	;'t'
   288  000894  65                 	db	101	;'e'
   289  000895  72                 	db	114	;'r'
   290  000896  20                 	db	32
   291  000897  63                 	db	99	;'c'
   292  000898  6F                 	db	111	;'o'
   293  000899  6D                 	db	109	;'m'
   294  00089A  6D                 	db	109	;'m'
   295  00089B  61                 	db	97	;'a'
   296  00089C  6E                 	db	110	;'n'
   297  00089D  64                 	db	100	;'d'
   298  00089E  00                 	db	0
   299  00089F                     STR_1:
   300  00089F  57                 	db	87	;'W'
   301  0008A0  61                 	db	97	;'a'
   302  0008A1  69                 	db	105	;'i'
   303  0008A2  74                 	db	116	;'t'
   304  0008A3  69                 	db	105	;'i'
   305  0008A4  6E                 	db	110	;'n'
   306  0008A5  67                 	db	103	;'g'
   307  0008A6  2E                 	db	46
   308  0008A7  2E                 	db	46
   309  0008A8  2E                 	db	46
   310  0008A9  00                 	db	0
   311  0008AA                     STR_9:
   312  0008AA  53                 	db	83	;'S'
   313  0008AB  6C                 	db	108	;'l'
   314  0008AC  69                 	db	105	;'i'
   315  0008AD  64                 	db	100	;'d'
   316  0008AE  65                 	db	101	;'e'
   317  0008AF  00                 	db	0
   318  0008B0                     STR_8:
   319  0008B0  43                 	db	67	;'C'
   320  0008B1  6C                 	db	108	;'l'
   321  0008B2  69                 	db	105	;'i'
   322  0008B3  63                 	db	99	;'c'
   323  0008B4  6B                 	db	107	;'k'
   324  0008B5  00                 	db	0
   325                           
   326                           ; #config settings
   327  0008B6  00                 	db	0	; dummy byte at the end
   328  0000                     
   329                           	psect	cinit
   330  001590                     __pcinit:
   331                           	opt callstack 0
   332  001590                     start_initialization:
   333                           	opt callstack 0
   334  001590                     __initialization:
   335                           	opt callstack 0
   336                           
   337                           ; Clear objects allocated to COMRAM (25 bytes)
   338  001590  EE00  F024         	lfsr	0,__pbssCOMRAM
   339  001594  0E19               	movlw	25
   340  001596                     clear_0:
   341  001596  6AEE               	clrf	postinc0,c
   342  001598  06E8               	decf	wreg,f,c
   343  00159A  E1FD               	bnz	clear_0
   344  00159C                     end_of_initialization:
   345                           	opt callstack 0
   346  00159C                     __end_of__initialization:
   347                           	opt callstack 0
   348  00159C  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   349  00159E  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   350  0015A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   351  0015A2  6EF8               	movwf	tblptru,c
   352  0015A4  0100               	movlb	0
   353  0015A6  EF0E  F00A         	goto	_main	;jump to C main() function
   354                           
   355                           	psect	bssCOMRAM
   356  000024                     __pbssCOMRAM:
   357                           	opt callstack 0
   358  000024                     _FlagDirectionY:
   359                           	opt callstack 0
   360  000024                     	ds	2
   361  000026                     _FlagDirectionX:
   362                           	opt callstack 0
   363  000026                     	ds	2
   364  000028                     _StepsOnY:
   365                           	opt callstack 0
   366  000028                     	ds	2
   367  00002A                     _StepsOnX:
   368                           	opt callstack 0
   369  00002A                     	ds	2
   370  00002C                     _ons:
   371                           	opt callstack 0
   372  00002C                     	ds	2
   373  00002E                     _ActualSteps:
   374                           	opt callstack 0
   375  00002E                     	ds	2
   376  000030                     _click:
   377                           	opt callstack 0
   378  000030                     	ds	1
   379  000031                     _NextState:
   380                           	opt callstack 0
   381  000031                     	ds	1
   382  000032                     _CoordRelatY:
   383                           	opt callstack 0
   384  000032                     	ds	2
   385  000034                     _CoordRelatX:
   386                           	opt callstack 0
   387  000034                     	ds	2
   388  000036                     _cord_y:
   389                           	opt callstack 0
   390  000036                     	ds	2
   391  000038                     _cord_x:
   392                           	opt callstack 0
   393  000038                     	ds	2
   394  00003A                     _Par2:
   395                           	opt callstack 0
   396  00003A                     	ds	1
   397  00003B                     _letter:
   398                           	opt callstack 0
   399  00003B                     	ds	1
   400  00003C                     _Par1:
   401                           	opt callstack 0
   402  00003C                     	ds	1
   403                           
   404                           	psect	cstackCOMRAM
   405  000001                     __pcstackCOMRAM:
   406                           	opt callstack 0
   407  000001                     i2UARTWrite@data:
   408                           	opt callstack 0
   409  000001                     i2ContarPulsos@pasos:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x0
   413  000001                     	ds	2
   414  000003                     ??_INT_ISR:
   415  000003                     
   416                           ; 1 bytes @ 0x2
   417  000003                     	ds	1
   418  000004                     ?___wmul:
   419                           	opt callstack 0
   420  000004                     ?___lwmod:
   421                           	opt callstack 0
   422  000004                     ?___aldiv:
   423                           	opt callstack 0
   424  000004                     UARTWrite@data:
   425                           	opt callstack 0
   426  000004                     UARTRead@Lecture:
   427                           	opt callstack 0
   428  000004                     ContarPulsos@pasos:
   429                           	opt callstack 0
   430  000004                     ___wmul@multiplier:
   431                           	opt callstack 0
   432  000004                     ___lwmod@dividend:
   433                           	opt callstack 0
   434  000004                     ___aldiv@dividend:
   435                           	opt callstack 0
   436                           
   437                           ; 4 bytes @ 0x3
   438  000004                     	ds	1
   439  000005                     ?_coord:
   440                           	opt callstack 0
   441  000005                     coord@P1:
   442                           	opt callstack 0
   443  000005                     myPrintf@PointString:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x4
   447  000005                     	ds	1
   448  000006                     ___wmul@multiplicand:
   449                           	opt callstack 0
   450  000006                     ___lwmod@divisor:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x5
   454  000006                     	ds	1
   455  000007                     ??_myPrintf:
   456  000007                     coord@L:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x6
   460  000007                     	ds	1
   461  000008                     ___lwmod@counter:
   462                           	opt callstack 0
   463  000008                     ___wmul@product:
   464                           	opt callstack 0
   465  000008                     ___aldiv@divisor:
   466                           	opt callstack 0
   467                           
   468                           ; 4 bytes @ 0x7
   469  000008                     	ds	1
   470  000009                     ?___lwdiv:
   471                           	opt callstack 0
   472  000009                     myPrintf@i:
   473                           	opt callstack 0
   474  000009                     coord@x:
   475                           	opt callstack 0
   476  000009                     ___lwdiv@dividend:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480  000009                     	ds	1
   481  00000A                     ??_Movement:
   482  00000A                     
   483                           ; 1 bytes @ 0x9
   484  00000A                     	ds	1
   485  00000B                     coord@y:
   486                           	opt callstack 0
   487  00000B                     ___lwdiv@divisor:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0xA
   491  00000B                     	ds	1
   492  00000C                     ___aldiv@counter:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0xB
   496  00000C                     	ds	1
   497  00000D                     ___aldiv@sign:
   498                           	opt callstack 0
   499  00000D                     coord@P2:
   500                           	opt callstack 0
   501  00000D                     ___lwdiv@quotient:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0xC
   505  00000D                     	ds	1
   506  00000E                     ___aldiv@quotient:
   507                           	opt callstack 0
   508                           
   509                           ; 4 bytes @ 0xD
   510  00000E                     	ds	1
   511  00000F                     ??_coord:
   512  00000F                     ___lwdiv@counter:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0xE
   516  00000F                     	ds	1
   517  000010                     PrintMyActulPosition@a:
   518                           	opt callstack 0
   519                           
   520                           ; 3 bytes @ 0xF
   521  000010                     	ds	2
   522  000012                     UARTConfi@BAUD:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x11
   526  000012                     	ds	1
   527  000013                     PrintMyActulPosition@b:
   528                           	opt callstack 0
   529  000013                     coord@buffer:
   530                           	opt callstack 0
   531                           
   532                           ; 9 bytes @ 0x12
   533  000013                     	ds	1
   534  000014                     _UARTConfi$1999:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0x13
   538  000014                     	ds	2
   539  000016                     _PrintMyActulPosition$2000:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x15
   543  000016                     	ds	2
   544  000018                     PrintMyActulPosition@i:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x17
   548  000018                     	ds	2
   549  00001A                     PrintMyActulPosition@i_806:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x19
   553  00001A                     	ds	2
   554  00001C                     coord@read:
   555                           	opt callstack 0
   556                           
   557                           ; 1 bytes @ 0x1B
   558  00001C                     	ds	2
   559  00001E                     coord@counterRevision:
   560                           	opt callstack 0
   561                           
   562                           ; 1 bytes @ 0x1D
   563  00001E                     	ds	1
   564  00001F                     coord@i:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x1E
   568  00001F                     	ds	2
   569  000021                     coord@n:
   570                           	opt callstack 0
   571                           
   572                           ; 1 bytes @ 0x20
   573  000021                     	ds	1
   574  000022                     ??_verification:
   575  000022                     
   576                           ; 1 bytes @ 0x21
   577  000022                     	ds	2
   578  000024                     
   579                           ; 1 bytes @ 0x23
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 45 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   599 ;;      Params:         0       0       0       0       0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels required when called:    8
   605 ;; This function calls:
   606 ;;		_Configuracion
   607 ;;		_Movement
   608 ;;		_PrintMyActulPosition
   609 ;;		_verification
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616  00141C                     __ptext0:
   617                           	opt callstack 0
   618  00141C                     _main:
   619                           	opt callstack 23
   620  00141C                     
   621                           ;main.c: 47:     Configuracion();
   622  00141C  EC19  F009         	call	_Configuracion	;wreg free
   623  001420                     
   624                           ;main.c: 49:     CoordAntX=1;
   625  001420  0E00               	movlw	0
   626  001422  6E40               	movwf	(_CoordAntX+1)^0,c
   627  001424  0E01               	movlw	1
   628  001426  6E3F               	movwf	_CoordAntX^0,c
   629  001428                     
   630                           ;main.c: 50:     CoordAntY=1;
   631  001428  0E00               	movlw	0
   632  00142A  6E3E               	movwf	(_CoordAntY+1)^0,c
   633  00142C  0E01               	movlw	1
   634  00142E  6E3D               	movwf	_CoordAntY^0,c
   635  001430                     
   636                           ;main.c: 51:     PORTDbits.RD2=1;
   637  001430  8483               	bsf	131,2,c	;volatile
   638  001432                     
   639                           ;main.c: 52:     PORTDbits.RD3=1;
   640  001432  8683               	bsf	131,3,c	;volatile
   641  001434                     l2473:
   642                           
   643                           ;main.c: 59:     {;main.c: 60:         ControlFlagVerification = 1;
   644  001434  0E00               	movlw	0
   645  001436  6E42               	movwf	(_ControlFlagVerification+1)^0,c
   646  001438  0E01               	movlw	1
   647  00143A  6E41               	movwf	_ControlFlagVerification^0,c
   648  00143C                     
   649                           ;main.c: 61:         verification();
   650  00143C  EC3B  F007         	call	_verification	;wreg free
   651  001440                     
   652                           ;main.c: 62:         PrintMyActulPosition();
   653  001440  ECF9  F005         	call	_PrintMyActulPosition	;wreg free
   654  001444                     
   655                           ;main.c: 63:         Movement();
   656  001444  EC81  F008         	call	_Movement	;wreg free
   657  001448                     
   658                           ;main.c: 64:         PrintMyActulPosition();
   659  001448  ECF9  F005         	call	_PrintMyActulPosition	;wreg free
   660  00144C  EF1A  F00A         	goto	l2473
   661  001450  EF07  F000         	goto	start
   662  001454                     __end_of_main:
   663                           	opt callstack 0
   664                           
   665 ;; *************** function _verification *****************
   666 ;; Defined at:
   667 ;;		line 15 in file "verification.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   681 ;;      Params:         0       0       0       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0       0       0
   683 ;;      Temps:          2       0       0       0       0       0       0       0       0
   684 ;;      Totals:         2       0       0       0       0       0       0       0       0
   685 ;;Total ram usage:        2 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    7
   688 ;; This function calls:
   689 ;;		_Coord_Validated
   690 ;;		_Ins_Validated
   691 ;;		_Par_Validated
   692 ;;		_cmd
   693 ;;		_end
   694 ;;		_start
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  000E76                     __ptext1:
   702                           	opt callstack 0
   703  000E76                     _verification:
   704                           	opt callstack 23
   705  000E76                     
   706                           ;verification.c: 17:     NextState = iddle_State;
   707  000E76  0E00               	movlw	0
   708  000E78  6E31               	movwf	_NextState^0,c
   709                           
   710                           ;verification.c: 18:     while(ControlFlagVerification == 1)
   711  000E7A  EF85  F007         	goto	l2373
   712  000E7E                     l2355:
   713                           
   714                           ;verification.c: 23:                 NextState= start();
   715  000E7E  ECE2  F00A         	call	_start	;wreg free
   716  000E82  6E31               	movwf	_NextState^0,c
   717                           
   718                           ;verification.c: 24:             };verification.c: 25:                 break;
   719  000E84  EF85  F007         	goto	l2373
   720  000E88                     l2357:
   721                           
   722                           ;verification.c: 28:                 NextState=cmd();
   723  000E88  EC4B  F008         	call	_cmd	;wreg free
   724  000E8C  6E31               	movwf	_NextState^0,c
   725                           
   726                           ;verification.c: 29:             };verification.c: 30:                 break;
   727  000E8E  EF85  F007         	goto	l2373
   728  000E92                     l2359:
   729                           
   730                           ;verification.c: 33:                 NextState=Par_Validated();
   731  000E92  ECEE  F009         	call	_Par_Validated	;wreg free
   732  000E96  6E31               	movwf	_NextState^0,c
   733                           
   734                           ;verification.c: 34:             };verification.c: 35:                 break;
   735  000E98  EF85  F007         	goto	l2373
   736  000E9C                     l2361:
   737                           
   738                           ;verification.c: 38:                 NextState=Ins_Validated();
   739  000E9C  ECA4  F009         	call	_Ins_Validated	;wreg free
   740  000EA0  6E31               	movwf	_NextState^0,c
   741                           
   742                           ;verification.c: 39:             };verification.c: 40:                 break;
   743  000EA2  EF85  F007         	goto	l2373
   744  000EA6                     l2363:
   745                           
   746                           ;verification.c: 43:                 NextState=Coord_Validated();
   747  000EA6  ECCA  F009         	call	_Coord_Validated	;wreg free
   748  000EAA  6E31               	movwf	_NextState^0,c
   749                           
   750                           ;verification.c: 44:             };verification.c: 45:                 break;
   751  000EAC  EF85  F007         	goto	l2373
   752  000EB0                     l2365:
   753                           
   754                           ;verification.c: 48:                 end();
   755  000EB0  EC99  F00A         	call	_end	;wreg free
   756                           
   757                           ;verification.c: 49:             };verification.c: 50:                 break;
   758  000EB4  EF85  F007         	goto	l2373
   759  000EB8                     l2367:
   760                           
   761                           ;verification.c: 53:                 NextState = wait_cmd_State;
   762  000EB8  0E01               	movlw	1
   763  000EBA  6E31               	movwf	_NextState^0,c
   764                           
   765                           ;verification.c: 54:             };verification.c: 55:                 break;
   766  000EBC  EF85  F007         	goto	l2373
   767  000EC0                     l2371:
   768  000EC0  5031               	movf	_NextState^0,w,c
   769  000EC2  6E22               	movwf	??_verification^0,c
   770  000EC4  6A23               	clrf	(??_verification+1)^0,c
   771                           
   772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   773                           ; Switch size 1, requested type "simple"
   774                           ; Number of cases is 1, Range of values is 0 to 0
   775                           ; switch strategies available:
   776                           ; Name         Instructions Cycles
   777                           ; simple_byte            4     3 (average)
   778                           ;	Chosen strategy is simple_byte
   779  000EC6  5023               	movf	(??_verification+1)^0,w,c
   780  000EC8  0A00               	xorlw	0	; case 0
   781  000ECA  B4D8               	btfsc	status,2,c
   782  000ECC  EF6A  F007         	goto	l2487
   783  000ED0  EF5C  F007         	goto	l2367
   784  000ED4                     l2487:
   785                           
   786                           ; Switch size 1, requested type "simple"
   787                           ; Number of cases is 6, Range of values is 0 to 5
   788                           ; switch strategies available:
   789                           ; Name         Instructions Cycles
   790                           ; simple_byte           19    10 (average)
   791                           ;	Chosen strategy is simple_byte
   792  000ED4  5022               	movf	??_verification^0,w,c
   793  000ED6  0A00               	xorlw	0	; case 0
   794  000ED8  B4D8               	btfsc	status,2,c
   795  000EDA  EF3F  F007         	goto	l2355
   796  000EDE  0A01               	xorlw	1	; case 1
   797  000EE0  B4D8               	btfsc	status,2,c
   798  000EE2  EF44  F007         	goto	l2357
   799  000EE6  0A03               	xorlw	3	; case 2
   800  000EE8  B4D8               	btfsc	status,2,c
   801  000EEA  EF49  F007         	goto	l2359
   802  000EEE  0A01               	xorlw	1	; case 3
   803  000EF0  B4D8               	btfsc	status,2,c
   804  000EF2  EF4E  F007         	goto	l2361
   805  000EF6  0A07               	xorlw	7	; case 4
   806  000EF8  B4D8               	btfsc	status,2,c
   807  000EFA  EF53  F007         	goto	l2363
   808  000EFE  0A01               	xorlw	1	; case 5
   809  000F00  B4D8               	btfsc	status,2,c
   810  000F02  EF58  F007         	goto	l2365
   811  000F06  EF5C  F007         	goto	l2367
   812  000F0A                     l2373:
   813                           
   814                           ;verification.c: 18:     while(ControlFlagVerification == 1)
   815  000F0A  0441               	decf	_ControlFlagVerification^0,w,c
   816  000F0C  1042               	iorwf	(_ControlFlagVerification+1)^0,w,c
   817  000F0E  B4D8               	btfsc	status,2,c
   818  000F10  EF8C  F007         	goto	u1121
   819  000F14  EF8E  F007         	goto	u1120
   820  000F18                     u1121:
   821  000F18  EF60  F007         	goto	l2371
   822  000F1C                     u1120:
   823  000F1C  0012               	return		;funcret
   824  000F1E                     __end_of_verification:
   825                           	opt callstack 0
   826                           
   827 ;; *************** function _start *****************
   828 ;; Defined at:
   829 ;;		line 15 in file "cases.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      unsigned char 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   843 ;;      Params:         0       0       0       0       0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0
   846 ;;      Totals:         0       0       0       0       0       0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    6
   850 ;; This function calls:
   851 ;;		_UARTWrite
   852 ;;		_myPrintf
   853 ;; This function is called by:
   854 ;;		_verification
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text2
   859  0015C4                     __ptext2:
   860                           	opt callstack 0
   861  0015C4                     _start:
   862                           	opt callstack 23
   863  0015C4                     
   864                           ;cases.c: 17:     UARTWrite(0x0D);
   865  0015C4  0E0D               	movlw	13
   866  0015C6  ECED  F00A         	call	_UARTWrite
   867  0015CA                     
   868                           ;cases.c: 18:     myPrintf("Waiting...");
   869  0015CA  0E9F               	movlw	low STR_1
   870  0015CC  6E05               	movwf	myPrintf@PointString^0,c
   871  0015CE  0E08               	movlw	high STR_1
   872  0015D0  6E06               	movwf	(myPrintf@PointString+1)^0,c
   873  0015D2  ECE9  F008         	call	_myPrintf	;wreg free
   874  0015D6                     
   875                           ;cases.c: 19:     return wait_cmd_State;
   876  0015D6  0E01               	movlw	1
   877  0015D8  0012               	return		;funcret
   878  0015DA                     __end_of_start:
   879                           	opt callstack 0
   880                           
   881 ;; *************** function _end *****************
   882 ;; Defined at:
   883 ;;		line 111 in file "cases.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   897 ;;      Params:         0       0       0       0       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    6
   904 ;; This function calls:
   905 ;;		_UARTWrite
   906 ;;		_myPrintf
   907 ;; This function is called by:
   908 ;;		_verification
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text3
   913  001532                     __ptext3:
   914                           	opt callstack 0
   915  001532                     _end:
   916                           	opt callstack 23
   917  001532                     
   918                           ;cases.c: 113:     UARTWrite(0x0D);
   919  001532  0E0D               	movlw	13
   920  001534  ECED  F00A         	call	_UARTWrite
   921  001538                     
   922                           ;cases.c: 115:         myPrintf("Verify Completed");
   923  001538  0E80               	movlw	low STR_7
   924  00153A  6E05               	movwf	myPrintf@PointString^0,c
   925  00153C  0E08               	movlw	high STR_7
   926  00153E  6E06               	movwf	(myPrintf@PointString+1)^0,c
   927  001540  ECE9  F008         	call	_myPrintf	;wreg free
   928  001544                     
   929                           ;cases.c: 116:         UARTWrite(0x0A);
   930  001544  0E0A               	movlw	10
   931  001546  ECED  F00A         	call	_UARTWrite
   932  00154A                     
   933                           ;cases.c: 121:     ControlFlagVerification = 0;
   934  00154A  0E00               	movlw	0
   935  00154C  6E42               	movwf	(_ControlFlagVerification+1)^0,c
   936  00154E  0E00               	movlw	0
   937  001550  6E41               	movwf	_ControlFlagVerification^0,c
   938  001552  0012               	return		;funcret
   939  001554                     __end_of_end:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function _cmd *****************
   943 ;; Defined at:
   944 ;;		line 22 in file "cases.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      unsigned char 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    6
   965 ;; This function calls:
   966 ;;		_UARTWrite
   967 ;;		_coord
   968 ;;		_myPrintf
   969 ;; This function is called by:
   970 ;;		_verification
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text4
   975  001096                     __ptext4:
   976                           	opt callstack 0
   977  001096                     _cmd:
   978                           	opt callstack 23
   979  001096                     
   980                           ;cases.c: 24:     UARTWrite(0x0D);
   981  001096  0E0D               	movlw	13
   982  001098  ECED  F00A         	call	_UARTWrite
   983  00109C                     
   984                           ;cases.c: 25:     myPrintf("Enter command");
   985  00109C  0E91               	movlw	low STR_2
   986  00109E  6E05               	movwf	myPrintf@PointString^0,c
   987  0010A0  0E08               	movlw	high STR_2
   988  0010A2  6E06               	movwf	(myPrintf@PointString+1)^0,c
   989  0010A4  ECE9  F008         	call	_myPrintf	;wreg free
   990  0010A8                     
   991                           ;cases.c: 27:     if(coord(&Par1,&letter,&cord_x, &cord_y, &Par2) == 1)
   992  0010A8  0E3C               	movlw	low _Par1
   993  0010AA  6E05               	movwf	coord@P1^0,c
   994  0010AC  0E00               	movlw	high _Par1
   995  0010AE  6E06               	movwf	(coord@P1+1)^0,c
   996  0010B0  0E3B               	movlw	low _letter
   997  0010B2  6E07               	movwf	coord@L^0,c
   998  0010B4  0E00               	movlw	high _letter
   999  0010B6  6E08               	movwf	(coord@L+1)^0,c
  1000  0010B8  0E38               	movlw	low _cord_x
  1001  0010BA  6E09               	movwf	coord@x^0,c
  1002  0010BC  0E00               	movlw	high _cord_x
  1003  0010BE  6E0A               	movwf	(coord@x+1)^0,c
  1004  0010C0  0E36               	movlw	low _cord_y
  1005  0010C2  6E0B               	movwf	coord@y^0,c
  1006  0010C4  0E00               	movlw	high _cord_y
  1007  0010C6  6E0C               	movwf	(coord@y+1)^0,c
  1008  0010C8  0E3A               	movlw	low _Par2
  1009  0010CA  6E0D               	movwf	coord@P2^0,c
  1010  0010CC  0E00               	movlw	high _Par2
  1011  0010CE  6E0E               	movwf	(coord@P2+1)^0,c
  1012  0010D0  EC5C  F004         	call	_coord	;wreg free
  1013  0010D4  0405               	decf	?_coord^0,w,c
  1014  0010D6  1006               	iorwf	(?_coord+1)^0,w,c
  1015  0010D8  A4D8               	btfss	status,2,c
  1016  0010DA  EF71  F008         	goto	u881
  1017  0010DE  EF73  F008         	goto	u880
  1018  0010E2                     u881:
  1019  0010E2  EF76  F008         	goto	l2097
  1020  0010E6                     u880:
  1021  0010E6                     
  1022                           ;cases.c: 28:     {;cases.c: 29:         return validate_Par_State;
  1023  0010E6  0E02               	movlw	2
  1024  0010E8  EF80  F008         	goto	l49
  1025  0010EC                     l2097:
  1026                           
  1027                           ;cases.c: 32:     {;cases.c: 34:         myPrintf("Commands were not recognized");
  1028  0010EC  0E48               	movlw	low STR_3
  1029  0010EE  6E05               	movwf	myPrintf@PointString^0,c
  1030  0010F0  0E08               	movlw	high STR_3
  1031  0010F2  6E06               	movwf	(myPrintf@PointString+1)^0,c
  1032  0010F4  ECE9  F008         	call	_myPrintf	;wreg free
  1033  0010F8                     
  1034                           ;cases.c: 35:         UARTWrite(0x0A);
  1035  0010F8  0E0A               	movlw	10
  1036  0010FA  ECED  F00A         	call	_UARTWrite
  1037  0010FE                     
  1038                           ;cases.c: 40:         return wait_cmd_State;
  1039  0010FE  0E01               	movlw	1
  1040  001100                     l49:
  1041  001100  0012               	return		;funcret
  1042  001102                     __end_of_cmd:
  1043                           	opt callstack 0
  1044                           
  1045 ;; *************** function _coord *****************
  1046 ;; Defined at:
  1047 ;;		line 14 in file "coordenadas.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  P1              2    4[COMRAM] PTR unsigned char 
  1050 ;;		 -> Par1(1), 
  1051 ;;  L               2    6[COMRAM] PTR unsigned char 
  1052 ;;		 -> letter(1), 
  1053 ;;  x               2    8[COMRAM] PTR unsigned short 
  1054 ;;		 -> cord_x(2), 
  1055 ;;  y               2   10[COMRAM] PTR unsigned short 
  1056 ;;		 -> cord_y(2), 
  1057 ;;  P2              2   12[COMRAM] PTR unsigned char 
  1058 ;;		 -> Par2(1), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  n               1   32[COMRAM] unsigned char 
  1061 ;;  i               2   30[COMRAM] int 
  1062 ;;  buffer          9   18[COMRAM] unsigned char [9]
  1063 ;;  counterRevis    1   29[COMRAM] unsigned char 
  1064 ;;  flagBuffer      1    0        unsigned char 
  1065 ;;  read            1   27[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2    4[COMRAM] int 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:        10       0       0       0       0       0       0       0       0
  1076 ;;      Locals:        15       0       0       0       0       0       0       0       0
  1077 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1078 ;;      Totals:        29       0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:       29 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    5
  1082 ;; This function calls:
  1083 ;;		_UARTRead
  1084 ;; This function is called by:
  1085 ;;		_cmd
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text5
  1090  0008B8                     __ptext5:
  1091                           	opt callstack 0
  1092  0008B8                     _coord:
  1093                           	opt callstack 23
  1094  0008B8                     
  1095                           ;coordenadas.c: 18:         char counterRevision = 0;
  1096  0008B8  0E00               	movlw	0
  1097  0008BA  6E1E               	movwf	coord@counterRevision^0,c
  1098  0008BC                     
  1099                           ;coordenadas.c: 20:         RCSTAbits.CREN = 1;
  1100  0008BC  88AB               	bsf	171,4,c	;volatile
  1101                           
  1102                           ;coordenadas.c: 22:         for(int i=StartCommandCharacter; i<(EndCommandCharacter+1); 
      +                          i++){
  1103  0008BE  0E00               	movlw	0
  1104  0008C0  6E20               	movwf	(coord@i+1)^0,c
  1105  0008C2  0E00               	movlw	0
  1106  0008C4  6E1F               	movwf	coord@i^0,c
  1107  0008C6                     l1957:
  1108                           
  1109                           ;coordenadas.c: 23:             read= UARTRead();
  1110  0008C6  ECD5  F00A         	call	_UARTRead	;wreg free
  1111  0008CA  6E1C               	movwf	coord@read^0,c
  1112  0008CC                     
  1113                           ;coordenadas.c: 24:             buffer[i]=read;
  1114  0008CC  0E13               	movlw	low coord@buffer
  1115  0008CE  241F               	addwf	coord@i^0,w,c
  1116  0008D0  6ED9               	movwf	fsr2l,c
  1117  0008D2  0E00               	movlw	high coord@buffer
  1118  0008D4  2020               	addwfc	(coord@i+1)^0,w,c
  1119  0008D6  6EDA               	movwf	fsr2h,c
  1120  0008D8  C01C  FFDF         	movff	coord@read,indf2
  1121  0008DC                     
  1122                           ;coordenadas.c: 27:             if(i == (EndCommandCharacter))
  1123  0008DC  0E08               	movlw	8
  1124  0008DE  181F               	xorwf	coord@i^0,w,c
  1125  0008E0  1020               	iorwf	(coord@i+1)^0,w,c
  1126  0008E2  A4D8               	btfss	status,2,c
  1127  0008E4  EF76  F004         	goto	u721
  1128  0008E8  EF78  F004         	goto	u720
  1129  0008EC                     u721:
  1130  0008EC  EF79  F004         	goto	l1965
  1131  0008F0                     u720:
  1132  0008F0                     
  1133                           ;coordenadas.c: 28:             {;coordenadas.c: 29:                 RCSTAbits.CREN = 0;
  1134  0008F0  98AB               	bcf	171,4,c	;volatile
  1135  0008F2                     l1965:
  1136                           
  1137                           ;coordenadas.c: 31:         }
  1138  0008F2  4A1F               	infsnz	coord@i^0,f,c
  1139  0008F4  2A20               	incf	(coord@i+1)^0,f,c
  1140  0008F6  BE20               	btfsc	(coord@i+1)^0,7,c
  1141  0008F8  EF87  F004         	goto	u731
  1142  0008FC  5020               	movf	(coord@i+1)^0,w,c
  1143  0008FE  E109               	bnz	u730
  1144  000900  0E09               	movlw	9
  1145  000902  5C1F               	subwf	coord@i^0,w,c
  1146  000904  A0D8               	btfss	status,0,c
  1147  000906  EF87  F004         	goto	u731
  1148  00090A  EF89  F004         	goto	u730
  1149  00090E                     u731:
  1150  00090E  EF63  F004         	goto	l1957
  1151  000912                     u730:
  1152  000912                     
  1153                           ;coordenadas.c: 33:         if(RCSTAbits.OERR == 1)
  1154  000912  A2AB               	btfss	171,1,c	;volatile
  1155  000914  EF8E  F004         	goto	u741
  1156  000918  EF90  F004         	goto	u740
  1157  00091C                     u741:
  1158  00091C  EF9C  F004         	goto	l1977
  1159  000920                     u740:
  1160  000920                     
  1161                           ;coordenadas.c: 34:         {;coordenadas.c: 35:             TXSTA1bits.TXEN = 0;
  1162  000920  9AAC               	bcf	172,5,c	;volatile
  1163                           
  1164                           ;coordenadas.c: 36:             RCSTA1bits.CREN = 0;
  1165  000922  98AB               	bcf	171,4,c	;volatile
  1166  000924                     
  1167                           ;coordenadas.c: 37:             _delay((unsigned long)((15)*(8000000L/4000.0)));
  1168  000924  0E27               	movlw	39
  1169  000926  6E0F               	movwf	??_coord^0,c
  1170  000928  0EF5               	movlw	245
  1171  00092A                     u1247:
  1172  00092A  2EE8               	decfsz	wreg,f,c
  1173  00092C  D7FE               	bra	u1247
  1174  00092E  2E0F               	decfsz	??_coord^0,f,c
  1175  000930  D7FC               	bra	u1247
  1176  000932  F000               	nop	
  1177  000934                     
  1178                           ;coordenadas.c: 38:             TXSTA1bits.TXEN = 1;
  1179  000934  8AAC               	bsf	172,5,c	;volatile
  1180  000936                     
  1181                           ;coordenadas.c: 39:             RCSTA1bits.CREN = 1;
  1182  000936  88AB               	bsf	171,4,c	;volatile
  1183  000938                     l1977:
  1184                           
  1185                           ;coordenadas.c: 42:         *P1= buffer[StartCommandCharacter];
  1186  000938  C005  FFD9         	movff	coord@P1,fsr2l
  1187  00093C  C006  FFDA         	movff	coord@P1+1,fsr2h
  1188  000940  C013  FFDF         	movff	coord@buffer,indf2
  1189  000944                     
  1190                           ;coordenadas.c: 43:         *L= buffer[InstructionCharacter];
  1191  000944  C007  FFD9         	movff	coord@L,fsr2l
  1192  000948  C008  FFDA         	movff	coord@L+1,fsr2h
  1193  00094C  C014  FFDF         	movff	coord@buffer+1,indf2
  1194  000950                     
  1195                           ;coordenadas.c: 44:         *P2= buffer[EndCommandCharacter];
  1196  000950  C00D  FFD9         	movff	coord@P2,fsr2l
  1197  000954  C00E  FFDA         	movff	coord@P2+1,fsr2h
  1198  000958  C01B  FFDF         	movff	coord@buffer+8,indf2
  1199  00095C                     
  1200                           ;coordenadas.c: 46:         for(char n=CharacterX1; n<(CharacterY3+1); n++)
  1201  00095C  0E02               	movlw	2
  1202  00095E  6E21               	movwf	coord@n^0,c
  1203  000960                     l1989:
  1204                           
  1205                           ;coordenadas.c: 47:         {;coordenadas.c: 48:             if(buffer[n] <= 57 && buffe
      +                          r[n] >= 48)
  1206  000960  0E13               	movlw	low coord@buffer
  1207  000962  2421               	addwf	coord@n^0,w,c
  1208  000964  6ED9               	movwf	fsr2l,c
  1209  000966  6ADA               	clrf	fsr2h,c
  1210  000968  0E00               	movlw	high coord@buffer
  1211  00096A  22DA               	addwfc	fsr2h,f,c
  1212  00096C  0E3A               	movlw	58
  1213  00096E  60DF               	cpfslt	indf2,c
  1214  000970  EFBC  F004         	goto	u751
  1215  000974  EFBE  F004         	goto	u750
  1216  000978                     u751:
  1217  000978  EFCD  F004         	goto	l190
  1218  00097C                     u750:
  1219  00097C  0E13               	movlw	low coord@buffer
  1220  00097E  2421               	addwf	coord@n^0,w,c
  1221  000980  6ED9               	movwf	fsr2l,c
  1222  000982  6ADA               	clrf	fsr2h,c
  1223  000984  0E00               	movlw	high coord@buffer
  1224  000986  22DA               	addwfc	fsr2h,f,c
  1225  000988  0E2F               	movlw	47
  1226  00098A  64DF               	cpfsgt	indf2,c
  1227  00098C  EFCA  F004         	goto	u761
  1228  000990  EFCC  F004         	goto	u760
  1229  000994                     u761:
  1230  000994  EFCD  F004         	goto	l190
  1231  000998                     u760:
  1232  000998                     
  1233                           ;coordenadas.c: 49:             {;coordenadas.c: 50:                 counterRevision++;
  1234  000998  2A1E               	incf	coord@counterRevision^0,f,c
  1235  00099A                     l190:
  1236                           
  1237                           ;coordenadas.c: 52:         }
  1238  00099A  2A21               	incf	coord@n^0,f,c
  1239  00099C  0E07               	movlw	7
  1240  00099E  6421               	cpfsgt	coord@n^0,c
  1241  0009A0  EFD4  F004         	goto	u771
  1242  0009A4  EFD6  F004         	goto	u770
  1243  0009A8                     u771:
  1244  0009A8  EFB0  F004         	goto	l1989
  1245  0009AC                     u770:
  1246  0009AC                     
  1247                           ;coordenadas.c: 53:             if(counterRevision == 6)
  1248  0009AC  0E06               	movlw	6
  1249  0009AE  181E               	xorwf	coord@counterRevision^0,w,c
  1250  0009B0  A4D8               	btfss	status,2,c
  1251  0009B2  EFDD  F004         	goto	u781
  1252  0009B6  EFDF  F004         	goto	u780
  1253  0009BA                     u781:
  1254  0009BA  EFE1  F004         	goto	l2001
  1255  0009BE                     u780:
  1256  0009BE                     
  1257                           ;coordenadas.c: 56:             }
  1258  0009BE  EFE7  F004         	goto	l2005
  1259  0009C2                     l2001:
  1260                           
  1261                           ;coordenadas.c: 59:             {;coordenadas.c: 60:                 return 0;
  1262  0009C2  0E00               	movlw	0
  1263  0009C4  6E06               	movwf	(?_coord+1)^0,c
  1264  0009C6  0E00               	movlw	0
  1265  0009C8  6E05               	movwf	?_coord^0,c
  1266  0009CA  EF2B  F005         	goto	l193
  1267  0009CE                     l2005:
  1268  0009CE                     
  1269                           ;coordenadas.c: 64:         {;coordenadas.c: 65:             *x = 1*(buffer[CharacterX3]
      +                          -48) + 10*(buffer[CharacterX2]-48) + 100*(buffer[CharacterX1]-48);
  1270  0009CE  0E30               	movlw	48
  1271  0009D0  6E0F               	movwf	??_coord^0,c
  1272  0009D2  0EEB               	movlw	235
  1273  0009D4  6E10               	movwf	(??_coord+1)^0,c
  1274  0009D6  5015               	movf	(coord@buffer+2)^0,w,c
  1275  0009D8  0D64               	mullw	100
  1276  0009DA  CFF3 F011          	movff	prodl,??_coord+2
  1277  0009DE  CFF4 F012          	movff	prodh,??_coord+3
  1278  0009E2  5016               	movf	(coord@buffer+3)^0,w,c
  1279  0009E4  0D0A               	mullw	10
  1280  0009E6  50F3               	movf	243,w,c
  1281  0009E8  2611               	addwf	(??_coord+2)^0,f,c
  1282  0009EA  50F4               	movf	244,w,c
  1283  0009EC  2212               	addwfc	(??_coord+3)^0,f,c
  1284  0009EE  5017               	movf	(coord@buffer+4)^0,w,c
  1285  0009F0  2611               	addwf	(??_coord+2)^0,f,c
  1286  0009F2  0E00               	movlw	0
  1287  0009F4  2212               	addwfc	(??_coord+3)^0,f,c
  1288  0009F6  500F               	movf	??_coord^0,w,c
  1289  0009F8  2611               	addwf	(??_coord+2)^0,f,c
  1290  0009FA  5010               	movf	(??_coord+1)^0,w,c
  1291  0009FC  2212               	addwfc	(??_coord+3)^0,f,c
  1292  0009FE  C009  FFD9         	movff	coord@x,fsr2l
  1293  000A02  C00A  FFDA         	movff	coord@x+1,fsr2h
  1294  000A06  C011  FFDE         	movff	??_coord+2,postinc2
  1295  000A0A  C012  FFDD         	movff	??_coord+3,postdec2
  1296                           
  1297                           ;coordenadas.c: 66:             *y = 1*(buffer[CharacterY3]-48) + 10*(buffer[CharacterY2
      +                          ]-48) + 100*(buffer[CharacterY1]-48);
  1298  000A0E  0E30               	movlw	48
  1299  000A10  6E0F               	movwf	??_coord^0,c
  1300  000A12  0EEB               	movlw	235
  1301  000A14  6E10               	movwf	(??_coord+1)^0,c
  1302  000A16  5018               	movf	(coord@buffer+5)^0,w,c
  1303  000A18  0D64               	mullw	100
  1304  000A1A  CFF3 F011          	movff	prodl,??_coord+2
  1305  000A1E  CFF4 F012          	movff	prodh,??_coord+3
  1306  000A22  5019               	movf	(coord@buffer+6)^0,w,c
  1307  000A24  0D0A               	mullw	10
  1308  000A26  50F3               	movf	243,w,c
  1309  000A28  2611               	addwf	(??_coord+2)^0,f,c
  1310  000A2A  50F4               	movf	244,w,c
  1311  000A2C  2212               	addwfc	(??_coord+3)^0,f,c
  1312  000A2E  501A               	movf	(coord@buffer+7)^0,w,c
  1313  000A30  2611               	addwf	(??_coord+2)^0,f,c
  1314  000A32  0E00               	movlw	0
  1315  000A34  2212               	addwfc	(??_coord+3)^0,f,c
  1316  000A36  500F               	movf	??_coord^0,w,c
  1317  000A38  2611               	addwf	(??_coord+2)^0,f,c
  1318  000A3A  5010               	movf	(??_coord+1)^0,w,c
  1319  000A3C  2212               	addwfc	(??_coord+3)^0,f,c
  1320  000A3E  C00B  FFD9         	movff	coord@y,fsr2l
  1321  000A42  C00C  FFDA         	movff	coord@y+1,fsr2h
  1322  000A46  C011  FFDE         	movff	??_coord+2,postinc2
  1323  000A4A  C012  FFDD         	movff	??_coord+3,postdec2
  1324  000A4E                     
  1325                           ;coordenadas.c: 68:             return 1;
  1326  000A4E  0E00               	movlw	0
  1327  000A50  6E06               	movwf	(?_coord+1)^0,c
  1328  000A52  0E01               	movlw	1
  1329  000A54  6E05               	movwf	?_coord^0,c
  1330  000A56                     l193:
  1331  000A56  0012               	return		;funcret
  1332  000A58                     __end_of_coord:
  1333                           	opt callstack 0
  1334                           
  1335 ;; *************** function _UARTRead *****************
  1336 ;; Defined at:
  1337 ;;		line 40 in file "UART.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  Lecture         1    3[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        1 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    4
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_coord
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text6
  1366  0015AA                     __ptext6:
  1367                           	opt callstack 0
  1368  0015AA                     _UARTRead:
  1369                           	opt callstack 23
  1370  0015AA                     l132:
  1371  0015AA  AA9E               	btfss	158,5,c	;volatile
  1372  0015AC  EFDA  F00A         	goto	u21
  1373  0015B0  EFDC  F00A         	goto	u20
  1374  0015B4                     u21:
  1375  0015B4  EFD5  F00A         	goto	l132
  1376  0015B8                     u20:
  1377  0015B8                     
  1378                           ;UART.c: 52:     Lecture = RCREG;
  1379  0015B8  CFAE F004          	movff	4014,UARTRead@Lecture	;volatile
  1380  0015BC                     
  1381                           ;UART.c: 53:     RCREG = 0;
  1382  0015BC  0E00               	movlw	0
  1383  0015BE  6EAE               	movwf	174,c	;volatile
  1384                           
  1385                           ;UART.c: 54:     return Lecture;
  1386  0015C0  5004               	movf	UARTRead@Lecture^0,w,c
  1387  0015C2  0012               	return		;funcret
  1388  0015C4                     __end_of_UARTRead:
  1389                           	opt callstack 0
  1390                           
  1391 ;; *************** function _Par_Validated *****************
  1392 ;; Defined at:
  1393 ;;		line 44 in file "cases.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      unsigned char 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    6
  1414 ;; This function calls:
  1415 ;;		_UARTWrite
  1416 ;;		_myPrintf
  1417 ;; This function is called by:
  1418 ;;		_verification
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text7
  1423  0013DC                     __ptext7:
  1424                           	opt callstack 0
  1425  0013DC                     _Par_Validated:
  1426                           	opt callstack 23
  1427  0013DC                     
  1428                           ;cases.c: 46:     if(Par1==0X3C && Par2==0x3E)
  1429  0013DC  0E3C               	movlw	60
  1430  0013DE  183C               	xorwf	_Par1^0,w,c
  1431  0013E0  A4D8               	btfss	status,2,c
  1432  0013E2  EFF5  F009         	goto	u891
  1433  0013E6  EFF7  F009         	goto	u890
  1434  0013EA                     u891:
  1435  0013EA  EF03  F00A         	goto	l2115
  1436  0013EE                     u890:
  1437  0013EE  0E3E               	movlw	62
  1438  0013F0  183A               	xorwf	_Par2^0,w,c
  1439  0013F2  A4D8               	btfss	status,2,c
  1440  0013F4  EFFE  F009         	goto	u901
  1441  0013F8  EF00  F00A         	goto	u900
  1442  0013FC                     u901:
  1443  0013FC  EF03  F00A         	goto	l2115
  1444  001400                     u900:
  1445  001400                     
  1446                           ;cases.c: 47:     {;cases.c: 48:         return validate_Instruct_State;
  1447  001400  0E03               	movlw	3
  1448  001402  EF0D  F00A         	goto	l54
  1449  001406                     l2115:
  1450                           
  1451                           ;cases.c: 51:     {;cases.c: 53:         myPrintf("Frames are not inserted correctly");
  1452  001406  0E26               	movlw	low STR_4
  1453  001408  6E05               	movwf	myPrintf@PointString^0,c
  1454  00140A  0E08               	movlw	high STR_4
  1455  00140C  6E06               	movwf	(myPrintf@PointString+1)^0,c
  1456  00140E  ECE9  F008         	call	_myPrintf	;wreg free
  1457  001412                     
  1458                           ;cases.c: 54:         UARTWrite(0x0A);
  1459  001412  0E0A               	movlw	10
  1460  001414  ECED  F00A         	call	_UARTWrite
  1461  001418                     
  1462                           ;cases.c: 61:         return wait_cmd_State;
  1463  001418  0E01               	movlw	1
  1464  00141A                     l54:
  1465  00141A  0012               	return		;funcret
  1466  00141C                     __end_of_Par_Validated:
  1467                           	opt callstack 0
  1468                           
  1469 ;; *************** function _Ins_Validated *****************
  1470 ;; Defined at:
  1471 ;;		line 65 in file "cases.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    6
  1492 ;; This function calls:
  1493 ;;		_UARTWrite
  1494 ;;		_myPrintf
  1495 ;; This function is called by:
  1496 ;;		_verification
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text8
  1501  001348                     __ptext8:
  1502                           	opt callstack 0
  1503  001348                     _Ins_Validated:
  1504                           	opt callstack 23
  1505  001348                     
  1506                           ;cases.c: 67:     if(letter == 0x43)
  1507  001348  0E43               	movlw	67
  1508  00134A  183B               	xorwf	_letter^0,w,c
  1509  00134C  A4D8               	btfss	status,2,c
  1510  00134E  EFAB  F009         	goto	u911
  1511  001352  EFAD  F009         	goto	u910
  1512  001356                     u911:
  1513  001356  EFB2  F009         	goto	l2133
  1514  00135A                     u910:
  1515  00135A                     
  1516                           ;cases.c: 68:     {;cases.c: 69:         click=1;
  1517  00135A  0E01               	movlw	1
  1518  00135C  6E30               	movwf	_click^0,c
  1519  00135E                     l2127:
  1520                           
  1521                           ;cases.c: 70:         return validate_Coord_State;
  1522  00135E  0E04               	movlw	4
  1523  001360  EFC9  F009         	goto	l59
  1524  001364                     l2133:
  1525  001364  0E53               	movlw	83
  1526  001366  183B               	xorwf	_letter^0,w,c
  1527  001368  A4D8               	btfss	status,2,c
  1528  00136A  EFB9  F009         	goto	u921
  1529  00136E  EFBB  F009         	goto	u920
  1530  001372                     u921:
  1531  001372  EFBF  F009         	goto	l2143
  1532  001376                     u920:
  1533  001376                     
  1534                           ;cases.c: 74:     {;cases.c: 75:         click=0;
  1535  001376  0E00               	movlw	0
  1536  001378  6E30               	movwf	_click^0,c
  1537  00137A  EFAF  F009         	goto	l2127
  1538  00137E                     l2143:
  1539                           
  1540                           ;cases.c: 79:     {;cases.c: 82:         myPrintf("Touch Instrucction is not recognized"
      +                          );
  1541  00137E  0E01               	movlw	low STR_5
  1542  001380  6E05               	movwf	myPrintf@PointString^0,c
  1543  001382  0E08               	movlw	high STR_5
  1544  001384  6E06               	movwf	(myPrintf@PointString+1)^0,c
  1545  001386  ECE9  F008         	call	_myPrintf	;wreg free
  1546  00138A                     
  1547                           ;cases.c: 83:         UARTWrite(0x0A);
  1548  00138A  0E0A               	movlw	10
  1549  00138C  ECED  F00A         	call	_UARTWrite
  1550  001390                     
  1551                           ;cases.c: 88:         return wait_cmd_State;
  1552  001390  0E01               	movlw	1
  1553  001392                     l59:
  1554  001392  0012               	return		;funcret
  1555  001394                     __end_of_Ins_Validated:
  1556                           	opt callstack 0
  1557                           
  1558 ;; *************** function _Coord_Validated *****************
  1559 ;; Defined at:
  1560 ;;		line 92 in file "cases.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      unsigned char 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    6
  1581 ;; This function calls:
  1582 ;;		_UARTWrite
  1583 ;;		_myPrintf
  1584 ;; This function is called by:
  1585 ;;		_verification
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text9
  1590  001394                     __ptext9:
  1591                           	opt callstack 0
  1592  001394                     _Coord_Validated:
  1593                           	opt callstack 23
  1594  001394                     
  1595                           ;cases.c: 94:     if(cord_x<=300 && cord_y<=300)
  1596  001394  0E2D               	movlw	45
  1597  001396  5C38               	subwf	_cord_x^0,w,c
  1598  001398  0E01               	movlw	1
  1599  00139A  5839               	subwfb	(_cord_x+1)^0,w,c
  1600  00139C  B0D8               	btfsc	status,0,c
  1601  00139E  EFD3  F009         	goto	u931
  1602  0013A2  EFD5  F009         	goto	u930
  1603  0013A6                     u931:
  1604  0013A6  EFE3  F009         	goto	l2161
  1605  0013AA                     u930:
  1606  0013AA  0E2D               	movlw	45
  1607  0013AC  5C36               	subwf	_cord_y^0,w,c
  1608  0013AE  0E01               	movlw	1
  1609  0013B0  5837               	subwfb	(_cord_y+1)^0,w,c
  1610  0013B2  B0D8               	btfsc	status,0,c
  1611  0013B4  EFDE  F009         	goto	u941
  1612  0013B8  EFE0  F009         	goto	u940
  1613  0013BC                     u941:
  1614  0013BC  EFE3  F009         	goto	l2161
  1615  0013C0                     u940:
  1616  0013C0                     
  1617                           ;cases.c: 95:     {;cases.c: 96:         return end_State;
  1618  0013C0  0E05               	movlw	5
  1619  0013C2  EFED  F009         	goto	l66
  1620  0013C6                     l2161:
  1621                           
  1622                           ;cases.c: 99:     {;cases.c: 101:         myPrintf("Surpasses coordinates size");
  1623  0013C6  0E65               	movlw	low STR_6
  1624  0013C8  6E05               	movwf	myPrintf@PointString^0,c
  1625  0013CA  0E08               	movlw	high STR_6
  1626  0013CC  6E06               	movwf	(myPrintf@PointString+1)^0,c
  1627  0013CE  ECE9  F008         	call	_myPrintf	;wreg free
  1628  0013D2                     
  1629                           ;cases.c: 102:         UARTWrite(0x0A);
  1630  0013D2  0E0A               	movlw	10
  1631  0013D4  ECED  F00A         	call	_UARTWrite
  1632  0013D8                     
  1633                           ;cases.c: 107:         return wait_cmd_State;
  1634  0013D8  0E01               	movlw	1
  1635  0013DA                     l66:
  1636  0013DA  0012               	return		;funcret
  1637  0013DC                     __end_of_Coord_Validated:
  1638                           	opt callstack 0
  1639                           
  1640 ;; *************** function _PrintMyActulPosition *****************
  1641 ;; Defined at:
  1642 ;;		line 68 in file "main.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  i               2   25[COMRAM] int 
  1647 ;;  i               2   23[COMRAM] int 
  1648 ;;  b               3   18[COMRAM] unsigned char [3]
  1649 ;;  a               3   15[COMRAM] unsigned char [3]
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0
  1660 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1662 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1663 ;;Total ram usage:       12 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    5
  1666 ;; This function calls:
  1667 ;;		_UARTWrite
  1668 ;;		___lwdiv
  1669 ;;		___lwmod
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text10
  1676  000BF2                     __ptext10:
  1677                           	opt callstack 0
  1678  000BF2                     _PrintMyActulPosition:
  1679                           	opt callstack 25
  1680  000BF2                     
  1681                           ;main.c: 71:         char a[3];;main.c: 72:         char b[3];;main.c: 74:         a[0]=
      +                          (CoordAntX/100)+48;
  1682  000BF2  C03F  F009         	movff	_CoordAntX,___lwdiv@dividend
  1683  000BF6  C040  F00A         	movff	_CoordAntX+1,___lwdiv@dividend+1
  1684  000BFA  0E00               	movlw	0
  1685  000BFC  6E0C               	movwf	(___lwdiv@divisor+1)^0,c
  1686  000BFE  0E64               	movlw	100
  1687  000C00  6E0B               	movwf	___lwdiv@divisor^0,c
  1688  000C02  ECD8  F007         	call	___lwdiv	;wreg free
  1689  000C06  5009               	movf	?___lwdiv^0,w,c
  1690  000C08  0F30               	addlw	48
  1691  000C0A  6E10               	movwf	PrintMyActulPosition@a^0,c
  1692                           
  1693                           ;main.c: 75:         a[1]=((CoordAntX%100)/10)+48;
  1694  000C0C  0E00               	movlw	0
  1695  000C0E  6E07               	movwf	(___lwmod@divisor+1)^0,c
  1696  000C10  0E64               	movlw	100
  1697  000C12  6E06               	movwf	___lwmod@divisor^0,c
  1698  000C14  C03F  F004         	movff	_CoordAntX,___lwmod@dividend
  1699  000C18  C040  F005         	movff	_CoordAntX+1,___lwmod@dividend+1
  1700  000C1C  ECB7  F008         	call	___lwmod	;wreg free
  1701  000C20  C004  F009         	movff	?___lwmod,___lwdiv@dividend
  1702  000C24  C005  F00A         	movff	?___lwmod+1,___lwdiv@dividend+1
  1703  000C28  0E00               	movlw	0
  1704  000C2A  6E0C               	movwf	(___lwdiv@divisor+1)^0,c
  1705  000C2C  0E0A               	movlw	10
  1706  000C2E  6E0B               	movwf	___lwdiv@divisor^0,c
  1707  000C30  ECD8  F007         	call	___lwdiv	;wreg free
  1708  000C34  5009               	movf	?___lwdiv^0,w,c
  1709  000C36  0F30               	addlw	48
  1710  000C38  6E11               	movwf	(PrintMyActulPosition@a+1)^0,c
  1711                           
  1712                           ;main.c: 76:         a[2]=((CoordAntX%100)%10)+48;
  1713  000C3A  0E00               	movlw	0
  1714  000C3C  6E07               	movwf	(___lwmod@divisor+1)^0,c
  1715  000C3E  0E64               	movlw	100
  1716  000C40  6E06               	movwf	___lwmod@divisor^0,c
  1717  000C42  C03F  F004         	movff	_CoordAntX,___lwmod@dividend
  1718  000C46  C040  F005         	movff	_CoordAntX+1,___lwmod@dividend+1
  1719  000C4A  ECB7  F008         	call	___lwmod	;wreg free
  1720  000C4E  C004  F016         	movff	?___lwmod,_PrintMyActulPosition$2000
  1721  000C52  C005  F017         	movff	?___lwmod+1,_PrintMyActulPosition$2000+1
  1722                           
  1723                           ;main.c: 76:         a[2]=((CoordAntX%100)%10)+48;
  1724  000C56  C016  F004         	movff	_PrintMyActulPosition$2000,___lwmod@dividend
  1725  000C5A  C017  F005         	movff	_PrintMyActulPosition$2000+1,___lwmod@dividend+1
  1726  000C5E  0E00               	movlw	0
  1727  000C60  6E07               	movwf	(___lwmod@divisor+1)^0,c
  1728  000C62  0E0A               	movlw	10
  1729  000C64  6E06               	movwf	___lwmod@divisor^0,c
  1730  000C66  ECB7  F008         	call	___lwmod	;wreg free
  1731  000C6A  5004               	movf	?___lwmod^0,w,c
  1732  000C6C  0F30               	addlw	48
  1733  000C6E  6E12               	movwf	(PrintMyActulPosition@a+2)^0,c
  1734                           
  1735                           ;main.c: 78:         b[0]=(CoordAntY/100)+48;
  1736  000C70  C03D  F009         	movff	_CoordAntY,___lwdiv@dividend
  1737  000C74  C03E  F00A         	movff	_CoordAntY+1,___lwdiv@dividend+1
  1738  000C78  0E00               	movlw	0
  1739  000C7A  6E0C               	movwf	(___lwdiv@divisor+1)^0,c
  1740  000C7C  0E64               	movlw	100
  1741  000C7E  6E0B               	movwf	___lwdiv@divisor^0,c
  1742  000C80  ECD8  F007         	call	___lwdiv	;wreg free
  1743  000C84  5009               	movf	?___lwdiv^0,w,c
  1744  000C86  0F30               	addlw	48
  1745  000C88  6E13               	movwf	PrintMyActulPosition@b^0,c
  1746                           
  1747                           ;main.c: 79:         b[1]=((CoordAntY%100)/10)+48;
  1748  000C8A  0E00               	movlw	0
  1749  000C8C  6E07               	movwf	(___lwmod@divisor+1)^0,c
  1750  000C8E  0E64               	movlw	100
  1751  000C90  6E06               	movwf	___lwmod@divisor^0,c
  1752  000C92  C03D  F004         	movff	_CoordAntY,___lwmod@dividend
  1753  000C96  C03E  F005         	movff	_CoordAntY+1,___lwmod@dividend+1
  1754  000C9A  ECB7  F008         	call	___lwmod	;wreg free
  1755  000C9E  C004  F009         	movff	?___lwmod,___lwdiv@dividend
  1756  000CA2  C005  F00A         	movff	?___lwmod+1,___lwdiv@dividend+1
  1757  000CA6  0E00               	movlw	0
  1758  000CA8  6E0C               	movwf	(___lwdiv@divisor+1)^0,c
  1759  000CAA  0E0A               	movlw	10
  1760  000CAC  6E0B               	movwf	___lwdiv@divisor^0,c
  1761  000CAE  ECD8  F007         	call	___lwdiv	;wreg free
  1762  000CB2  5009               	movf	?___lwdiv^0,w,c
  1763  000CB4  0F30               	addlw	48
  1764  000CB6  6E14               	movwf	(PrintMyActulPosition@b+1)^0,c
  1765                           
  1766                           ;main.c: 80:         b[2]=((CoordAntY%100)%10)+48;
  1767  000CB8  0E00               	movlw	0
  1768  000CBA  6E07               	movwf	(___lwmod@divisor+1)^0,c
  1769  000CBC  0E64               	movlw	100
  1770  000CBE  6E06               	movwf	___lwmod@divisor^0,c
  1771  000CC0  C03D  F004         	movff	_CoordAntY,___lwmod@dividend
  1772  000CC4  C03E  F005         	movff	_CoordAntY+1,___lwmod@dividend+1
  1773  000CC8  ECB7  F008         	call	___lwmod	;wreg free
  1774  000CCC  C004  F016         	movff	?___lwmod,_PrintMyActulPosition$2000
  1775  000CD0  C005  F017         	movff	?___lwmod+1,_PrintMyActulPosition$2000+1
  1776                           
  1777                           ;main.c: 80:         b[2]=((CoordAntY%100)%10)+48;
  1778  000CD4  C016  F004         	movff	_PrintMyActulPosition$2000,___lwmod@dividend
  1779  000CD8  C017  F005         	movff	_PrintMyActulPosition$2000+1,___lwmod@dividend+1
  1780  000CDC  0E00               	movlw	0
  1781  000CDE  6E07               	movwf	(___lwmod@divisor+1)^0,c
  1782  000CE0  0E0A               	movlw	10
  1783  000CE2  6E06               	movwf	___lwmod@divisor^0,c
  1784  000CE4  ECB7  F008         	call	___lwmod	;wreg free
  1785  000CE8  5004               	movf	?___lwmod^0,w,c
  1786  000CEA  0F30               	addlw	48
  1787  000CEC  6E15               	movwf	(PrintMyActulPosition@b+2)^0,c
  1788  000CEE                     
  1789                           ;main.c: 82:         for(int i=0; i<3; i++){
  1790  000CEE  0E00               	movlw	0
  1791  000CF0  6E19               	movwf	(PrintMyActulPosition@i+1)^0,c
  1792  000CF2  0E00               	movlw	0
  1793  000CF4  6E18               	movwf	PrintMyActulPosition@i^0,c
  1794  000CF6                     l2387:
  1795                           
  1796                           ;main.c: 84:             UARTWrite(a[i]);
  1797  000CF6  0E10               	movlw	low PrintMyActulPosition@a
  1798  000CF8  2418               	addwf	PrintMyActulPosition@i^0,w,c
  1799  000CFA  6ED9               	movwf	fsr2l,c
  1800  000CFC  0E00               	movlw	high PrintMyActulPosition@a
  1801  000CFE  2019               	addwfc	(PrintMyActulPosition@i+1)^0,w,c
  1802  000D00  6EDA               	movwf	fsr2h,c
  1803  000D02  50DF               	movf	indf2,w,c
  1804  000D04  ECED  F00A         	call	_UARTWrite
  1805  000D08                     
  1806                           ;main.c: 85:         }
  1807  000D08  4A18               	infsnz	PrintMyActulPosition@i^0,f,c
  1808  000D0A  2A19               	incf	(PrintMyActulPosition@i+1)^0,f,c
  1809  000D0C  BE19               	btfsc	(PrintMyActulPosition@i+1)^0,7,c
  1810  000D0E  EF92  F006         	goto	u1131
  1811  000D12  5019               	movf	(PrintMyActulPosition@i+1)^0,w,c
  1812  000D14  E109               	bnz	u1130
  1813  000D16  0E03               	movlw	3
  1814  000D18  5C18               	subwf	PrintMyActulPosition@i^0,w,c
  1815  000D1A  A0D8               	btfss	status,0,c
  1816  000D1C  EF92  F006         	goto	u1131
  1817  000D20  EF94  F006         	goto	u1130
  1818  000D24                     u1131:
  1819  000D24  EF7B  F006         	goto	l2387
  1820  000D28                     u1130:
  1821  000D28                     
  1822                           ;main.c: 86:         UARTWrite(0x2C);
  1823  000D28  0E2C               	movlw	44
  1824  000D2A  ECED  F00A         	call	_UARTWrite
  1825  000D2E                     
  1826                           ;main.c: 87:         for(int i=0; i<3; i++){
  1827  000D2E  0E00               	movlw	0
  1828  000D30  6E1B               	movwf	(PrintMyActulPosition@i_806+1)^0,c
  1829  000D32  0E00               	movlw	0
  1830  000D34  6E1A               	movwf	PrintMyActulPosition@i_806^0,c
  1831  000D36                     l2401:
  1832                           
  1833                           ;main.c: 89:             UARTWrite(b[i]);
  1834  000D36  0E13               	movlw	low PrintMyActulPosition@b
  1835  000D38  241A               	addwf	PrintMyActulPosition@i_806^0,w,c
  1836  000D3A  6ED9               	movwf	fsr2l,c
  1837  000D3C  0E00               	movlw	high PrintMyActulPosition@b
  1838  000D3E  201B               	addwfc	(PrintMyActulPosition@i_806+1)^0,w,c
  1839  000D40  6EDA               	movwf	fsr2h,c
  1840  000D42  50DF               	movf	indf2,w,c
  1841  000D44  ECED  F00A         	call	_UARTWrite
  1842  000D48                     
  1843                           ;main.c: 90:         }
  1844  000D48  4A1A               	infsnz	PrintMyActulPosition@i_806^0,f,c
  1845  000D4A  2A1B               	incf	(PrintMyActulPosition@i_806+1)^0,f,c
  1846  000D4C  BE1B               	btfsc	(PrintMyActulPosition@i_806+1)^0,7,c
  1847  000D4E  EFB2  F006         	goto	u1141
  1848  000D52  501B               	movf	(PrintMyActulPosition@i_806+1)^0,w,c
  1849  000D54  E109               	bnz	u1140
  1850  000D56  0E03               	movlw	3
  1851  000D58  5C1A               	subwf	PrintMyActulPosition@i_806^0,w,c
  1852  000D5A  A0D8               	btfss	status,0,c
  1853  000D5C  EFB2  F006         	goto	u1141
  1854  000D60  EFB4  F006         	goto	u1140
  1855  000D64                     u1141:
  1856  000D64  EF9B  F006         	goto	l2401
  1857  000D68                     u1140:
  1858  000D68  0012               	return		;funcret
  1859  000D6A                     __end_of_PrintMyActulPosition:
  1860                           	opt callstack 0
  1861                           
  1862 ;; *************** function ___lwmod *****************
  1863 ;; Defined at:
  1864 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  dividend        2    3[COMRAM] unsigned int 
  1867 ;;  divisor         2    5[COMRAM] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  counter         1    7[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2    3[COMRAM] unsigned int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         4       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1882 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1883 ;;Total ram usage:        5 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    4
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_PrintMyActulPosition
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text11
  1894  00116E                     __ptext11:
  1895                           	opt callstack 0
  1896  00116E                     ___lwmod:
  1897                           	opt callstack 25
  1898  00116E  5006               	movf	___lwmod@divisor^0,w,c
  1899  001170  1007               	iorwf	(___lwmod@divisor+1)^0,w,c
  1900  001172  B4D8               	btfsc	status,2,c
  1901  001174  EFBE  F008         	goto	u1061
  1902  001178  EFC0  F008         	goto	u1060
  1903  00117C                     u1061:
  1904  00117C  EFE4  F008         	goto	l1135
  1905  001180                     u1060:
  1906  001180  0E01               	movlw	1
  1907  001182  6E08               	movwf	___lwmod@counter^0,c
  1908  001184  EFC8  F008         	goto	l2279
  1909  001188                     l2277:
  1910  001188  90D8               	bcf	status,0,c
  1911  00118A  3606               	rlcf	___lwmod@divisor^0,f,c
  1912  00118C  3607               	rlcf	(___lwmod@divisor+1)^0,f,c
  1913  00118E  2A08               	incf	___lwmod@counter^0,f,c
  1914  001190                     l2279:
  1915  001190  AE07               	btfss	(___lwmod@divisor+1)^0,7,c
  1916  001192  EFCD  F008         	goto	u1071
  1917  001196  EFCF  F008         	goto	u1070
  1918  00119A                     u1071:
  1919  00119A  EFC4  F008         	goto	l2277
  1920  00119E                     u1070:
  1921  00119E                     l2281:
  1922  00119E  5006               	movf	___lwmod@divisor^0,w,c
  1923  0011A0  5C04               	subwf	___lwmod@dividend^0,w,c
  1924  0011A2  5007               	movf	(___lwmod@divisor+1)^0,w,c
  1925  0011A4  5805               	subwfb	(___lwmod@dividend+1)^0,w,c
  1926  0011A6  A0D8               	btfss	status,0,c
  1927  0011A8  EFD8  F008         	goto	u1081
  1928  0011AC  EFDA  F008         	goto	u1080
  1929  0011B0                     u1081:
  1930  0011B0  EFDE  F008         	goto	l2285
  1931  0011B4                     u1080:
  1932  0011B4  5006               	movf	___lwmod@divisor^0,w,c
  1933  0011B6  5E04               	subwf	___lwmod@dividend^0,f,c
  1934  0011B8  5007               	movf	(___lwmod@divisor+1)^0,w,c
  1935  0011BA  5A05               	subwfb	(___lwmod@dividend+1)^0,f,c
  1936  0011BC                     l2285:
  1937  0011BC  90D8               	bcf	status,0,c
  1938  0011BE  3207               	rrcf	(___lwmod@divisor+1)^0,f,c
  1939  0011C0  3206               	rrcf	___lwmod@divisor^0,f,c
  1940  0011C2  2E08               	decfsz	___lwmod@counter^0,f,c
  1941  0011C4  EFCF  F008         	goto	l2281
  1942  0011C8                     l1135:
  1943  0011C8  C004  F004         	movff	___lwmod@dividend,?___lwmod
  1944  0011CC  C005  F005         	movff	___lwmod@dividend+1,?___lwmod+1
  1945  0011D0  0012               	return		;funcret
  1946  0011D2                     __end_of___lwmod:
  1947                           	opt callstack 0
  1948                           
  1949 ;; *************** function ___lwdiv *****************
  1950 ;; Defined at:
  1951 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  dividend        2    8[COMRAM] unsigned int 
  1954 ;;  divisor         2   10[COMRAM] unsigned int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  quotient        2   12[COMRAM] unsigned int 
  1957 ;;  counter         1   14[COMRAM] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    8[COMRAM] unsigned int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1967 ;;      Params:         4       0       0       0       0       0       0       0       0
  1968 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1970 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:        7 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    4
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_PrintMyActulPosition
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text12
  1982  000FB0                     __ptext12:
  1983                           	opt callstack 0
  1984  000FB0                     ___lwdiv:
  1985                           	opt callstack 25
  1986  000FB0  0E00               	movlw	0
  1987  000FB2  6E0E               	movwf	(___lwdiv@quotient+1)^0,c
  1988  000FB4  0E00               	movlw	0
  1989  000FB6  6E0D               	movwf	___lwdiv@quotient^0,c
  1990  000FB8  500B               	movf	___lwdiv@divisor^0,w,c
  1991  000FBA  100C               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1992  000FBC  B4D8               	btfsc	status,2,c
  1993  000FBE  EFE3  F007         	goto	u1031
  1994  000FC2  EFE5  F007         	goto	u1030
  1995  000FC6                     u1031:
  1996  000FC6  EF0D  F008         	goto	l1125
  1997  000FCA                     u1030:
  1998  000FCA  0E01               	movlw	1
  1999  000FCC  6E0F               	movwf	___lwdiv@counter^0,c
  2000  000FCE  EFED  F007         	goto	l2259
  2001  000FD2                     l2257:
  2002  000FD2  90D8               	bcf	status,0,c
  2003  000FD4  360B               	rlcf	___lwdiv@divisor^0,f,c
  2004  000FD6  360C               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2005  000FD8  2A0F               	incf	___lwdiv@counter^0,f,c
  2006  000FDA                     l2259:
  2007  000FDA  AE0C               	btfss	(___lwdiv@divisor+1)^0,7,c
  2008  000FDC  EFF2  F007         	goto	u1041
  2009  000FE0  EFF4  F007         	goto	u1040
  2010  000FE4                     u1041:
  2011  000FE4  EFE9  F007         	goto	l2257
  2012  000FE8                     u1040:
  2013  000FE8                     l2261:
  2014  000FE8  90D8               	bcf	status,0,c
  2015  000FEA  360D               	rlcf	___lwdiv@quotient^0,f,c
  2016  000FEC  360E               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2017  000FEE  500B               	movf	___lwdiv@divisor^0,w,c
  2018  000FF0  5C09               	subwf	___lwdiv@dividend^0,w,c
  2019  000FF2  500C               	movf	(___lwdiv@divisor+1)^0,w,c
  2020  000FF4  580A               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2021  000FF6  A0D8               	btfss	status,0,c
  2022  000FF8  EF00  F008         	goto	u1051
  2023  000FFC  EF02  F008         	goto	u1050
  2024  001000                     u1051:
  2025  001000  EF07  F008         	goto	l2269
  2026  001004                     u1050:
  2027  001004  500B               	movf	___lwdiv@divisor^0,w,c
  2028  001006  5E09               	subwf	___lwdiv@dividend^0,f,c
  2029  001008  500C               	movf	(___lwdiv@divisor+1)^0,w,c
  2030  00100A  5A0A               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2031  00100C  800D               	bsf	___lwdiv@quotient^0,0,c
  2032  00100E                     l2269:
  2033  00100E  90D8               	bcf	status,0,c
  2034  001010  320C               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2035  001012  320B               	rrcf	___lwdiv@divisor^0,f,c
  2036  001014  2E0F               	decfsz	___lwdiv@counter^0,f,c
  2037  001016  EFF4  F007         	goto	l2261
  2038  00101A                     l1125:
  2039  00101A  C00D  F009         	movff	___lwdiv@quotient,?___lwdiv
  2040  00101E  C00E  F00A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2041  001022  0012               	return		;funcret
  2042  001024                     __end_of___lwdiv:
  2043                           	opt callstack 0
  2044                           
  2045 ;; *************** function _Movement *****************
  2046 ;; Defined at:
  2047 ;;		line 14 in file "Movimiento.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  2  218[None  ] int 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2063 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2064 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2065 ;;Total ram usage:        2 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    7
  2068 ;; This function calls:
  2069 ;;		_PWM
  2070 ;;		_myPrintf
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text13
  2077  001102                     __ptext13:
  2078                           	opt callstack 0
  2079  001102                     _Movement:
  2080                           	opt callstack 23
  2081  001102                     
  2082                           ;Movimiento.c: 16:     if(click == 1){
  2083  001102  0430               	decf	_click^0,w,c
  2084  001104  A4D8               	btfss	status,2,c
  2085  001106  EF87  F008         	goto	u1151
  2086  00110A  EF89  F008         	goto	u1150
  2087  00110E                     u1151:
  2088  00110E  EFA0  F008         	goto	l2419
  2089  001112                     u1150:
  2090  001112                     
  2091                           ;Movimiento.c: 17:         PWM();
  2092  001112  EC2C  F005         	call	_PWM	;wreg free
  2093  001116                     
  2094                           ;Movimiento.c: 18:         PORTDbits.RD7=1;
  2095  001116  8E83               	bsf	131,7,c	;volatile
  2096  001118                     
  2097                           ;Movimiento.c: 19:         _delay((unsigned long)((1200)*(8000000L/4000.0)));
  2098  001118  0E0D               	movlw	13
  2099  00111A  6E0B               	movwf	(??_Movement+1)^0,c
  2100  00111C  0E2D               	movlw	45
  2101  00111E  6E0A               	movwf	??_Movement^0,c
  2102  001120  0ED8               	movlw	216
  2103  001122                     u1257:
  2104  001122  2EE8               	decfsz	wreg,f,c
  2105  001124  D7FE               	bra	u1257
  2106  001126  2E0A               	decfsz	??_Movement^0,f,c
  2107  001128  D7FC               	bra	u1257
  2108  00112A  2E0B               	decfsz	(??_Movement+1)^0,f,c
  2109  00112C  D7FA               	bra	u1257
  2110  00112E                     
  2111                           ;Movimiento.c: 20:         PORTDbits.RD7=0;
  2112  00112E  9E83               	bcf	131,7,c	;volatile
  2113  001130                     
  2114                           ;Movimiento.c: 21:         myPrintf("Click");
  2115  001130  0EB0               	movlw	low STR_8
  2116  001132  6E05               	movwf	myPrintf@PointString^0,c
  2117  001134  0E08               	movlw	high STR_8
  2118  001136  6E06               	movwf	(myPrintf@PointString+1)^0,c
  2119  001138  ECE9  F008         	call	_myPrintf	;wreg free
  2120                           
  2121                           ;Movimiento.c: 22:     }
  2122  00113C  EFB2  F008         	goto	l2429
  2123  001140                     l2419:
  2124                           
  2125                           ;Movimiento.c: 24:         if(click == 0)
  2126  001140  5030               	movf	_click^0,w,c
  2127  001142  A4D8               	btfss	status,2,c
  2128  001144  EFA6  F008         	goto	u1161
  2129  001148  EFA8  F008         	goto	u1160
  2130  00114C                     u1161:
  2131  00114C  EFB2  F008         	goto	l2429
  2132  001150                     u1160:
  2133  001150                     
  2134                           ;Movimiento.c: 25:         {;Movimiento.c: 26:             PORTDbits.RD7=1;
  2135  001150  8E83               	bsf	131,7,c	;volatile
  2136  001152                     
  2137                           ;Movimiento.c: 27:             PWM();
  2138  001152  EC2C  F005         	call	_PWM	;wreg free
  2139  001156                     
  2140                           ;Movimiento.c: 28:             PORTDbits.RD7=0;
  2141  001156  9E83               	bcf	131,7,c	;volatile
  2142  001158                     
  2143                           ;Movimiento.c: 29:             myPrintf("Slide");
  2144  001158  0EAA               	movlw	low STR_9
  2145  00115A  6E05               	movwf	myPrintf@PointString^0,c
  2146  00115C  0E08               	movlw	high STR_9
  2147  00115E  6E06               	movwf	(myPrintf@PointString+1)^0,c
  2148  001160  ECE9  F008         	call	_myPrintf	;wreg free
  2149  001164                     l2429:
  2150                           
  2151                           ;Movimiento.c: 33:     ControlFlagVerification = 1;
  2152  001164  0E00               	movlw	0
  2153  001166  6E42               	movwf	(_ControlFlagVerification+1)^0,c
  2154  001168  0E01               	movlw	1
  2155  00116A  6E41               	movwf	_ControlFlagVerification^0,c
  2156  00116C  0012               	return		;funcret
  2157  00116E                     __end_of_Movement:
  2158                           	opt callstack 0
  2159                           
  2160 ;; *************** function _myPrintf *****************
  2161 ;; Defined at:
  2162 ;;		line 93 in file "main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  PointString     2    4[COMRAM] PTR unsigned char 
  2165 ;;		 -> STR_9(6), STR_8(6), STR_7(17), STR_6(27), 
  2166 ;;		 -> STR_5(37), STR_4(34), STR_3(29), STR_2(14), 
  2167 ;;		 -> STR_1(11), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  i               1    8[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2179 ;;      Params:         2       0       0       0       0       0       0       0       0
  2180 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2181 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2182 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2183 ;;Total ram usage:        5 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    5
  2186 ;; This function calls:
  2187 ;;		_UARTWrite
  2188 ;; This function is called by:
  2189 ;;		_start
  2190 ;;		_cmd
  2191 ;;		_Par_Validated
  2192 ;;		_Ins_Validated
  2193 ;;		_Coord_Validated
  2194 ;;		_end
  2195 ;;		_Movement
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text14
  2200  0011D2                     __ptext14:
  2201                           	opt callstack 0
  2202  0011D2                     _myPrintf:
  2203                           	opt callstack 23
  2204  0011D2                     
  2205                           ;main.c: 93: void myPrintf(unsigned char *PointString);main.c: 94: {;main.c: 95:     for
      +                           (unsigned char i = 0; i < 255; i++) {
  2206  0011D2  0E00               	movlw	0
  2207  0011D4  6E09               	movwf	myPrintf@i^0,c
  2208  0011D6                     l1937:
  2209                           
  2210                           ;main.c: 96:         if (PointString[i] == ((void*)0)) {
  2211  0011D6  5009               	movf	myPrintf@i^0,w,c
  2212  0011D8  2405               	addwf	myPrintf@PointString^0,w,c
  2213  0011DA  6E07               	movwf	??_myPrintf^0,c
  2214  0011DC  0E00               	movlw	0
  2215  0011DE  2006               	addwfc	(myPrintf@PointString+1)^0,w,c
  2216  0011E0  6E08               	movwf	(??_myPrintf+1)^0,c
  2217  0011E2  C007  FFF6         	movff	??_myPrintf,tblptrl
  2218  0011E6  C008  FFF7         	movff	??_myPrintf+1,tblptrh
  2219  0011EA                     	if	0	;tblptru may be non-zero
  2220  0011EA                     	endif
  2221  0011EA                     	if	0	;tblptru may be non-zero
  2222  0011EA                     	endif
  2223  0011EA  0008               	tblrd		*
  2224  0011EC  50F5               	movf	tablat,w,c
  2225  0011EE  0900               	iorlw	0
  2226  0011F0  A4D8               	btfss	status,2,c
  2227  0011F2  EFFD  F008         	goto	u701
  2228  0011F6  EFFF  F008         	goto	u700
  2229  0011FA                     u701:
  2230  0011FA  EF01  F009         	goto	l1943
  2231  0011FE                     u700:
  2232  0011FE  EF18  F009         	goto	l287
  2233  001202                     l1943:
  2234                           
  2235                           ;main.c: 99:             UARTWrite(PointString[i]);
  2236  001202  5009               	movf	myPrintf@i^0,w,c
  2237  001204  2405               	addwf	myPrintf@PointString^0,w,c
  2238  001206  6E07               	movwf	??_myPrintf^0,c
  2239  001208  0E00               	movlw	0
  2240  00120A  2006               	addwfc	(myPrintf@PointString+1)^0,w,c
  2241  00120C  6E08               	movwf	(??_myPrintf+1)^0,c
  2242  00120E  C007  FFF6         	movff	??_myPrintf,tblptrl
  2243  001212  C008  FFF7         	movff	??_myPrintf+1,tblptrh
  2244  001216                     	if	0	;tblptru may be non-zero
  2245  001216                     	endif
  2246  001216                     	if	0	;tblptru may be non-zero
  2247  001216                     	endif
  2248  001216  0008               	tblrd		*
  2249  001218  50F5               	movf	tablat,w,c
  2250  00121A  ECED  F00A         	call	_UARTWrite
  2251  00121E                     
  2252                           ;main.c: 100:     }
  2253  00121E  2A09               	incf	myPrintf@i^0,f,c
  2254  001220  2809               	incf	myPrintf@i^0,w,c
  2255  001222  A4D8               	btfss	status,2,c
  2256  001224  EF16  F009         	goto	u711
  2257  001228  EF18  F009         	goto	u710
  2258  00122C                     u711:
  2259  00122C  EFEB  F008         	goto	l1937
  2260  001230                     u710:
  2261  001230                     l287:
  2262  001230  0012               	return		;funcret
  2263  001232                     __end_of_myPrintf:
  2264                           	opt callstack 0
  2265                           
  2266 ;; *************** function _UARTWrite *****************
  2267 ;; Defined at:
  2268 ;;		line 34 in file "UART.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  data            1    wreg     unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  data            1    3[COMRAM] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0
  2283 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2285 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        1 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_start
  2293 ;;		_cmd
  2294 ;;		_Par_Validated
  2295 ;;		_Ins_Validated
  2296 ;;		_Coord_Validated
  2297 ;;		_end
  2298 ;;		_PrintMyActulPosition
  2299 ;;		_myPrintf
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text15
  2304  0015DA                     __ptext15:
  2305                           	opt callstack 0
  2306  0015DA                     _UARTWrite:
  2307                           	opt callstack 23
  2308                           
  2309                           ;incstack = 0
  2310                           ;UARTWrite@data stored from wreg
  2311  0015DA  6E04               	movwf	UARTWrite@data^0,c
  2312  0015DC                     l126:
  2313  0015DC  A89E               	btfss	158,4,c	;volatile
  2314  0015DE  EFF3  F00A         	goto	u691
  2315  0015E2  EFF5  F00A         	goto	u690
  2316  0015E6                     u691:
  2317  0015E6  EFEE  F00A         	goto	l126
  2318  0015EA                     u690:
  2319  0015EA                     
  2320                           ;UART.c: 36:     TXREG= data;
  2321  0015EA  C004  FFAD         	movff	UARTWrite@data,4013	;volatile
  2322  0015EE  0012               	return		;funcret
  2323  0015F0                     __end_of_UARTWrite:
  2324                           	opt callstack 0
  2325                           
  2326 ;; *************** function _PWM *****************
  2327 ;; Defined at:
  2328 ;;		line 23 in file "PWM.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    6
  2349 ;; This function calls:
  2350 ;;		_ContarPulsos
  2351 ;;		___wmul
  2352 ;; This function is called by:
  2353 ;;		_Movement
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text16
  2358  000A58                     __ptext16:
  2359                           	opt callstack 0
  2360  000A58                     _PWM:
  2361                           	opt callstack 23
  2362  000A58                     
  2363                           ;PWM.c: 25:     FlagDirectionX= 1;
  2364  000A58  0E00               	movlw	0
  2365  000A5A  6E27               	movwf	(_FlagDirectionX+1)^0,c
  2366  000A5C  0E01               	movlw	1
  2367  000A5E  6E26               	movwf	_FlagDirectionX^0,c
  2368                           
  2369                           ;PWM.c: 26:     FlagDirectionY= 1;
  2370  000A60  0E00               	movlw	0
  2371  000A62  6E25               	movwf	(_FlagDirectionY+1)^0,c
  2372  000A64  0E01               	movlw	1
  2373  000A66  6E24               	movwf	_FlagDirectionY^0,c
  2374  000A68                     
  2375                           ;PWM.c: 29:     if(CoordAntX==0)
  2376  000A68  503F               	movf	_CoordAntX^0,w,c
  2377  000A6A  1040               	iorwf	(_CoordAntX+1)^0,w,c
  2378  000A6C  A4D8               	btfss	status,2,c
  2379  000A6E  EF3B  F005         	goto	u951
  2380  000A72  EF3D  F005         	goto	u950
  2381  000A76                     u951:
  2382  000A76  EF43  F005         	goto	l2203
  2383  000A7A                     u950:
  2384  000A7A                     
  2385                           ;PWM.c: 30:     {;PWM.c: 31:         CoordRelatX=cord_x;
  2386  000A7A  C038  F034         	movff	_cord_x,_CoordRelatX
  2387  000A7E  C039  F035         	movff	_cord_x+1,_CoordRelatX+1
  2388                           
  2389                           ;PWM.c: 32:     }else{
  2390  000A82  EF49  F005         	goto	l337
  2391  000A86                     l2203:
  2392                           
  2393                           ;PWM.c: 33:         CoordRelatX=cord_x-CoordAntX;
  2394  000A86  503F               	movf	_CoordAntX^0,w,c
  2395  000A88  5C38               	subwf	_cord_x^0,w,c
  2396  000A8A  6E34               	movwf	_CoordRelatX^0,c
  2397  000A8C  5040               	movf	(_CoordAntX+1)^0,w,c
  2398  000A8E  5839               	subwfb	(_cord_x+1)^0,w,c
  2399  000A90  6E35               	movwf	(_CoordRelatX+1)^0,c
  2400  000A92                     l337:
  2401                           
  2402                           ;PWM.c: 37:     if (CoordRelatX<0)
  2403  000A92  BE35               	btfsc	(_CoordRelatX+1)^0,7,c
  2404  000A94  EF50  F005         	goto	u960
  2405  000A98  EF4E  F005         	goto	u961
  2406  000A9C                     u961:
  2407  000A9C  EF5C  F005         	goto	l338
  2408  000AA0                     u960:
  2409  000AA0                     
  2410                           ;PWM.c: 38:     {;PWM.c: 39:         PORTDbits.RD0= 1;
  2411  000AA0  8083               	bsf	131,0,c	;volatile
  2412                           
  2413                           ;PWM.c: 40:         PORTDbits.RD1= 1;
  2414  000AA2  8283               	bsf	131,1,c	;volatile
  2415  000AA4                     
  2416                           ;PWM.c: 41:         CoordRelatX=CoordRelatX*(-1);
  2417  000AA4  6C34               	negf	_CoordRelatX^0,c
  2418  000AA6  1E35               	comf	(_CoordRelatX+1)^0,f,c
  2419  000AA8  B0D8               	btfsc	status,0,c
  2420  000AAA  2A35               	incf	(_CoordRelatX+1)^0,f,c
  2421  000AAC                     
  2422                           ;PWM.c: 42:         FlagDirectionX= 0;
  2423  000AAC  0E00               	movlw	0
  2424  000AAE  6E27               	movwf	(_FlagDirectionX+1)^0,c
  2425  000AB0  0E00               	movlw	0
  2426  000AB2  6E26               	movwf	_FlagDirectionX^0,c
  2427                           
  2428                           ;PWM.c: 43:     }
  2429  000AB4  EF62  F005         	goto	l2213
  2430  000AB8                     l338:
  2431                           
  2432                           ;PWM.c: 45:             PORTDbits.RD0= 0;
  2433  000AB8  9083               	bcf	131,0,c	;volatile
  2434                           
  2435                           ;PWM.c: 46:             PORTDbits.RD1= 0;
  2436  000ABA  9283               	bcf	131,1,c	;volatile
  2437  000ABC                     
  2438                           ;PWM.c: 47:             FlagDirectionX= 1;
  2439  000ABC  0E00               	movlw	0
  2440  000ABE  6E27               	movwf	(_FlagDirectionX+1)^0,c
  2441  000AC0  0E01               	movlw	1
  2442  000AC2  6E26               	movwf	_FlagDirectionX^0,c
  2443  000AC4                     l2213:
  2444                           
  2445                           ;PWM.c: 50:     StepsOnX=CoordRelatX*5;
  2446  000AC4  C034  F004         	movff	_CoordRelatX,___wmul@multiplier
  2447  000AC8  C035  F005         	movff	_CoordRelatX+1,___wmul@multiplier+1
  2448  000ACC  0E00               	movlw	0
  2449  000ACE  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  2450  000AD0  0E05               	movlw	5
  2451  000AD2  6E06               	movwf	___wmul@multiplicand^0,c
  2452  000AD4  EC86  F00A         	call	___wmul	;wreg free
  2453  000AD8  C004  F02A         	movff	?___wmul,_StepsOnX
  2454  000ADC  C005  F02B         	movff	?___wmul+1,_StepsOnX+1
  2455  000AE0                     
  2456                           ;PWM.c: 51:     ContarPulsos(StepsOnX);
  2457  000AE0  C02A  F004         	movff	_StepsOnX,ContarPulsos@pasos
  2458  000AE4  C02B  F005         	movff	_StepsOnX+1,ContarPulsos@pasos+1
  2459  000AE8  EC48  F009         	call	_ContarPulsos	;wreg free
  2460  000AEC                     
  2461                           ;PWM.c: 54:     if(FlagDirectionX==0)
  2462  000AEC  5026               	movf	_FlagDirectionX^0,w,c
  2463  000AEE  1027               	iorwf	(_FlagDirectionX+1)^0,w,c
  2464  000AF0  A4D8               	btfss	status,2,c
  2465  000AF2  EF7D  F005         	goto	u971
  2466  000AF6  EF7F  F005         	goto	u970
  2467  000AFA                     u971:
  2468  000AFA  EF87  F005         	goto	l2221
  2469  000AFE                     u970:
  2470  000AFE                     
  2471                           ;PWM.c: 55:     {;PWM.c: 56:         CoordAntX= CoordAntX-CoordRelatX;
  2472  000AFE  5034               	movf	_CoordRelatX^0,w,c
  2473  000B00  5C3F               	subwf	_CoordAntX^0,w,c
  2474  000B02  6E3F               	movwf	_CoordAntX^0,c
  2475  000B04  5035               	movf	(_CoordRelatX+1)^0,w,c
  2476  000B06  5840               	subwfb	(_CoordAntX+1)^0,w,c
  2477  000B08  6E40               	movwf	(_CoordAntX+1)^0,c
  2478                           
  2479                           ;PWM.c: 57:     }
  2480  000B0A  EF96  F005         	goto	l341
  2481  000B0E                     l2221:
  2482                           
  2483                           ;PWM.c: 59:         if(FlagDirectionX== 1)
  2484  000B0E  0426               	decf	_FlagDirectionX^0,w,c
  2485  000B10  1027               	iorwf	(_FlagDirectionX+1)^0,w,c
  2486  000B12  A4D8               	btfss	status,2,c
  2487  000B14  EF8E  F005         	goto	u981
  2488  000B18  EF90  F005         	goto	u980
  2489  000B1C                     u981:
  2490  000B1C  EF96  F005         	goto	l341
  2491  000B20                     u980:
  2492  000B20                     
  2493                           ;PWM.c: 60:         {;PWM.c: 61:             CoordAntX=CoordAntX+CoordRelatX;
  2494  000B20  503F               	movf	_CoordAntX^0,w,c
  2495  000B22  2434               	addwf	_CoordRelatX^0,w,c
  2496  000B24  6E3F               	movwf	_CoordAntX^0,c
  2497  000B26  5040               	movf	(_CoordAntX+1)^0,w,c
  2498  000B28  2035               	addwfc	(_CoordRelatX+1)^0,w,c
  2499  000B2A  6E40               	movwf	(_CoordAntX+1)^0,c
  2500  000B2C                     l341:
  2501                           
  2502                           ;PWM.c: 67:     if(CoordAntY==0)
  2503  000B2C  503D               	movf	_CoordAntY^0,w,c
  2504  000B2E  103E               	iorwf	(_CoordAntY+1)^0,w,c
  2505  000B30  A4D8               	btfss	status,2,c
  2506  000B32  EF9D  F005         	goto	u991
  2507  000B36  EF9F  F005         	goto	u990
  2508  000B3A                     u991:
  2509  000B3A  EFA5  F005         	goto	l2227
  2510  000B3E                     u990:
  2511  000B3E                     
  2512                           ;PWM.c: 68:     {;PWM.c: 69:         CoordRelatY=cord_y;
  2513  000B3E  C036  F032         	movff	_cord_y,_CoordRelatY
  2514  000B42  C037  F033         	movff	_cord_y+1,_CoordRelatY+1
  2515                           
  2516                           ;PWM.c: 70:     }
  2517  000B46  EFAB  F005         	goto	l344
  2518  000B4A                     l2227:
  2519                           
  2520                           ;PWM.c: 72:             CoordRelatY=cord_y-CoordAntY;
  2521  000B4A  503D               	movf	_CoordAntY^0,w,c
  2522  000B4C  5C36               	subwf	_cord_y^0,w,c
  2523  000B4E  6E32               	movwf	_CoordRelatY^0,c
  2524  000B50  503E               	movf	(_CoordAntY+1)^0,w,c
  2525  000B52  5837               	subwfb	(_cord_y+1)^0,w,c
  2526  000B54  6E33               	movwf	(_CoordRelatY+1)^0,c
  2527  000B56                     l344:
  2528                           
  2529                           ;PWM.c: 74:     if(CoordRelatY<0)
  2530  000B56  BE33               	btfsc	(_CoordRelatY+1)^0,7,c
  2531  000B58  EFB2  F005         	goto	u1000
  2532  000B5C  EFB0  F005         	goto	u1001
  2533  000B60                     u1001:
  2534  000B60  EFBE  F005         	goto	l345
  2535  000B64                     u1000:
  2536  000B64                     
  2537                           ;PWM.c: 75:     {;PWM.c: 76:         PORTDbits.RD0= 0;
  2538  000B64  9083               	bcf	131,0,c	;volatile
  2539                           
  2540                           ;PWM.c: 77:         PORTDbits.RD1= 1;
  2541  000B66  8283               	bsf	131,1,c	;volatile
  2542  000B68                     
  2543                           ;PWM.c: 78:         CoordRelatY=CoordRelatY*(-1);
  2544  000B68  6C32               	negf	_CoordRelatY^0,c
  2545  000B6A  1E33               	comf	(_CoordRelatY+1)^0,f,c
  2546  000B6C  B0D8               	btfsc	status,0,c
  2547  000B6E  2A33               	incf	(_CoordRelatY+1)^0,f,c
  2548  000B70                     
  2549                           ;PWM.c: 79:         FlagDirectionY= 0;
  2550  000B70  0E00               	movlw	0
  2551  000B72  6E25               	movwf	(_FlagDirectionY+1)^0,c
  2552  000B74  0E00               	movlw	0
  2553  000B76  6E24               	movwf	_FlagDirectionY^0,c
  2554                           
  2555                           ;PWM.c: 80:     }
  2556  000B78  EFC4  F005         	goto	l2237
  2557  000B7C                     l345:
  2558                           
  2559                           ;PWM.c: 82:         PORTDbits.RD0= 1;
  2560  000B7C  8083               	bsf	131,0,c	;volatile
  2561                           
  2562                           ;PWM.c: 83:         PORTDbits.RD1= 0;
  2563  000B7E  9283               	bcf	131,1,c	;volatile
  2564  000B80                     
  2565                           ;PWM.c: 84:         FlagDirectionY= 1;
  2566  000B80  0E00               	movlw	0
  2567  000B82  6E25               	movwf	(_FlagDirectionY+1)^0,c
  2568  000B84  0E01               	movlw	1
  2569  000B86  6E24               	movwf	_FlagDirectionY^0,c
  2570  000B88                     l2237:
  2571                           
  2572                           ;PWM.c: 87:     StepsOnY=CoordRelatY*5;
  2573  000B88  C032  F004         	movff	_CoordRelatY,___wmul@multiplier
  2574  000B8C  C033  F005         	movff	_CoordRelatY+1,___wmul@multiplier+1
  2575  000B90  0E00               	movlw	0
  2576  000B92  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  2577  000B94  0E05               	movlw	5
  2578  000B96  6E06               	movwf	___wmul@multiplicand^0,c
  2579  000B98  EC86  F00A         	call	___wmul	;wreg free
  2580  000B9C  C004  F028         	movff	?___wmul,_StepsOnY
  2581  000BA0  C005  F029         	movff	?___wmul+1,_StepsOnY+1
  2582  000BA4                     
  2583                           ;PWM.c: 88:     ContarPulsos(StepsOnY);
  2584  000BA4  C028  F004         	movff	_StepsOnY,ContarPulsos@pasos
  2585  000BA8  C029  F005         	movff	_StepsOnY+1,ContarPulsos@pasos+1
  2586  000BAC  EC48  F009         	call	_ContarPulsos	;wreg free
  2587  000BB0                     
  2588                           ;PWM.c: 91:     if(FlagDirectionY== 0)
  2589  000BB0  5024               	movf	_FlagDirectionY^0,w,c
  2590  000BB2  1025               	iorwf	(_FlagDirectionY+1)^0,w,c
  2591  000BB4  A4D8               	btfss	status,2,c
  2592  000BB6  EFDF  F005         	goto	u1011
  2593  000BBA  EFE1  F005         	goto	u1010
  2594  000BBE                     u1011:
  2595  000BBE  EFE9  F005         	goto	l2245
  2596  000BC2                     u1010:
  2597  000BC2                     
  2598                           ;PWM.c: 92:     {;PWM.c: 93:         CoordAntY= CoordAntY-CoordRelatY;
  2599  000BC2  5032               	movf	_CoordRelatY^0,w,c
  2600  000BC4  5C3D               	subwf	_CoordAntY^0,w,c
  2601  000BC6  6E3D               	movwf	_CoordAntY^0,c
  2602  000BC8  5033               	movf	(_CoordRelatY+1)^0,w,c
  2603  000BCA  583E               	subwfb	(_CoordAntY+1)^0,w,c
  2604  000BCC  6E3E               	movwf	(_CoordAntY+1)^0,c
  2605                           
  2606                           ;PWM.c: 94:     }
  2607  000BCE  EFF8  F005         	goto	l350
  2608  000BD2                     l2245:
  2609                           
  2610                           ;PWM.c: 96:             if(FlagDirectionY==1)
  2611  000BD2  0424               	decf	_FlagDirectionY^0,w,c
  2612  000BD4  1025               	iorwf	(_FlagDirectionY+1)^0,w,c
  2613  000BD6  A4D8               	btfss	status,2,c
  2614  000BD8  EFF0  F005         	goto	u1021
  2615  000BDC  EFF2  F005         	goto	u1020
  2616  000BE0                     u1021:
  2617  000BE0  EFF8  F005         	goto	l350
  2618  000BE4                     u1020:
  2619  000BE4                     
  2620                           ;PWM.c: 97:             {;PWM.c: 98:                 CoordAntY=CoordAntY+CoordRelatY;
  2621  000BE4  503D               	movf	_CoordAntY^0,w,c
  2622  000BE6  2432               	addwf	_CoordRelatY^0,w,c
  2623  000BE8  6E3D               	movwf	_CoordAntY^0,c
  2624  000BEA  503E               	movf	(_CoordAntY+1)^0,w,c
  2625  000BEC  2033               	addwfc	(_CoordRelatY+1)^0,w,c
  2626  000BEE  6E3E               	movwf	(_CoordAntY+1)^0,c
  2627  000BF0                     l350:
  2628  000BF0  0012               	return		;funcret
  2629  000BF2                     __end_of_PWM:
  2630                           	opt callstack 0
  2631                           
  2632 ;; *************** function ___wmul *****************
  2633 ;; Defined at:
  2634 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  multiplier      2    3[COMRAM] unsigned int 
  2637 ;;  multiplicand    2    5[COMRAM] unsigned int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  product         2    7[COMRAM] unsigned int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    3[COMRAM] unsigned int 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, prodl, prodh
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2649 ;;      Params:         4       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    4
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_PWM
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text17
  2664  00150C                     __ptext17:
  2665                           	opt callstack 0
  2666  00150C                     ___wmul:
  2667                           	opt callstack 24
  2668  00150C  5004               	movf	___wmul@multiplier^0,w,c
  2669  00150E  0206               	mulwf	___wmul@multiplicand^0,c
  2670  001510  CFF3 F008          	movff	prodl,___wmul@product
  2671  001514  CFF4 F009          	movff	prodh,___wmul@product+1
  2672  001518  5004               	movf	___wmul@multiplier^0,w,c
  2673  00151A  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  2674  00151C  50F3               	movf	243,w,c
  2675  00151E  2609               	addwf	(___wmul@product+1)^0,f,c
  2676  001520  5005               	movf	(___wmul@multiplier+1)^0,w,c
  2677  001522  0206               	mulwf	___wmul@multiplicand^0,c
  2678  001524  50F3               	movf	243,w,c
  2679  001526  2609               	addwf	(___wmul@product+1)^0,f,c
  2680  001528  C008  F004         	movff	___wmul@product,?___wmul
  2681  00152C  C009  F005         	movff	___wmul@product+1,?___wmul+1
  2682  001530  0012               	return		;funcret
  2683  001532                     __end_of___wmul:
  2684                           	opt callstack 0
  2685                           
  2686 ;; *************** function _ContarPulsos *****************
  2687 ;; Defined at:
  2688 ;;		line 104 in file "PWM.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  pasos           2    3[COMRAM] int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2702 ;;      Params:         2       0       0       0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2705 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2706 ;;Total ram usage:        2 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    5
  2709 ;; This function calls:
  2710 ;;		_OneShot
  2711 ;;		_ResetOneShot
  2712 ;; This function is called by:
  2713 ;;		_PWM
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text18
  2718  001290                     __ptext18:
  2719                           	opt callstack 0
  2720  001290                     _ContarPulsos:
  2721                           	opt callstack 23
  2722  001290                     
  2723                           ;PWM.c: 104: void ContarPulsos(int pasos);PWM.c: 105: {;PWM.c: 106:     ActualSteps=0;
  2724  001290  0E00               	movlw	0
  2725  001292  6E2F               	movwf	(_ActualSteps+1)^0,c
  2726  001294  0E00               	movlw	0
  2727  001296  6E2E               	movwf	_ActualSteps^0,c
  2728                           
  2729                           ;PWM.c: 107:     ons=0;
  2730  001298  0E00               	movlw	0
  2731  00129A  6E2D               	movwf	(_ons+1)^0,c
  2732  00129C  0E00               	movlw	0
  2733  00129E  6E2C               	movwf	_ons^0,c
  2734  0012A0                     
  2735                           ;PWM.c: 108:     PORTDbits.RD2= 0;
  2736  0012A0  9483               	bcf	131,2,c	;volatile
  2737  0012A2                     
  2738                           ;PWM.c: 109:     PORTDbits.RD3= 0;
  2739  0012A2  9683               	bcf	131,3,c	;volatile
  2740                           
  2741                           ;PWM.c: 110:     while(ActualSteps< pasos)
  2742  0012A4  EF68  F009         	goto	l2025
  2743  0012A8                     l354:
  2744                           
  2745                           ;PWM.c: 111:     {;PWM.c: 112:         if (PORTCbits.CCP1==1)
  2746  0012A8  A482               	btfss	130,2,c	;volatile
  2747  0012AA  EF59  F009         	goto	u791
  2748  0012AE  EF5B  F009         	goto	u790
  2749  0012B2                     u791:
  2750  0012B2  EF5D  F009         	goto	l2021
  2751  0012B6                     u790:
  2752  0012B6                     
  2753                           ;PWM.c: 113:         {;PWM.c: 114:             OneShot();
  2754  0012B6  EC2A  F00A         	call	_OneShot	;wreg free
  2755  0012BA                     l2021:
  2756                           
  2757                           ;PWM.c: 116:         if(ons==1)
  2758  0012BA  042C               	decf	_ons^0,w,c
  2759  0012BC  102D               	iorwf	(_ons+1)^0,w,c
  2760  0012BE  A4D8               	btfss	status,2,c
  2761  0012C0  EF64  F009         	goto	u801
  2762  0012C4  EF66  F009         	goto	u800
  2763  0012C8                     u801:
  2764  0012C8  EF68  F009         	goto	l2025
  2765  0012CC                     u800:
  2766  0012CC                     
  2767                           ;PWM.c: 117:         {;PWM.c: 118:             ResetOneShot();
  2768  0012CC  EC5C  F00A         	call	_ResetOneShot	;wreg free
  2769  0012D0                     l2025:
  2770                           
  2771                           ;PWM.c: 110:     while(ActualSteps< pasos)
  2772  0012D0  5004               	movf	ContarPulsos@pasos^0,w,c
  2773  0012D2  5C2E               	subwf	_ActualSteps^0,w,c
  2774  0012D4  5005               	movf	(ContarPulsos@pasos+1)^0,w,c
  2775  0012D6  582F               	subwfb	(_ActualSteps+1)^0,w,c
  2776  0012D8  A0D8               	btfss	status,0,c
  2777  0012DA  EF71  F009         	goto	u811
  2778  0012DE  EF73  F009         	goto	u810
  2779  0012E2                     u811:
  2780  0012E2  EF54  F009         	goto	l354
  2781  0012E6                     u810:
  2782  0012E6                     
  2783                           ;PWM.c: 122:     PORTDbits.RD2= 1;
  2784  0012E6  8483               	bsf	131,2,c	;volatile
  2785                           
  2786                           ;PWM.c: 123:     PORTDbits.RD3= 1;
  2787  0012E8  8683               	bsf	131,3,c	;volatile
  2788  0012EA  0012               	return		;funcret
  2789  0012EC                     __end_of_ContarPulsos:
  2790                           	opt callstack 0
  2791                           
  2792 ;; *************** function _ResetOneShot *****************
  2793 ;; Defined at:
  2794 ;;		line 142 in file "PWM.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    4
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_ContarPulsos
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text19
  2823  0014B8                     __ptext19:
  2824                           	opt callstack 0
  2825  0014B8                     _ResetOneShot:
  2826                           	opt callstack 23
  2827  0014B8                     
  2828                           ;PWM.c: 144:     if(PORTCbits.CCP1==1)
  2829  0014B8  A482               	btfss	130,2,c	;volatile
  2830  0014BA  EF61  F00A         	goto	u51
  2831  0014BE  EF63  F00A         	goto	u50
  2832  0014C2                     u51:
  2833  0014C2  EF65  F00A         	goto	l366
  2834  0014C6                     u50:
  2835  0014C6  EF70  F00A         	goto	l367
  2836  0014CA                     l366:
  2837                           
  2838                           ;PWM.c: 148:     if(PORTCbits.CCP1==0)
  2839  0014CA  B482               	btfsc	130,2,c	;volatile
  2840  0014CC  EF6A  F00A         	goto	u61
  2841  0014D0  EF6C  F00A         	goto	u60
  2842  0014D4                     u61:
  2843  0014D4  EF70  F00A         	goto	l367
  2844  0014D8                     u60:
  2845  0014D8                     
  2846                           ;PWM.c: 149:     {;PWM.c: 150:         ons=0;
  2847  0014D8  0E00               	movlw	0
  2848  0014DA  6E2D               	movwf	(_ons+1)^0,c
  2849  0014DC  0E00               	movlw	0
  2850  0014DE  6E2C               	movwf	_ons^0,c
  2851  0014E0                     l367:
  2852  0014E0  0012               	return		;funcret
  2853  0014E2                     __end_of_ResetOneShot:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _OneShot *****************
  2857 ;; Defined at:
  2858 ;;		line 128 in file "PWM.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    4
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_ContarPulsos
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text20
  2887  001454                     __ptext20:
  2888                           	opt callstack 0
  2889  001454                     _OneShot:
  2890                           	opt callstack 23
  2891  001454                     
  2892                           ;PWM.c: 130:     if(ons==1)
  2893  001454  042C               	decf	_ons^0,w,c
  2894  001456  102D               	iorwf	(_ons+1)^0,w,c
  2895  001458  A4D8               	btfss	status,2,c
  2896  00145A  EF31  F00A         	goto	u31
  2897  00145E  EF33  F00A         	goto	u30
  2898  001462                     u31:
  2899  001462  EF35  F00A         	goto	l361
  2900  001466                     u30:
  2901  001466  EF42  F00A         	goto	l362
  2902  00146A                     l361:
  2903                           
  2904                           ;PWM.c: 134:     if(PORTCbits.CCP1==1)
  2905  00146A  A482               	btfss	130,2,c	;volatile
  2906  00146C  EF3A  F00A         	goto	u41
  2907  001470  EF3C  F00A         	goto	u40
  2908  001474                     u41:
  2909  001474  EF42  F00A         	goto	l362
  2910  001478                     u40:
  2911  001478                     
  2912                           ;PWM.c: 135:     {;PWM.c: 136:         ActualSteps++;
  2913  001478  4A2E               	infsnz	_ActualSteps^0,f,c
  2914  00147A  2A2F               	incf	(_ActualSteps+1)^0,f,c
  2915  00147C                     
  2916                           ;PWM.c: 137:         ons=1;
  2917  00147C  0E00               	movlw	0
  2918  00147E  6E2D               	movwf	(_ons+1)^0,c
  2919  001480  0E01               	movlw	1
  2920  001482  6E2C               	movwf	_ons^0,c
  2921  001484                     l362:
  2922  001484  0012               	return		;funcret
  2923  001486                     __end_of_OneShot:
  2924                           	opt callstack 0
  2925                           
  2926 ;; *************** function _Configuracion *****************
  2927 ;; Defined at:
  2928 ;;		line 15 in file "CONFIGUR.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    6
  2949 ;; This function calls:
  2950 ;;		_UARTConfi
  2951 ;; This function is called by:
  2952 ;;		_main
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text21
  2957  001232                     __ptext21:
  2958                           	opt callstack 0
  2959  001232                     _Configuracion:
  2960                           	opt callstack 24
  2961  001232                     
  2962                           ;CONFIGUR.c: 19:    OSCCON=0x72;
  2963  001232  0E72               	movlw	114
  2964  001234  6ED3               	movwf	211,c	;volatile
  2965  001236                     
  2966                           ;CONFIGUR.c: 23:    CMCON = 0xFF;
  2967  001236  68B4               	setf	180,c	;volatile
  2968  001238                     
  2969                           ;CONFIGUR.c: 24:    CVRCONbits.CVREN = 0;
  2970  001238  9EB5               	bcf	181,7,c	;volatile
  2971                           
  2972                           ;CONFIGUR.c: 25:    ADCON1 = 0x0F;
  2973  00123A  0E0F               	movlw	15
  2974  00123C  6EC1               	movwf	193,c	;volatile
  2975                           
  2976                           ;CONFIGUR.c: 29:    PORTD = 0x00;
  2977  00123E  0E00               	movlw	0
  2978  001240  6E83               	movwf	131,c	;volatile
  2979                           
  2980                           ;CONFIGUR.c: 30:    LATD = 0x00;
  2981  001242  0E00               	movlw	0
  2982  001244  6E8C               	movwf	140,c	;volatile
  2983                           
  2984                           ;CONFIGUR.c: 31:    TRISD = 0x00;
  2985  001246  0E00               	movlw	0
  2986  001248  6E95               	movwf	149,c	;volatile
  2987                           
  2988                           ;CONFIGUR.c: 33:    PORTC = 0x00;
  2989  00124A  0E00               	movlw	0
  2990  00124C  6E82               	movwf	130,c	;volatile
  2991                           
  2992                           ;CONFIGUR.c: 34:    LATC= 0x00;
  2993  00124E  0E00               	movlw	0
  2994  001250  6E8B               	movwf	139,c	;volatile
  2995                           
  2996                           ;CONFIGUR.c: 35:    TRISC= 0x00;
  2997  001252  0E00               	movlw	0
  2998  001254  6E94               	movwf	148,c	;volatile
  2999                           
  3000                           ;CONFIGUR.c: 37:    PORTB = 0x00;
  3001  001256  0E00               	movlw	0
  3002  001258  6E81               	movwf	129,c	;volatile
  3003                           
  3004                           ;CONFIGUR.c: 38:    LATB= 0x00;
  3005  00125A  0E00               	movlw	0
  3006  00125C  6E8A               	movwf	138,c	;volatile
  3007  00125E                     
  3008                           ;CONFIGUR.c: 39:    TRISB= 0xFF;
  3009  00125E  6893               	setf	147,c	;volatile
  3010  001260                     
  3011                           ;CONFIGUR.c: 43:    UARTConfi(9600);
  3012  001260  0E25               	movlw	37
  3013  001262  6E13               	movwf	(UARTConfi@BAUD+1)^0,c
  3014  001264  0E80               	movlw	128
  3015  001266  6E12               	movwf	UARTConfi@BAUD^0,c
  3016  001268  EC12  F008         	call	_UARTConfi	;wreg free
  3017  00126C                     
  3018                           ;CONFIGUR.c: 44:     TRISC=0X00;
  3019  00126C  0E00               	movlw	0
  3020  00126E  6E94               	movwf	148,c	;volatile
  3021  001270                     
  3022                           ;CONFIGUR.c: 48:      PR2 = 0xF9;
  3023  001270  0EF9               	movlw	249
  3024  001272  6ECB               	movwf	203,c	;volatile
  3025  001274                     
  3026                           ;CONFIGUR.c: 51:     CCP1CON = 0x0C;
  3027  001274  0E0C               	movlw	12
  3028  001276  6EBD               	movwf	189,c	;volatile
  3029  001278                     
  3030                           ;CONFIGUR.c: 52:     CCPR1L = 0x7D;
  3031  001278  0E7D               	movlw	125
  3032  00127A  6EBE               	movwf	190,c	;volatile
  3033  00127C                     
  3034                           ;CONFIGUR.c: 55:     CCP2CON = 0x0C;
  3035  00127C  0E0C               	movlw	12
  3036  00127E  6EBA               	movwf	186,c	;volatile
  3037  001280                     
  3038                           ;CONFIGUR.c: 56:     CCPR2L = 0x7D;
  3039  001280  0E7D               	movlw	125
  3040  001282  6EBB               	movwf	187,c	;volatile
  3041  001284                     
  3042                           ;CONFIGUR.c: 59:     T2CON = 0x03;
  3043  001284  0E03               	movlw	3
  3044  001286  6ECA               	movwf	202,c	;volatile
  3045  001288                     
  3046                           ;CONFIGUR.c: 60:     TMR2 = 0;
  3047  001288  0E00               	movlw	0
  3048  00128A  6ECC               	movwf	204,c	;volatile
  3049  00128C                     
  3050                           ;CONFIGUR.c: 61:     TMR2ON = 1;
  3051  00128C  84CA               	bsf	4042,2,c	;volatile
  3052  00128E  0012               	return		;funcret
  3053  001290                     __end_of_Configuracion:
  3054                           	opt callstack 0
  3055                           
  3056 ;; *************** function _UARTConfi *****************
  3057 ;; Defined at:
  3058 ;;		line 15 in file "UART.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  BAUD            2   17[COMRAM] int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3072 ;;      Params:         2       0       0       0       0       0       0       0       0
  3073 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3075 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3076 ;;Total ram usage:        6 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    5
  3079 ;; This function calls:
  3080 ;;		___aldiv
  3081 ;; This function is called by:
  3082 ;;		_Configuracion
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text22
  3087  001024                     __ptext22:
  3088                           	opt callstack 0
  3089  001024                     _UARTConfi:
  3090                           	opt callstack 24
  3091  001024                     
  3092                           ;UART.c: 17:     TRISCbits.RC6=0;
  3093  001024  9C94               	bcf	148,6,c	;volatile
  3094                           
  3095                           ;UART.c: 18:     TRISCbits.RC7=1;
  3096  001026  8E94               	bsf	148,7,c	;volatile
  3097  001028                     
  3098                           ;UART.c: 20:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3099  001028  C012  F008         	movff	UARTConfi@BAUD,___aldiv@divisor
  3100  00102C  C013  F009         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
  3101  001030  0E00               	movlw	0
  3102  001032  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
  3103  001034  0EFF               	movlw	-1
  3104  001036  6E0A               	movwf	(___aldiv@divisor+2)^0,c
  3105  001038  6E0B               	movwf	(___aldiv@divisor+3)^0,c
  3106  00103A  0E00               	movlw	0
  3107  00103C  6E04               	movwf	___aldiv@dividend^0,c
  3108  00103E  0E12               	movlw	18
  3109  001040  6E05               	movwf	(___aldiv@dividend+1)^0,c
  3110  001042  0E7A               	movlw	122
  3111  001044  6E06               	movwf	(___aldiv@dividend+2)^0,c
  3112  001046  0E00               	movlw	0
  3113  001048  6E07               	movwf	(___aldiv@dividend+3)^0,c
  3114  00104A  ECB5  F006         	call	___aldiv	;wreg free
  3115  00104E  C004  F014         	movff	?___aldiv,_UARTConfi$1999
  3116  001052  C005  F015         	movff	?___aldiv+1,_UARTConfi$1999+1
  3117  001056  C006  F016         	movff	?___aldiv+2,_UARTConfi$1999+2
  3118  00105A  C007  F017         	movff	?___aldiv+3,_UARTConfi$1999+3
  3119                           
  3120                           ;UART.c: 20:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3121  00105E  C014  F004         	movff	_UARTConfi$1999,___aldiv@dividend
  3122  001062  C015  F005         	movff	_UARTConfi$1999+1,___aldiv@dividend+1
  3123  001066  C016  F006         	movff	_UARTConfi$1999+2,___aldiv@dividend+2
  3124  00106A  C017  F007         	movff	_UARTConfi$1999+3,___aldiv@dividend+3
  3125  00106E  0E40               	movlw	64
  3126  001070  6E08               	movwf	___aldiv@divisor^0,c
  3127  001072  0E00               	movlw	0
  3128  001074  6E09               	movwf	(___aldiv@divisor+1)^0,c
  3129  001076  0E00               	movlw	0
  3130  001078  6E0A               	movwf	(___aldiv@divisor+2)^0,c
  3131  00107A  0E00               	movlw	0
  3132  00107C  6E0B               	movwf	(___aldiv@divisor+3)^0,c
  3133  00107E  ECB5  F006         	call	___aldiv	;wreg free
  3134  001082  0404               	decf	?___aldiv^0,w,c
  3135  001084  6EAF               	movwf	175,c	;volatile
  3136  001086                     
  3137                           ;UART.c: 21:     TXSTAbits.BRGH = 0;
  3138  001086  94AC               	bcf	172,2,c	;volatile
  3139  001088                     
  3140                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  3141  001088  98AC               	bcf	172,4,c	;volatile
  3142  00108A                     
  3143                           ;UART.c: 23:     RCSTAbits.SPEN = 1;
  3144  00108A  8EAB               	bsf	171,7,c	;volatile
  3145  00108C                     
  3146                           ;UART.c: 26:     TXSTAbits.TX9 = 0;
  3147  00108C  9CAC               	bcf	172,6,c	;volatile
  3148  00108E                     
  3149                           ;UART.c: 27:     TXSTAbits.TXEN = 1;
  3150  00108E  8AAC               	bsf	172,5,c	;volatile
  3151  001090                     
  3152                           ;UART.c: 30:     RCSTAbits.RC9 = 0;
  3153  001090  9CAB               	bcf	171,6,c	;volatile
  3154  001092                     
  3155                           ;UART.c: 31:     RCSTAbits.CREN = 1;
  3156  001092  88AB               	bsf	171,4,c	;volatile
  3157  001094  0012               	return		;funcret
  3158  001096                     __end_of_UARTConfi:
  3159                           	opt callstack 0
  3160                           
  3161 ;; *************** function ___aldiv *****************
  3162 ;; Defined at:
  3163 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  dividend        4    3[COMRAM] long 
  3166 ;;  divisor         4    7[COMRAM] long 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  quotient        4   13[COMRAM] long 
  3169 ;;  sign            1   12[COMRAM] unsigned char 
  3170 ;;  counter         1   11[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  4    3[COMRAM] long 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3180 ;;      Params:         8       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3183 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:       14 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    4
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_UARTConfi
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text23
  3195  000D6A                     __ptext23:
  3196                           	opt callstack 0
  3197  000D6A                     ___aldiv:
  3198                           	opt callstack 24
  3199  000D6A  0E00               	movlw	0
  3200  000D6C  6E0D               	movwf	___aldiv@sign^0,c
  3201  000D6E  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
  3202  000D70  EFBE  F006         	goto	u820
  3203  000D74  EFBC  F006         	goto	u821
  3204  000D78                     u821:
  3205  000D78  EFC8  F006         	goto	l2041
  3206  000D7C                     u820:
  3207  000D7C  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
  3208  000D7E  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
  3209  000D80  1E09               	comf	(___aldiv@divisor+1)^0,f,c
  3210  000D82  6C08               	negf	___aldiv@divisor^0,c
  3211  000D84  0E00               	movlw	0
  3212  000D86  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
  3213  000D88  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
  3214  000D8A  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
  3215  000D8C  0E01               	movlw	1
  3216  000D8E  6E0D               	movwf	___aldiv@sign^0,c
  3217  000D90                     l2041:
  3218  000D90  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
  3219  000D92  EFCF  F006         	goto	u830
  3220  000D96  EFCD  F006         	goto	u831
  3221  000D9A                     u831:
  3222  000D9A  EFD9  F006         	goto	l2047
  3223  000D9E                     u830:
  3224  000D9E  1E07               	comf	(___aldiv@dividend+3)^0,f,c
  3225  000DA0  1E06               	comf	(___aldiv@dividend+2)^0,f,c
  3226  000DA2  1E05               	comf	(___aldiv@dividend+1)^0,f,c
  3227  000DA4  6C04               	negf	___aldiv@dividend^0,c
  3228  000DA6  0E00               	movlw	0
  3229  000DA8  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
  3230  000DAA  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
  3231  000DAC  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
  3232  000DAE  0E01               	movlw	1
  3233  000DB0  1A0D               	xorwf	___aldiv@sign^0,f,c
  3234  000DB2                     l2047:
  3235  000DB2  0E00               	movlw	0
  3236  000DB4  6E0E               	movwf	___aldiv@quotient^0,c
  3237  000DB6  0E00               	movlw	0
  3238  000DB8  6E0F               	movwf	(___aldiv@quotient+1)^0,c
  3239  000DBA  0E00               	movlw	0
  3240  000DBC  6E10               	movwf	(___aldiv@quotient+2)^0,c
  3241  000DBE  0E00               	movlw	0
  3242  000DC0  6E11               	movwf	(___aldiv@quotient+3)^0,c
  3243  000DC2  5008               	movf	___aldiv@divisor^0,w,c
  3244  000DC4  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
  3245  000DC6  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
  3246  000DC8  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
  3247  000DCA  B4D8               	btfsc	status,2,c
  3248  000DCC  EFEA  F006         	goto	u841
  3249  000DD0  EFEC  F006         	goto	u840
  3250  000DD4                     u841:
  3251  000DD4  EF22  F007         	goto	l2069
  3252  000DD8                     u840:
  3253  000DD8  0E01               	movlw	1
  3254  000DDA  6E0C               	movwf	___aldiv@counter^0,c
  3255  000DDC  EFF6  F006         	goto	l2055
  3256  000DE0                     l2053:
  3257  000DE0  90D8               	bcf	status,0,c
  3258  000DE2  3608               	rlcf	___aldiv@divisor^0,f,c
  3259  000DE4  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
  3260  000DE6  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
  3261  000DE8  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
  3262  000DEA  2A0C               	incf	___aldiv@counter^0,f,c
  3263  000DEC                     l2055:
  3264  000DEC  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
  3265  000DEE  EFFB  F006         	goto	u851
  3266  000DF2  EFFD  F006         	goto	u850
  3267  000DF6                     u851:
  3268  000DF6  EFF0  F006         	goto	l2053
  3269  000DFA                     u850:
  3270  000DFA                     l2057:
  3271  000DFA  90D8               	bcf	status,0,c
  3272  000DFC  360E               	rlcf	___aldiv@quotient^0,f,c
  3273  000DFE  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
  3274  000E00  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
  3275  000E02  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
  3276  000E04  5008               	movf	___aldiv@divisor^0,w,c
  3277  000E06  5C04               	subwf	___aldiv@dividend^0,w,c
  3278  000E08  5009               	movf	(___aldiv@divisor+1)^0,w,c
  3279  000E0A  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
  3280  000E0C  500A               	movf	(___aldiv@divisor+2)^0,w,c
  3281  000E0E  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
  3282  000E10  500B               	movf	(___aldiv@divisor+3)^0,w,c
  3283  000E12  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
  3284  000E14  A0D8               	btfss	status,0,c
  3285  000E16  EF0F  F007         	goto	u861
  3286  000E1A  EF11  F007         	goto	u860
  3287  000E1E                     u861:
  3288  000E1E  EF1A  F007         	goto	l2065
  3289  000E22                     u860:
  3290  000E22  5008               	movf	___aldiv@divisor^0,w,c
  3291  000E24  5E04               	subwf	___aldiv@dividend^0,f,c
  3292  000E26  5009               	movf	(___aldiv@divisor+1)^0,w,c
  3293  000E28  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
  3294  000E2A  500A               	movf	(___aldiv@divisor+2)^0,w,c
  3295  000E2C  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
  3296  000E2E  500B               	movf	(___aldiv@divisor+3)^0,w,c
  3297  000E30  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
  3298  000E32  800E               	bsf	___aldiv@quotient^0,0,c
  3299  000E34                     l2065:
  3300  000E34  90D8               	bcf	status,0,c
  3301  000E36  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
  3302  000E38  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
  3303  000E3A  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
  3304  000E3C  3208               	rrcf	___aldiv@divisor^0,f,c
  3305  000E3E  2E0C               	decfsz	___aldiv@counter^0,f,c
  3306  000E40  EFFD  F006         	goto	l2057
  3307  000E44                     l2069:
  3308  000E44  500D               	movf	___aldiv@sign^0,w,c
  3309  000E46  B4D8               	btfsc	status,2,c
  3310  000E48  EF28  F007         	goto	u871
  3311  000E4C  EF2A  F007         	goto	u870
  3312  000E50                     u871:
  3313  000E50  EF32  F007         	goto	l2073
  3314  000E54                     u870:
  3315  000E54  1E11               	comf	(___aldiv@quotient+3)^0,f,c
  3316  000E56  1E10               	comf	(___aldiv@quotient+2)^0,f,c
  3317  000E58  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
  3318  000E5A  6C0E               	negf	___aldiv@quotient^0,c
  3319  000E5C  0E00               	movlw	0
  3320  000E5E  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
  3321  000E60  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
  3322  000E62  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
  3323  000E64                     l2073:
  3324  000E64  C00E  F004         	movff	___aldiv@quotient,?___aldiv
  3325  000E68  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
  3326  000E6C  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
  3327  000E70  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
  3328  000E74  0012               	return		;funcret
  3329  000E76                     __end_of___aldiv:
  3330                           	opt callstack 0
  3331                           
  3332 ;; *************** function _INT_ISR *****************
  3333 ;; Defined at:
  3334 ;;		line 14 in file "main.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3351 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        1 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    3
  3355 ;; This function calls:
  3356 ;;		_GoToInitialXPosition
  3357 ;;		_GoToInitialYPosition
  3358 ;;		i2_UARTWrite
  3359 ;; This function is called by:
  3360 ;;		Interrupt level 2
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	intcode
  3365  000008                     __pintcode:
  3366                           	opt callstack 0
  3367  000008                     _INT_ISR:
  3368                           	opt callstack 23
  3369                           
  3370                           ;incstack = 0
  3371  000008  8243               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3372  00000A  ED8F  F007         	call	int_func,f	;refresh shadow registers
  3373                           
  3374                           	psect	intcode_body
  3375  000F1E                     __pintcode_body:
  3376                           	opt callstack 23
  3377  000F1E                     int_func:
  3378                           	opt callstack 23
  3379  000F1E  0006               	pop		; remove dummy address from shadow register refresh
  3380  000F20                     
  3381                           ;main.c: 16:     if(INTCONbits.INT0IF == 1)
  3382  000F20  A2F2               	btfss	242,1,c	;volatile
  3383  000F22  EF95  F007         	goto	i2u118_41
  3384  000F26  EF97  F007         	goto	i2u118_40
  3385  000F2A                     i2u118_41:
  3386  000F2A  EFB3  F007         	goto	i2l259
  3387  000F2E                     i2u118_40:
  3388  000F2E                     
  3389                           ;main.c: 17:     {;main.c: 18:         UARTWrite(0x45);
  3390  000F2E  0E45               	movlw	69
  3391  000F30  ECF8  F00A         	call	i2_UARTWrite
  3392  000F34                     
  3393                           ;main.c: 19:         GoToInitialXPosition();
  3394  000F34  ECB9  F00A         	call	_GoToInitialXPosition	;wreg free
  3395  000F38                     
  3396                           ;main.c: 20:         if(PORTBbits.RB0 == 0)
  3397  000F38  B081               	btfsc	129,0,c	;volatile
  3398  000F3A  EFA1  F007         	goto	i2u119_41
  3399  000F3E  EFA3  F007         	goto	i2u119_40
  3400  000F42                     i2u119_41:
  3401  000F42  EFB3  F007         	goto	i2l259
  3402  000F46                     i2u119_40:
  3403  000F46                     
  3404                           ;main.c: 21:         {;main.c: 22:             _delay((unsigned long)((15)*(8000000L/400
      +                          0.0)));
  3405  000F46  0E27               	movlw	39
  3406  000F48  6E03               	movwf	??_INT_ISR^0,c
  3407  000F4A  0EF5               	movlw	245
  3408  000F4C                     i2u126_47:
  3409  000F4C  2EE8               	decfsz	wreg,f,c
  3410  000F4E  D7FE               	bra	i2u126_47
  3411  000F50  2E03               	decfsz	??_INT_ISR^0,f,c
  3412  000F52  D7FC               	bra	i2u126_47
  3413  000F54  F000               	nop	
  3414  000F56                     
  3415                           ;main.c: 23:             if(PORTBbits.RB0 == 0)
  3416  000F56  B081               	btfsc	129,0,c	;volatile
  3417  000F58  EFB0  F007         	goto	i2u120_41
  3418  000F5C  EFB2  F007         	goto	i2u120_40
  3419  000F60                     i2u120_41:
  3420  000F60  EFB3  F007         	goto	i2l259
  3421  000F64                     i2u120_40:
  3422  000F64                     
  3423                           ;main.c: 24:             {;main.c: 25:                 INTCONbits.INT0IF = 0;
  3424  000F64  92F2               	bcf	242,1,c	;volatile
  3425  000F66                     i2l259:
  3426                           
  3427                           ;main.c: 30:     if(INTCON3bits.INT1IF == 1)
  3428  000F66  A0F0               	btfss	240,0,c	;volatile
  3429  000F68  EFB8  F007         	goto	i2u121_41
  3430  000F6C  EFBA  F007         	goto	i2u121_40
  3431  000F70                     i2u121_41:
  3432  000F70  EFD6  F007         	goto	i2l265
  3433  000F74                     i2u121_40:
  3434  000F74                     
  3435                           ;main.c: 31:     {;main.c: 32:         UARTWrite(0x65);
  3436  000F74  0E65               	movlw	101
  3437  000F76  ECF8  F00A         	call	i2_UARTWrite
  3438  000F7A                     
  3439                           ;main.c: 33:         GoToInitialYPosition();
  3440  000F7A  ECAA  F00A         	call	_GoToInitialYPosition	;wreg free
  3441  000F7E                     
  3442                           ;main.c: 34:         if(PORTBbits.RB1 == 0)
  3443  000F7E  B281               	btfsc	129,1,c	;volatile
  3444  000F80  EFC4  F007         	goto	i2u122_41
  3445  000F84  EFC6  F007         	goto	i2u122_40
  3446  000F88                     i2u122_41:
  3447  000F88  EFD6  F007         	goto	i2l265
  3448  000F8C                     i2u122_40:
  3449  000F8C                     
  3450                           ;main.c: 35:         {;main.c: 36:             _delay((unsigned long)((15)*(8000000L/400
      +                          0.0)));
  3451  000F8C  0E27               	movlw	39
  3452  000F8E  6E03               	movwf	??_INT_ISR^0,c
  3453  000F90  0EF5               	movlw	245
  3454  000F92                     i2u127_47:
  3455  000F92  2EE8               	decfsz	wreg,f,c
  3456  000F94  D7FE               	bra	i2u127_47
  3457  000F96  2E03               	decfsz	??_INT_ISR^0,f,c
  3458  000F98  D7FC               	bra	i2u127_47
  3459  000F9A  F000               	nop	
  3460  000F9C                     
  3461                           ;main.c: 37:             if(PORTBbits.RB1 == 0)
  3462  000F9C  B281               	btfsc	129,1,c	;volatile
  3463  000F9E  EFD3  F007         	goto	i2u123_41
  3464  000FA2  EFD5  F007         	goto	i2u123_40
  3465  000FA6                     i2u123_41:
  3466  000FA6  EFD6  F007         	goto	i2l265
  3467  000FAA                     i2u123_40:
  3468  000FAA                     
  3469                           ;main.c: 38:             {;main.c: 39:                 INTCON3bits.INT1IF = 0;
  3470  000FAA  90F0               	bcf	240,0,c	;volatile
  3471  000FAC                     i2l265:
  3472  000FAC  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3473  000FAE  0011               	retfie		f
  3474  000FB0                     __end_of_INT_ISR:
  3475                           	opt callstack 0
  3476                           
  3477 ;; *************** function i2_UARTWrite *****************
  3478 ;; Defined at:
  3479 ;;		line 34 in file "UART.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  data            1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  data            1    0[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        1 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_INT_ISR
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text25
  3507  0015F0                     __ptext25:
  3508                           	opt callstack 0
  3509  0015F0                     i2_UARTWrite:
  3510                           	opt callstack 25
  3511                           
  3512                           ;incstack = 0
  3513                           ;i2UARTWrite@data stored from wreg
  3514  0015F0  6E01               	movwf	i2UARTWrite@data^0,c
  3515  0015F2                     i2l126:
  3516  0015F2  A89E               	btfss	158,4,c	;volatile
  3517  0015F4  EFFE  F00A         	goto	i2u117_41
  3518  0015F8  EF00  F00B         	goto	i2u117_40
  3519  0015FC                     i2u117_41:
  3520  0015FC  EFF9  F00A         	goto	i2l126
  3521  001600                     i2u117_40:
  3522  001600                     
  3523                           ;UART.c: 36:     TXREG= data;
  3524  001600  C001  FFAD         	movff	i2UARTWrite@data,4013	;volatile
  3525  001604  0012               	return		;funcret
  3526  001606                     __end_ofi2_UARTWrite:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _GoToInitialYPosition *****************
  3530 ;; Defined at:
  3531 ;;		line 199 in file "PWM.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    2
  3552 ;; This function calls:
  3553 ;;		i2_ContarPulsos
  3554 ;; This function is called by:
  3555 ;;		_INT_ISR
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text26
  3560  001554                     __ptext26:
  3561                           	opt callstack 0
  3562  001554                     _GoToInitialYPosition:
  3563                           	opt callstack 23
  3564  001554                     
  3565                           ;PWM.c: 201:     PORTDbits.RD0= 1;
  3566  001554  8083               	bsf	131,0,c	;volatile
  3567                           
  3568                           ;PWM.c: 202:     PORTDbits.RD1= 0;
  3569  001556  9283               	bcf	131,1,c	;volatile
  3570  001558                     
  3571                           ;PWM.c: 203:     ContarPulsos(25);
  3572  001558  0E00               	movlw	0
  3573  00155A  6E02               	movwf	(i2ContarPulsos@pasos+1)^0,c
  3574  00155C  0E19               	movlw	25
  3575  00155E  6E01               	movwf	i2ContarPulsos@pasos^0,c
  3576  001560  EC76  F009         	call	i2_ContarPulsos	;wreg free
  3577  001564                     
  3578                           ;PWM.c: 204:     PORTDbits.RD2= 1;
  3579  001564  8483               	bsf	131,2,c	;volatile
  3580  001566                     
  3581                           ;PWM.c: 205:     PORTDbits.RD3= 1;
  3582  001566  8683               	bsf	131,3,c	;volatile
  3583  001568                     
  3584                           ;PWM.c: 206:     CoordAntY = 0;
  3585  001568  0E00               	movlw	0
  3586  00156A  6E3E               	movwf	(_CoordAntY+1)^0,c
  3587  00156C  0E00               	movlw	0
  3588  00156E  6E3D               	movwf	_CoordAntY^0,c
  3589  001570  0012               	return		;funcret
  3590  001572                     __end_of_GoToInitialYPosition:
  3591                           	opt callstack 0
  3592                           
  3593 ;; *************** function _GoToInitialXPosition *****************
  3594 ;; Defined at:
  3595 ;;		line 189 in file "PWM.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    2
  3616 ;; This function calls:
  3617 ;;		i2_ContarPulsos
  3618 ;; This function is called by:
  3619 ;;		_INT_ISR
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text27
  3624  001572                     __ptext27:
  3625                           	opt callstack 0
  3626  001572                     _GoToInitialXPosition:
  3627                           	opt callstack 23
  3628  001572                     
  3629                           ;PWM.c: 191:     PORTDbits.RD0= 0;
  3630  001572  9083               	bcf	131,0,c	;volatile
  3631                           
  3632                           ;PWM.c: 192:     PORTDbits.RD1= 0;
  3633  001574  9283               	bcf	131,1,c	;volatile
  3634  001576                     
  3635                           ;PWM.c: 193:     ContarPulsos(25);
  3636  001576  0E00               	movlw	0
  3637  001578  6E02               	movwf	(i2ContarPulsos@pasos+1)^0,c
  3638  00157A  0E19               	movlw	25
  3639  00157C  6E01               	movwf	i2ContarPulsos@pasos^0,c
  3640  00157E  EC76  F009         	call	i2_ContarPulsos	;wreg free
  3641  001582                     
  3642                           ;PWM.c: 194:     PORTDbits.RD2= 1;
  3643  001582  8483               	bsf	131,2,c	;volatile
  3644  001584                     
  3645                           ;PWM.c: 195:     PORTDbits.RD3= 1;
  3646  001584  8683               	bsf	131,3,c	;volatile
  3647  001586                     
  3648                           ;PWM.c: 196:     CoordAntX = 0;
  3649  001586  0E00               	movlw	0
  3650  001588  6E40               	movwf	(_CoordAntX+1)^0,c
  3651  00158A  0E00               	movlw	0
  3652  00158C  6E3F               	movwf	_CoordAntX^0,c
  3653  00158E  0012               	return		;funcret
  3654  001590                     __end_of_GoToInitialXPosition:
  3655                           	opt callstack 0
  3656                           
  3657 ;; *************** function i2_ContarPulsos *****************
  3658 ;; Defined at:
  3659 ;;		line 104 in file "PWM.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  pasos           2    0[COMRAM] int 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3673 ;;      Params:         2       0       0       0       0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3676 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3677 ;;Total ram usage:        2 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    1
  3680 ;; This function calls:
  3681 ;;		i2_OneShot
  3682 ;;		i2_ResetOneShot
  3683 ;; This function is called by:
  3684 ;;		_GoToInitialXPosition
  3685 ;;		_GoToInitialYPosition
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text28
  3690  0012EC                     __ptext28:
  3691                           	opt callstack 0
  3692  0012EC                     i2_ContarPulsos:
  3693                           	opt callstack 23
  3694  0012EC                     
  3695                           ;PWM.c: 104: void ContarPulsos(int pasos);PWM.c: 105: {;PWM.c: 106:     ActualSteps=0;
  3696  0012EC  0E00               	movlw	0
  3697  0012EE  6E2F               	movwf	(_ActualSteps+1)^0,c
  3698  0012F0  0E00               	movlw	0
  3699  0012F2  6E2E               	movwf	_ActualSteps^0,c
  3700                           
  3701                           ;PWM.c: 107:     ons=0;
  3702  0012F4  0E00               	movlw	0
  3703  0012F6  6E2D               	movwf	(_ons+1)^0,c
  3704  0012F8  0E00               	movlw	0
  3705  0012FA  6E2C               	movwf	_ons^0,c
  3706  0012FC                     
  3707                           ;PWM.c: 108:     PORTDbits.RD2= 0;
  3708  0012FC  9483               	bcf	131,2,c	;volatile
  3709  0012FE                     
  3710                           ;PWM.c: 109:     PORTDbits.RD3= 0;
  3711  0012FE  9683               	bcf	131,3,c	;volatile
  3712                           
  3713                           ;PWM.c: 110:     while(ActualSteps< pasos)
  3714  001300  EF96  F009         	goto	i2l2301
  3715  001304                     i2l354:
  3716                           
  3717                           ;PWM.c: 111:     {;PWM.c: 112:         if (PORTCbits.CCP1==1)
  3718  001304  A482               	btfss	130,2,c	;volatile
  3719  001306  EF87  F009         	goto	i2u109_41
  3720  00130A  EF89  F009         	goto	i2u109_40
  3721  00130E                     i2u109_41:
  3722  00130E  EF8B  F009         	goto	i2l2297
  3723  001312                     i2u109_40:
  3724  001312                     
  3725                           ;PWM.c: 113:         {;PWM.c: 114:             OneShot();
  3726  001312  EC43  F00A         	call	i2_OneShot	;wreg free
  3727  001316                     i2l2297:
  3728                           
  3729                           ;PWM.c: 116:         if(ons==1)
  3730  001316  042C               	decf	_ons^0,w,c
  3731  001318  102D               	iorwf	(_ons+1)^0,w,c
  3732  00131A  A4D8               	btfss	status,2,c
  3733  00131C  EF92  F009         	goto	i2u110_41
  3734  001320  EF94  F009         	goto	i2u110_40
  3735  001324                     i2u110_41:
  3736  001324  EF96  F009         	goto	i2l2301
  3737  001328                     i2u110_40:
  3738  001328                     
  3739                           ;PWM.c: 117:         {;PWM.c: 118:             ResetOneShot();
  3740  001328  EC71  F00A         	call	i2_ResetOneShot	;wreg free
  3741  00132C                     i2l2301:
  3742                           
  3743                           ;PWM.c: 110:     while(ActualSteps< pasos)
  3744  00132C  5001               	movf	i2ContarPulsos@pasos^0,w,c
  3745  00132E  5C2E               	subwf	_ActualSteps^0,w,c
  3746  001330  5002               	movf	(i2ContarPulsos@pasos+1)^0,w,c
  3747  001332  582F               	subwfb	(_ActualSteps+1)^0,w,c
  3748  001334  A0D8               	btfss	status,0,c
  3749  001336  EF9F  F009         	goto	i2u111_41
  3750  00133A  EFA1  F009         	goto	i2u111_40
  3751  00133E                     i2u111_41:
  3752  00133E  EF82  F009         	goto	i2l354
  3753  001342                     i2u111_40:
  3754  001342                     
  3755                           ;PWM.c: 122:     PORTDbits.RD2= 1;
  3756  001342  8483               	bsf	131,2,c	;volatile
  3757                           
  3758                           ;PWM.c: 123:     PORTDbits.RD3= 1;
  3759  001344  8683               	bsf	131,3,c	;volatile
  3760  001346  0012               	return		;funcret
  3761  001348                     __end_ofi2_ContarPulsos:
  3762                           	opt callstack 0
  3763                           
  3764 ;; *************** function i2_ResetOneShot *****************
  3765 ;; Defined at:
  3766 ;;		line 142 in file "PWM.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		i2_ContarPulsos
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text29
  3794  0014E2                     __ptext29:
  3795                           	opt callstack 0
  3796  0014E2                     i2_ResetOneShot:
  3797                           	opt callstack 23
  3798  0014E2                     
  3799                           ;PWM.c: 144:     if(PORTCbits.CCP1==1)
  3800  0014E2  A482               	btfss	130,2,c	;volatile
  3801  0014E4  EF76  F00A         	goto	i2u27_41
  3802  0014E8  EF78  F00A         	goto	i2u27_40
  3803  0014EC                     i2u27_41:
  3804  0014EC  EF7A  F00A         	goto	i2l366
  3805  0014F0                     i2u27_40:
  3806  0014F0  EF85  F00A         	goto	i2l367
  3807  0014F4                     i2l366:
  3808                           
  3809                           ;PWM.c: 148:     if(PORTCbits.CCP1==0)
  3810  0014F4  B482               	btfsc	130,2,c	;volatile
  3811  0014F6  EF7F  F00A         	goto	i2u28_41
  3812  0014FA  EF81  F00A         	goto	i2u28_40
  3813  0014FE                     i2u28_41:
  3814  0014FE  EF85  F00A         	goto	i2l367
  3815  001502                     i2u28_40:
  3816  001502                     
  3817                           ;PWM.c: 149:     {;PWM.c: 150:         ons=0;
  3818  001502  0E00               	movlw	0
  3819  001504  6E2D               	movwf	(_ons+1)^0,c
  3820  001506  0E00               	movlw	0
  3821  001508  6E2C               	movwf	_ons^0,c
  3822  00150A                     i2l367:
  3823  00150A  0012               	return		;funcret
  3824  00150C                     __end_ofi2_ResetOneShot:
  3825                           	opt callstack 0
  3826                           
  3827 ;; *************** function i2_OneShot *****************
  3828 ;; Defined at:
  3829 ;;		line 128 in file "PWM.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		i2_ContarPulsos
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text30
  3857  001486                     __ptext30:
  3858                           	opt callstack 0
  3859  001486                     i2_OneShot:
  3860                           	opt callstack 23
  3861  001486                     
  3862                           ;PWM.c: 130:     if(ons==1)
  3863  001486  042C               	decf	_ons^0,w,c
  3864  001488  102D               	iorwf	(_ons+1)^0,w,c
  3865  00148A  A4D8               	btfss	status,2,c
  3866  00148C  EF4A  F00A         	goto	i2u25_41
  3867  001490  EF4C  F00A         	goto	i2u25_40
  3868  001494                     i2u25_41:
  3869  001494  EF4E  F00A         	goto	i2l361
  3870  001498                     i2u25_40:
  3871  001498  EF5B  F00A         	goto	i2l362
  3872  00149C                     i2l361:
  3873                           
  3874                           ;PWM.c: 134:     if(PORTCbits.CCP1==1)
  3875  00149C  A482               	btfss	130,2,c	;volatile
  3876  00149E  EF53  F00A         	goto	i2u26_41
  3877  0014A2  EF55  F00A         	goto	i2u26_40
  3878  0014A6                     i2u26_41:
  3879  0014A6  EF5B  F00A         	goto	i2l362
  3880  0014AA                     i2u26_40:
  3881  0014AA                     
  3882                           ;PWM.c: 135:     {;PWM.c: 136:         ActualSteps++;
  3883  0014AA  4A2E               	infsnz	_ActualSteps^0,f,c
  3884  0014AC  2A2F               	incf	(_ActualSteps+1)^0,f,c
  3885  0014AE                     
  3886                           ;PWM.c: 137:         ons=1;
  3887  0014AE  0E00               	movlw	0
  3888  0014B0  6E2D               	movwf	(_ons+1)^0,c
  3889  0014B2  0E01               	movlw	1
  3890  0014B4  6E2C               	movwf	_ons^0,c
  3891  0014B6                     i2l362:
  3892  0014B6  0012               	return		;funcret
  3893  0014B8                     __end_ofi2_OneShot:
  3894                           	opt callstack 0
  3895                           
  3896                           	psect	rparam
  3897  0000                     
  3898                           	psect	temp
  3899  000043                     btemp:
  3900                           	opt callstack 0
  3901  000043                     	ds	1
  3902  0000                     int$flags	set	btemp
  3903  0000                     wtemp8	set	btemp+1
  3904  0000                     ttemp5	set	btemp+1
  3905  0000                     ttemp6	set	btemp+4
  3906  0000                     ttemp7	set	btemp+8
  3907                           tosu	equ	0xFFF
  3908                           tosh	equ	0xFFE
  3909                           tosl	equ	0xFFD
  3910                           stkptr	equ	0xFFC
  3911                           pclatu	equ	0xFFB
  3912                           pclath	equ	0xFFA
  3913                           pcl	equ	0xFF9
  3914                           tblptru	equ	0xFF8
  3915                           tblptrh	equ	0xFF7
  3916                           tblptrl	equ	0xFF6
  3917                           tablat	equ	0xFF5
  3918                           prodh	equ	0xFF4
  3919                           prodl	equ	0xFF3
  3920                           indf0	equ	0xFEF
  3921                           postinc0	equ	0xFEE
  3922                           postdec0	equ	0xFED
  3923                           preinc0	equ	0xFEC
  3924                           plusw0	equ	0xFEB
  3925                           fsr0h	equ	0xFEA
  3926                           fsr0l	equ	0xFE9
  3927                           wreg	equ	0xFE8
  3928                           indf1	equ	0xFE7
  3929                           postinc1	equ	0xFE6
  3930                           postdec1	equ	0xFE5
  3931                           preinc1	equ	0xFE4
  3932                           plusw1	equ	0xFE3
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           bsr	equ	0xFE0
  3936                           indf2	equ	0xFDF
  3937                           postinc2	equ	0xFDE
  3938                           postdec2	equ	0xFDD
  3939                           preinc2	equ	0xFDC
  3940                           plusw2	equ	0xFDB
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8


Data Sizes:
    Strings     181
    Constant    0
    Data        0
    BSS         25
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    myPrintf@PointString	PTR unsigned char  size(2) Largest target is 37
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[17]), STR_6(CODE[27]), 
		 -> STR_5(CODE[37]), STR_4(CODE[34]), STR_3(CODE[29]), STR_2(CODE[14]), 
		 -> STR_1(CODE[11]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _start->_myPrintf
    _end->_myPrintf
    _cmd->_coord
    _coord->_UARTRead
    _Par_Validated->_myPrintf
    _Ins_Validated->_myPrintf
    _Coord_Validated->_myPrintf
    _PrintMyActulPosition->___lwdiv
    ___lwdiv->___lwmod
    _Movement->_myPrintf
    _myPrintf->_UARTWrite
    _PWM->___wmul
    _Configuracion->_UARTConfi
    _UARTConfi->___aldiv

Critical Paths under _INT_ISR in COMRAM

    _GoToInitialYPosition->i2_ContarPulsos
    _GoToInitialXPosition->i2_ContarPulsos

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10695
                      _Configuracion
                           _Movement
               _PrintMyActulPosition
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    6204
                                             33 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0     862
                          _UARTWrite
                           _myPrintf
 ---------------------------------------------------------------------------------
 (2) _end                                                  0     0      0     862
                          _UARTWrite
                           _myPrintf
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  0     0      0    1894
                          _UARTWrite
                              _coord
                           _myPrintf
 ---------------------------------------------------------------------------------
 (3) _coord                                               29    19     10    1032
                                              4 COMRAM    29    19     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        0     0      0     862
                          _UARTWrite
                           _myPrintf
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        0     0      0     862
                          _UARTWrite
                           _myPrintf
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      0     0      0     862
                          _UARTWrite
                           _myPrintf
 ---------------------------------------------------------------------------------
 (1) _PrintMyActulPosition                                12    12      0    2189
                                             15 COMRAM    12    12      0
                          _UARTWrite
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1071
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              8 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Movement                                             2     2      0    1577
                                              9 COMRAM     2     2      0
                                _PWM
                           _myPrintf
 ---------------------------------------------------------------------------------
 (3) _myPrintf                                             5     3      2     840
                                              4 COMRAM     5     3      2
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (4) _UARTWrite                                            1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM                                                  0     0      0     737
                       _ContarPulsos
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _ContarPulsos                                         2     0      2     274
                                              3 COMRAM     2     0      2
                            _OneShot
                       _ResetOneShot
 ---------------------------------------------------------------------------------
 (4) _ResetOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _OneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0     725
                          _UARTConfi
 ---------------------------------------------------------------------------------
 (2) _UARTConfi                                            6     4      2     725
                                             17 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              1     1      0     170
                                              2 COMRAM     1     1      0
               _GoToInitialXPosition
               _GoToInitialYPosition
                        i2_UARTWrite
 ---------------------------------------------------------------------------------
 (6) i2_UARTWrite                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GoToInitialYPosition                                 0     0      0      74
                     i2_ContarPulsos
 ---------------------------------------------------------------------------------
 (6) _GoToInitialXPosition                                 0     0      0      74
                     i2_ContarPulsos
 ---------------------------------------------------------------------------------
 (7) i2_ContarPulsos                                       2     0      2      74
                                              0 COMRAM     2     0      2
                          i2_OneShot
                     i2_ResetOneShot
 ---------------------------------------------------------------------------------
 (8) i2_ResetOneShot                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_OneShot                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
     _UARTConfi
       ___aldiv
   _Movement
     _PWM
       _ContarPulsos
         _OneShot
         _ResetOneShot
       ___wmul
     _myPrintf
       _UARTWrite
   _PrintMyActulPosition
     _UARTWrite
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _verification
     _Coord_Validated
       _UARTWrite
       _myPrintf
         _UARTWrite
     _Ins_Validated
       _UARTWrite
       _myPrintf
         _UARTWrite
     _Par_Validated
       _UARTWrite
       _myPrintf
         _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
       _myPrintf
         _UARTWrite
     _end
       _UARTWrite
       _myPrintf
         _UARTWrite
     _start
       _UARTWrite
       _myPrintf
         _UARTWrite

 _INT_ISR (ROOT)
   _GoToInitialXPosition
     i2_ContarPulsos
       i2_OneShot
       i2_ResetOneShot
   _GoToInitialYPosition
     i2_ContarPulsos
       i2_OneShot
       i2_ResetOneShot
   i2_UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      42       1       70.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      20        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 10 11:51:47 2019

                           l45 15D8                             l54 141A                             l70 1552  
                           l49 1100                             l66 13DA                             l59 1392  
                           u20 15B8                             u21 15B4                             u30 1466  
                           u31 1462                             u40 1478                             u41 1474  
                           u50 14C6                             u51 14C2                             u60 14D8  
                           u61 14D4                    __CFG_BOR$ON 000000            ___wmul@multiplicand 0006  
                  __CFG_BORV$3 000000               ??i2_ContarPulsos 0003                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                          l123 1094                            l132 15AA                            l126 15DC  
                          l134 15B8                            l135 15C2                            l129 15EE  
                          l341 0B2C                            l501 116C                            l350 0BF0  
                          l190 099A                            l344 0B56                            l280 0D68  
                          l361 146A                            l345 0B7C                            l337 0A92  
                          l193 0A56                            l185 0912                            l362 1484  
                          l354 12A8                            l338 0AB8                            l451 0F1C  
                          l357 12E6                            l366 14CA                            l358 12EA  
                          l631 128E                            l367 14E0                            l287 1230  
                          l713 0E74                            l634 1530                   __CFG_CPB$OFF 000000  
                          _PR2 000FCB                   __CFG_CPD$OFF 000000                            u700 11FE  
                          u701 11FA                            u710 1230                            u711 122C  
                          u800 12CC                            u720 08F0                            u801 12C8  
                          u721 08EC                            u810 12E6                            u730 0912  
                          u811 12E2                            u731 090E                            u820 0D7C  
                          u900 1400                            u740 0920                            u821 0D78  
                          u901 13FC                            u741 091C                            u830 0D9E  
                          u910 135A                            u750 097C                            u831 0D9A  
                          u911 1356                            u751 0978                            u840 0DD8  
                          u920 1376                            u760 0998                            u841 0DD4  
                          u921 1372                            u761 0994                            u850 0DFA  
                          u690 15EA                            u930 13AA                            u770 09AC  
                          u851 0DF6                            u691 15E6                            u931 13A6  
                          u771 09A8                            u860 0E22                            u940 13C0  
                          u780 09BE                            u861 0E1E                            u941 13BC  
                          u781 09BA                            u870 0E54                            u790 12B6  
                          u950 0A7A                            u871 0E50                            u791 12B2  
                          u951 0A76                            u960 0AA0                            u880 10E6  
                          u961 0A9C                            u881 10E2                            u970 0AFE  
                          u890 13EE                            u971 0AFA                            u891 13EA  
                          u980 0B20                            u981 0B1C                            u990 0B3E  
                          u991 0B3A                            _PWM 0A58                 ??_ContarPulsos 0006  
       __end_ofi2_ResetOneShot 150C                            _cmd 1096                            _end 1532  
                          _ons 002C                 _FlagDirectionX 0026                 _FlagDirectionY 0024  
                          wreg 000FE8                     _TXSTA1bits 000FAC                   __CFG_LVP$OFF 000000  
                         ?_PWM 0001                    coord@buffer 0013                   __CFG_WDT$OFF 000000  
                         l2001 09C2                           l1132 1022                           l2021 12BA  
                         l2013 1290                           l1125 101A                           l2005 09CE  
                         l2101 10FE                           l1142 11D0                           l2023 12CC  
                         l2015 12A0                           l1135 11C8                           l1311 15AA  
                         l2007 09CE                           l2041 0D90                           l2033 0D6A  
                         l1321 1478                           l2025 12D0                           l2017 12A2  
                         l2201 0A7A                           l2105 13DC                           l1313 15BC  
                         l2009 0A4E                           l2051 0DD8                           l2043 0D9E  
                         l2035 0D6E                           l1323 147C                           l1331 14D8  
                         l2019 12B6                           l2027 150C                           l2211 0ABC  
                         l2203 0A86                           l2123 1348                           l2107 13EE  
                         l2115 1406                           l2061 0E22                           l2053 0DE0  
                         l2045 0DAE                           l2037 0D7C                           l1317 1454  
                         l2029 1528                           l2221 0B0E                           l2213 0AC4  
                         l2205 0AA0                           l2125 135A                           l2133 1364  
                         l2117 1412                           l2109 1400                           l2071 0E54  
                         l2063 0E32                           l2055 0DEC                           l2047 0DB2  
                         l2039 0D8C                           l1327 14B8                           l2231 0B68  
                         l2223 0B20                           l2215 0AE0                           l2207 0AA4  
                         l2151 1394                           l2135 1376                           l2143 137E  
                         l2127 135E                           l2119 1418                           l2073 0E64  
                         l2065 0E34                           l2057 0DFA                           l2049 0DC2  
                         l2241 0BB0                           l2233 0B70                           l2225 0B3E  
                         l2217 0AEC                           l2209 0AAC                           l2401 0D36  
                         l2153 13AA                           l2161 13C6                           l2145 138A  
                         l2081 15D6                           ?_cmd 0001                           l2067 0E3E  
                         l2059 0E04                           l2331 1260                           l2323 1232  
                         l2243 0BC2                           l2235 0B80                           l2227 0B4A  
                         l2219 0AFE                           l2411 1116                           l2251 0FB0  
                         l2403 0D48                           l2163 13D2                           l2155 13C0  
                         l2147 1390                           l2091 10E6                           l2171 1538  
                         l2069 0E44                           l2181 1028                           l2341 127C  
                         l2333 126C                           l2325 1236                           l2245 0BD2  
                         l2237 0B88                           l2229 0B64                           l2421 1150  
                         l2413 1118                           l2261 0FE8                           l2253 0FB8  
                         l2405 0D4C                           l2165 13D8                           l2085 1096  
                         l2173 1544                           l2077 15C4                           l2191 108E  
                         l2183 1086                           l2343 1280                           l2335 1270  
                         l2327 1238                           l2247 0BE4                           l2239 0BA4  
                         l2423 1152                           l2415 112E                           l2407 1102  
                         l2271 1014                           l2263 0FEE                           l2255 0FCA  
                         l2087 109C                           l2175 154A                           l2079 15CA  
                         l2193 1090                           l2185 1088                           l2345 1284  
                         l2337 1274                           l2329 125E                           l2425 1156  
                         l2417 1130                           l2409 1112                           l2265 1004  
                         l2257 0FD2                           l2281 119E                           l2273 116E  
                         l2097 10EC                           l2089 10A8                           l2169 1532  
                         l2361 0E9C                           l2353 0E76                           l2195 1092  
                         l2187 108A                           l2179 1024                           l2347 1288  
                         l2339 1278                           l2427 1158                           l2419 1140  
                         l2267 100C                           l2259 0FDA                           l2283 11B4  
                         l2275 1180                           l2099 10F8                           l2371 0EC0  
                         l2363 0EA6                           l2355 0E7E                           ?_end 0001  
                         l2189 108C                           l2349 128C                           l2197 0A58  
                         l2429 1164                           l2269 100E                           l2285 11BC  
                         l2277 1188                           l2381 0CEE                           l2365 0EB0  
                         l2357 0E88                           l2373 0F0A                           l2199 0A68  
                         l2287 11C2                           l2279 1190                           l2391 0D0C  
                         l2367 0EB8                           l2359 0E92                           l2471 1432  
                         l2463 141C                           l2393 0D28                           l2481 1448  
                         l2473 1434                           l2465 1420                           l1931 11D2  
                         l2395 0D2E                           l2387 0CF6                           l2379 0BF2  
                         l2475 143C                           l2467 1428                           l2389 0D08  
                         l2477 1440                           l2469 1430                           l1927 15DC  
                         l1943 1202                           l1951 08BC                           l2487 0ED4  
                         l2479 1444                           l1929 15EA                           l1945 121E  
                         l1937 11D6                           l1961 08DC                           l1947 1220  
                         l1971 0924                           l1963 08F0                           l1981 0950  
                         l1973 0934                           l1965 08F2                           l1957 08C6  
                         l1949 08B8                           l1991 097C                           l1983 095C  
                         l1975 0936                           l1967 08F6                           l1959 08CC  
                         l1993 0998                           l1969 0920                           l1977 0938  
                         l1995 099C                           l1979 0944                           l1997 09AC  
                         l1989 0960                           l1999 09BE                           STR_1 089F  
                         STR_2 0891                           STR_3 0848                           STR_4 0826  
                         STR_5 0801                           STR_6 0865                           STR_7 0880  
                         STR_8 08B0                           STR_9 08AA                           u1000 0B64  
                         u1001 0B60                           u1010 0BC2                           u1011 0BBE  
                         u1020 0BE4                           u1021 0BE0                           u1030 0FCA  
                         u1031 0FC6                           u1040 0FE8                           u1120 0F1C  
                         u1041 0FE4                           u1121 0F18                           u1050 1004  
                         u1130 0D28                           u1051 1000                           u1131 0D24  
                         u1060 1180                           u1140 0D68                           u1061 117C  
                         u1141 0D64                           u1150 1112                           u1070 119E  
                         u1151 110E                           u1071 119A                           u1160 1150  
                         u1080 11B4                           u1161 114C                           u1081 11B0  
                         _LATB 000F8A                __end_of_INT_ISR 0FB0                           u1247 092A  
                         _LATC 000F8B                           _LATD 000F8C                           u1257 1122  
                         _TMR2 000FCC                           _Par1 003C                           _Par2 003A  
                         _main 141C                           fsr2h 000FDA                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0043              ??_Coord_Validated 000A  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000000  
                        ??_PWM 000A                __end_of_OneShot 1486                  _Ins_Validated 1348  
                        ??_cmd 0022                          ??_end 000A                 __CFG_CCP2MX$ON 000000  
              __end_of___aldiv 0E76                          ?_main 0001                          _CMCON 000FB4  
                        _T2CON 000FCA                __end_of___lwdiv 1024                __end_of___lwmod 11D2  
                        i2l126 15F2                          i2l129 1604                          i2l361 149C  
                        i2l265 0FAC                          i2l362 14B6                          i2l354 1304  
                        i2l259 0F66                          i2l357 1342                          i2l366 14F4  
                        i2l358 1346                          i2l367 150A                          i2l385 158E  
                        i2l388 1570                          _RCREG 000FAE                  _Par_Validated 13DC  
                        _SPBRG 000FAF                          _PORTB 000F81                          _PORTC 000F82  
                        _PORTD 000F83                ?i2_ResetOneShot 0001                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TXREG 000FAD  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000             __size_of_UARTConfi 0072  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000               __end_of_UARTRead 15C4  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
           __size_of_UARTWrite 0016                 __CFG_EBTRB$OFF 000000                    _ActualSteps 002E  
                        _click 0030                          _coord 08B8                          _start 15C4  
           __size_ofi2_OneShot 0032                          tablat 000FF5                          ttemp5 0044  
                        ttemp6 0047                          ttemp7 004B                          status 000FD8  
                        wtemp8 0044                 __CFG_ICPRT$OFF 000000                 __CFG_PBADEN$ON 000000  
              __initialization 1590                   __end_of_main 1454                 ?_Ins_Validated 0001  
                 ?i2_UARTWrite 0001                         ??_main 0024                 ?_Par_Validated 0001  
                __activetblptr 000002               __end_of_Movement 116E                      ??_INT_ISR 0003  
__size_of_GoToInitialXPosition 001E                         _ADCON1 000FC1                         ?_coord 0005  
__size_of_GoToInitialYPosition 001E                         _CCPR1L 000FBE                         _CCPR2L 000FBB  
                       ?_start 0001                         i2l2301 132C                         i2l2311 1586  
                       i2l2303 1572                         i2l2305 1576                         i2l2321 1568  
                       i2l2313 1554                         i2l2307 1582                         i2l2315 1558  
                       i2l2309 1584                         i2l2317 1564                         i2l2319 1566  
                       i2l1481 1486                         i2l2433 15F2                         i2l2441 0F34  
                       i2l1491 14E2                         i2l2291 12FC                         i2l2435 1600  
                       i2l2451 0F74                         i2l2443 0F38                         i2l1485 14AA  
                       i2l2293 12FE                         i2l2461 0FAA                         i2l2453 0F7A  
                       i2l2445 0F46                         i2l2437 0F20                         i2l1487 14AE  
                       i2l1495 1502                         i2l2295 1312                         i2l2455 0F7E  
                       i2l2447 0F56                         i2l2439 0F2E                         i2l2297 1316  
                       i2l2289 12EC                         i2l2457 0F8C                         i2l2449 0F64  
                       i2l2299 1328                         i2l2459 0F9C                         _OSCCON 000FD3  
                       _TMR2ON 007E52                i2UARTWrite@data 0001                      ??_OneShot 0004  
         __end_of_ContarPulsos 12EC                 __CFG_XINST$OFF 000000              __end_of_UARTConfi 1096  
                  _CoordRelatX 0034                    _CoordRelatY 0032                      ??___aldiv 000C  
            __end_of_UARTWrite 15F0                         ___wmul 150C                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 000D                      ??___lwmod 0008                         _cord_x 0038  
                       _cord_y 0036                         _letter 003B                         clear_0 1596  
            __end_ofi2_OneShot 14B8                         coord@L 0007                         coord@i 001F  
                       coord@n 0021                         coord@x 0009                         coord@y 000B  
             __end_of_myPrintf 1232                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6   __end_of_PrintMyActulPosition 0D6A                         tblptru 000FF8  
                   __accesstop 0060        __end_of__initialization 159C                  ___rparam_used 000001  
              ??_Ins_Validated 000A                 __pcstackCOMRAM 0001                      ?_UARTRead 0001  
                __end_of_coord 0A58                  __end_of_start 15DA                ??_Par_Validated 000A  
                ?_ResetOneShot 0001           coord@counterRevision 001E                 _UARTConfi$1999 0014  
              _Coord_Validated 1394                        ??_coord 000F                        ??_start 000A  
        __end_of_Configuracion 1290                     __pnvCOMRAM 003D                      ?_Movement 0001  
                      ?___wmul 0004                     ??_UARTRead 0004                        _CCP1CON 000FBD  
                      _CCP2CON 000FBA               ??i2_ResetOneShot 0001                 ??_ResetOneShot 0004  
         __size_ofi2_UARTWrite 0016                        _INT_ISR 0008                        i2u25_40 1498  
                      i2u25_41 1494                        i2u26_40 14AA                        i2u26_41 14A6  
                      i2u27_40 14F0                        i2u27_41 14EC                        i2u28_40 1502  
                      i2u28_41 14FE          __size_of_ContarPulsos 005C                __CFG_VREGEN$OFF 000000  
                      _OneShot 1454                      ?_myPrintf 0005                        __Hparam 0000  
                      __Lparam 0000                     ??_Movement 000A           _PrintMyActulPosition 0BF2  
                      ___aldiv 0D6A                __size_of___wmul 0026                        ___lwdiv 0FB0  
                      ___lwmod 116E                   __psmallconst 0800                        __pcinit 1590  
                      __ramtop 0800                        __ptext0 141C                        __ptext1 0E76  
                      __ptext2 15C4                        __ptext3 1532                        __ptext4 1096  
                      __ptext5 08B8                        __ptext6 15AA                        __ptext7 13DC  
                      __ptext8 1348                        __ptext9 1394        __end_of_Coord_Validated 13DC  
                 __size_of_PWM 019A                   __size_of_cmd 006C                   __size_of_end 0022  
                 _ContarPulsos 1290               ___aldiv@dividend 0004                        coord@P1 0005  
                      coord@P2 000D        __size_ofi2_ContarPulsos 005C                 __pintcode_body 0F1E  
         end_of_initialization 159C                  __Lmediumconst 0000                        int_func 0F1E  
                   ??_myPrintf 0007   __end_of_GoToInitialXPosition 1590          ?_PrintMyActulPosition 0001  
 __end_of_GoToInitialYPosition 1572                      _RCSTAbits 000FAB               ___aldiv@quotient 000E  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                    _UARTConfi 1024                      _UARTWrite 15DA                      _PORTBbits 000F81  
                    _PORTCbits 000F82                      _PORTDbits 000F83      _PrintMyActulPosition$2000 0016  
                    i2_OneShot 1486                UARTRead@Lecture 0004                      _TRISCbits 000F94  
                ?_verification 0001            i2ContarPulsos@pasos 0001                      _TXSTAbits 000FAC  
         __end_of_ResetOneShot 14E2            myPrintf@PointString 0005                     ?_UARTConfi 0012  
               __end_of___wmul 1532                      _CoordAntX 003F                      _CoordAntY 003D  
            __size_of_UARTRead 001A                     ?_UARTWrite 0001               ?_Coord_Validated 0001  
                   ?i2_OneShot 0001            start_initialization 1590                    __end_of_PWM 0BF2  
                  __end_of_cmd 1102                    __end_of_end 1554                 ??_verification 0022  
                UARTConfi@BAUD 0012                      _NextState 0031         ??_PrintMyActulPosition 0010  
        __end_of_Ins_Validated 1394                       ??___wmul 0008              __size_of_Movement 006C  
             __CFG_LPT1OSC$OFF 000000          __end_of_Par_Validated 141C                    __pbssCOMRAM 0024  
                     ?_INT_ISR 0001           _GoToInitialXPosition 1572                 i2_ContarPulsos 12EC  
         _GoToInitialYPosition 1554        _ControlFlagVerification 0041                       ?_OneShot 0001  
             ___lwdiv@dividend 0009                      __pintcode 0008              __size_of_myPrintf 0060  
                     ?___aldiv 0004      PrintMyActulPosition@i_806 001A                       ?___lwdiv 0009  
                     ?___lwmod 0004                    ??_UARTConfi 0014                  ??i2_UARTWrite 0001  
                  ??_UARTWrite 0004         __size_of_Configuracion 005E                    __smallconst 0800  
                  ??i2_OneShot 0001         __end_ofi2_ContarPulsos 1348          ?_GoToInitialXPosition 0001  
        ?_GoToInitialYPosition 0001               ___lwdiv@quotient 000D                 __size_of_coord 01A0  
        __size_of_ResetOneShot 002A                 __size_of_start 0016                ___aldiv@divisor 0008  
              ___aldiv@counter 000C                 ___wmul@product 0008                       i2u110_40 1328  
                     i2u110_41 1324                       i2u111_40 1342                       i2u111_41 133E  
                     i2u120_40 0F64                       i2u120_41 0F60                       i2u121_40 0F74  
                     i2u121_41 0F70                       i2u122_40 0F8C                       i2u122_41 0F88  
                     i2u123_40 0FAA                       i2u123_41 0FA6                       i2u109_40 1312  
                     i2u117_40 1600                       i2u109_41 130E                       i2u117_41 15FC  
                     i2u118_40 0F2E                       i2u118_41 0F2A                       i2u126_47 0F4C  
                     i2u119_40 0F46                       i2u119_41 0F42                       i2u127_47 0F92  
                     _PIR1bits 000F9E                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _UARTRead 15AA           __end_of_verification 0F1E              ___wmul@multiplier 0004  
        PrintMyActulPosition@a 0010          PrintMyActulPosition@b 0013          PrintMyActulPosition@i 0018  
                 _ResetOneShot 14B8                      coord@read 001C                ?i2_ContarPulsos 0001  
          __end_ofi2_UARTWrite 1606               __size_of_INT_ISR 0FA8        __size_ofi2_ResetOneShot 002A  
                UARTWrite@data 0004                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                _Configuracion 1232                       __Hrparam 0000               __size_of_OneShot 0032  
                     _Movement 1102                       __Lrparam 0000               __size_of___aldiv 010C  
                     _StepsOnX 002A                       _StepsOnY 0028               __size_of___lwdiv 0074  
             __size_of___lwmod 0064              ContarPulsos@pasos 0004         ??_GoToInitialXPosition 0003  
       ??_GoToInitialYPosition 0003                ___lwdiv@divisor 000B                ___lwdiv@counter 000F  
                    myPrintf@i 0009                       __ptext10 0BF2                       __ptext11 116E  
                     __ptext20 1454                       __ptext12 0FB0                       __ptext21 1232  
                     __ptext13 1102                       __ptext30 1486                       __ptext22 1024  
                     __ptext14 11D2                       __ptext23 0D6A                       __ptext15 15DA  
                     __ptext16 0A58                       __ptext25 15F0                       __ptext17 150C  
                     __ptext26 1554                       __ptext18 1290                       __ptext27 1572  
                     __ptext19 14B8                       __ptext28 12EC                       __ptext29 14E2  
               ?_Configuracion 0001                  __size_of_main 0038                       _myPrintf 11D2  
                   _CVRCONbits 000FB5                       int$flags 0043                    i2_UARTWrite 15F0  
                   _INTCONbits 000FF2       __size_of_Coord_Validated 0048                       intlevel2 0000  
             ___lwmod@dividend 0004                     _RCSTA1bits 000FAB          __size_of_verification 00A8  
__size_of_PrintMyActulPosition 0178            __CFG_FOSC$INTOSC_EC 000000                ___lwmod@divisor 0006  
                ?_ContarPulsos 0004                ___lwmod@counter 0008                   ___aldiv@sign 000D  
               i2_ResetOneShot 14E2                ??_Configuracion 0018         __size_of_Ins_Validated 004C  
                 _verification 0E76         __size_of_Par_Validated 0040  
