

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 02 21:09:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  0073E5                     __pidataCOMRAM:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for Movimiento@F3247
    78  0073E5  73                 	db	115
    79  0073E6  6C                 	db	108
    80  0073E7  69                 	db	105
    81  0073E8  64                 	db	100
    82  0073E9  65                 	db	101
    83                           
    84                           ;initializer for Movimiento@F3244
    85  0073EA  63                 	db	99
    86  0073EB  6C                 	db	108
    87  0073EC  69                 	db	105
    88  0073ED  63                 	db	99
    89  0073EE  6B                 	db	107
    90                           
    91                           ;initializer for _Error
    92  0073EF  45                 	db	69
    93  0073F0  72                 	db	114
    94  0073F1  72                 	db	114
    95  0073F2  6F                 	db	111
    96  0073F3  72                 	db	114
    97                           
    98                           	psect	idataBANK0
    99  00741C                     __pidataBANK0:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for _e_c
   103  00741C  45                 	db	69
   104  00741D  6E                 	db	110
   105  00741E  74                 	db	116
   106  00741F  65                 	db	101
   107  007420  72                 	db	114
   108  007421  5F                 	db	95
   109  007422  63                 	db	99
   110  007423  6F                 	db	111
   111  007424  6D                 	db	109
   112  007425  6D                 	db	109
   113  007426  61                 	db	97
   114  007427  6E                 	db	110
   115  007428  64                 	db	100
   116                           
   117                           ;initializer for _init
   118  007429  57                 	db	87
   119  00742A  61                 	db	97
   120  00742B  69                 	db	105
   121  00742C  74                 	db	116
   122  00742D  69                 	db	105
   123  00742E  6E                 	db	110
   124  00742F  67                 	db	103
   125  007430  2E                 	db	46
   126  007431  2E                 	db	46
   127  007432  2E                 	db	46
   128                           
   129                           ;initializer for _gracias
   130  007433  47                 	db	71
   131  007434  72                 	db	114
   132  007435  61                 	db	97
   133  007436  63                 	db	99
   134  007437  69                 	db	105
   135  007438  61                 	db	97
   136  007439  73                 	db	115
   137                           
   138                           	psect	nvCOMRAM
   139  000059                     __pnvCOMRAM:
   140                           	opt callstack 0
   141  000059                     _x:
   142                           	opt callstack 0
   143  000059                     	ds	2
   144  0000                     _TMR2	set	4044
   145  0000                     _T2CON	set	4042
   146  0000                     _CCPR2L	set	4027
   147  0000                     _CCP2CON	set	4026
   148  0000                     _CCPR1L	set	4030
   149  0000                     _CCP1CON	set	4029
   150  0000                     _PR2	set	4043
   151  0000                     _TRISB	set	3987
   152  0000                     _LATB	set	3978
   153  0000                     _PORTB	set	3969
   154  0000                     _TRISC	set	3988
   155  0000                     _LATC	set	3979
   156  0000                     _TRISD	set	3989
   157  0000                     _LATD	set	3980
   158  0000                     _PORTD	set	3971
   159  0000                     _ADCON1	set	4033
   160  0000                     _CVRCONbits	set	4021
   161  0000                     _CMCON	set	4020
   162  0000                     _OSCCON	set	4051
   163  0000                     _INTCON3bits	set	4080
   164  0000                     _INTCON2bits	set	4081
   165  0000                     _INTCONbits	set	4082
   166  0000                     _RCONbits	set	4048
   167  0000                     _PORTCbits	set	3970
   168  0000                     _PORTDbits	set	3971
   169  0000                     _RCREG	set	4014
   170  0000                     _TXREG	set	4013
   171  0000                     _PIR1bits	set	3998
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _TXSTAbits	set	4012
   174  0000                     _SPBRG	set	4015
   175  0000                     _TRISCbits	set	3988
   176  0000                     _PORTC	set	3970
   177  0000                     _TMR2ON	set	32338
   178  0000                     _RCIF	set	31989
   179                           
   180                           ; #config settings
   181  0000                     
   182                           	psect	cinit
   183  00754C                     __pcinit:
   184                           	opt callstack 0
   185  00754C                     start_initialization:
   186                           	opt callstack 0
   187  00754C                     __initialization:
   188                           	opt callstack 0
   189                           
   190                           ; Initialize objects allocated to BANK0 (30 bytes)
   191                           ; load TBLPTR registers with __pidataBANK0
   192  00754C  0E1C               	movlw	low __pidataBANK0
   193  00754E  6EF6               	movwf	tblptrl,c
   194  007550  0E74               	movlw	high __pidataBANK0
   195  007552  6EF7               	movwf	tblptrh,c
   196  007554  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   197  007556  6EF8               	movwf	tblptru,c
   198  007558  EE00  F060         	lfsr	0,__pdataBANK0
   199  00755C  EE10 F01E          	lfsr	1,30
   200  007560                     copy_data0:
   201  007560  0009               	tblrd		*+
   202  007562  CFF5 FFEE          	movff	tablat,postinc0
   203  007566  50E5               	movf	postdec1,w,c
   204  007568  50E1               	movf	fsr1l,w,c
   205  00756A  E1FA               	bnz	copy_data0
   206                           
   207                           ; Initialize objects allocated to COMRAM (15 bytes)
   208                           ; load TBLPTR registers with __pidataCOMRAM
   209  00756C  0EE5               	movlw	low __pidataCOMRAM
   210  00756E  6EF6               	movwf	tblptrl,c
   211  007570  0E73               	movlw	high __pidataCOMRAM
   212  007572  6EF7               	movwf	tblptrh,c
   213  007574  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   214  007576  6EF8               	movwf	tblptru,c
   215  007578  EE00  F04A         	lfsr	0,__pdataCOMRAM
   216  00757C  EE10 F00F          	lfsr	1,15
   217  007580                     copy_data1:
   218  007580  0009               	tblrd		*+
   219  007582  CFF5 FFEE          	movff	tablat,postinc0
   220  007586  50E5               	movf	postdec1,w,c
   221  007588  50E1               	movf	fsr1l,w,c
   222  00758A  E1FA               	bnz	copy_data1
   223                           
   224                           ; Clear objects allocated to COMRAM (31 bytes)
   225  00758C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   226  007590  0E1F               	movlw	31
   227  007592                     clear_0:
   228  007592  6AEE               	clrf	postinc0,c
   229  007594  06E8               	decf	wreg,f,c
   230  007596  E1FD               	bnz	clear_0
   231  007598                     end_of_initialization:
   232                           	opt callstack 0
   233  007598                     __end_of__initialization:
   234                           	opt callstack 0
   235  007598  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  00759A  6EF8               	movwf	tblptru,c
   237  00759C  0100               	movlb	0
   238  00759E  EF30  F03F         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMRAM
   241  00002B                     __pbssCOMRAM:
   242                           	opt callstack 0
   243  00002B                     _BanderaDisY:
   244                           	opt callstack 0
   245  00002B                     	ds	2
   246  00002D                     _BanderaDisX:
   247                           	opt callstack 0
   248  00002D                     	ds	2
   249  00002F                     _PasosY:
   250                           	opt callstack 0
   251  00002F                     	ds	2
   252  000031                     _PasosX:
   253                           	opt callstack 0
   254  000031                     	ds	2
   255  000033                     _ons:
   256                           	opt callstack 0
   257  000033                     	ds	2
   258  000035                     _PasosActuales:
   259                           	opt callstack 0
   260  000035                     	ds	2
   261  000037                     _pasosRecorridos:
   262                           	opt callstack 0
   263  000037                     	ds	2
   264  000039                     _CoordAntY:
   265                           	opt callstack 0
   266  000039                     	ds	2
   267  00003B                     _CoordAntX:
   268                           	opt callstack 0
   269  00003B                     	ds	2
   270  00003D                     _click:
   271                           	opt callstack 0
   272  00003D                     	ds	1
   273  00003E                     _NextState:
   274                           	opt callstack 0
   275  00003E                     	ds	1
   276  00003F                     _CoordRelatY:
   277                           	opt callstack 0
   278  00003F                     	ds	2
   279  000041                     _CoordRelatX:
   280                           	opt callstack 0
   281  000041                     	ds	2
   282  000043                     _cord_y:
   283                           	opt callstack 0
   284  000043                     	ds	2
   285  000045                     _cord_x:
   286                           	opt callstack 0
   287  000045                     	ds	2
   288  000047                     _Par2:
   289                           	opt callstack 0
   290  000047                     	ds	1
   291  000048                     _letter:
   292                           	opt callstack 0
   293  000048                     	ds	1
   294  000049                     _Par1:
   295                           	opt callstack 0
   296  000049                     	ds	1
   297                           
   298                           	psect	dataCOMRAM
   299  00004A                     __pdataCOMRAM:
   300                           	opt callstack 0
   301  00004A                     Movimiento@F3247:
   302                           	opt callstack 0
   303  00004A                     	ds	5
   304  00004F                     Movimiento@F3244:
   305                           	opt callstack 0
   306  00004F                     	ds	5
   307  000054                     _Error:
   308                           	opt callstack 0
   309  000054                     	ds	5
   310                           
   311                           	psect	dataBANK0
   312  000060                     __pdataBANK0:
   313                           	opt callstack 0
   314  000060                     _e_c:
   315                           	opt callstack 0
   316  000060                     	ds	13
   317  00006D                     _init:
   318                           	opt callstack 0
   319  00006D                     	ds	10
   320  000077                     _gracias:
   321                           	opt callstack 0
   322  000077                     	ds	7
   323                           
   324                           	psect	cstackCOMRAM
   325  000001                     __pcstackCOMRAM:
   326                           	opt callstack 0
   327  000001                     ?___wmul:
   328                           	opt callstack 0
   329  000001                     ?___lwmod:
   330                           	opt callstack 0
   331  000001                     ?___aldiv:
   332                           	opt callstack 0
   333  000001                     UARTWrite@data:
   334                           	opt callstack 0
   335  000001                     coord@P1:
   336                           	opt callstack 0
   337  000001                     ContarPulsos@pasos:
   338                           	opt callstack 0
   339  000001                     ___wmul@multiplier:
   340                           	opt callstack 0
   341  000001                     ___lwmod@dividend:
   342                           	opt callstack 0
   343  000001                     ___aldiv@dividend:
   344                           	opt callstack 0
   345                           
   346                           ; 4 bytes @ 0x0
   347  000001                     	ds	1
   348  000002                     start@i:
   349                           	opt callstack 0
   350  000002                     Par_Validated@i:
   351                           	opt callstack 0
   352  000002                     Ins_Validated@i:
   353                           	opt callstack 0
   354  000002                     Coord_Validated@i:
   355                           	opt callstack 0
   356  000002                     end@i:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x1
   360  000002                     	ds	1
   361  000003                     coord@L:
   362                           	opt callstack 0
   363  000003                     ___wmul@multiplicand:
   364                           	opt callstack 0
   365  000003                     ___lwmod@divisor:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x2
   369  000003                     	ds	2
   370  000005                     ___lwmod@counter:
   371                           	opt callstack 0
   372  000005                     coord@x:
   373                           	opt callstack 0
   374  000005                     ___wmul@product:
   375                           	opt callstack 0
   376  000005                     ___aldiv@divisor:
   377                           	opt callstack 0
   378                           
   379                           ; 4 bytes @ 0x4
   380  000005                     	ds	1
   381  000006                     ?___lwdiv:
   382                           	opt callstack 0
   383  000006                     ___lwdiv@dividend:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x5
   387  000006                     	ds	1
   388  000007                     ??_Movimiento:
   389  000007                     coord@y:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x6
   393  000007                     	ds	1
   394  000008                     ___lwdiv@divisor:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x7
   398  000008                     	ds	1
   399  000009                     ___aldiv@counter:
   400                           	opt callstack 0
   401  000009                     coord@P2:
   402                           	opt callstack 0
   403  000009                     Movimiento@loquequieras:
   404                           	opt callstack 0
   405                           
   406                           ; 5 bytes @ 0x8
   407  000009                     	ds	1
   408  00000A                     ___aldiv@sign:
   409                           	opt callstack 0
   410  00000A                     ___lwdiv@quotient:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x9
   414  00000A                     	ds	1
   415  00000B                     ??_coord:
   416  00000B                     ___aldiv@quotient:
   417                           	opt callstack 0
   418                           
   419                           ; 4 bytes @ 0xA
   420  00000B                     	ds	1
   421  00000C                     ___lwdiv@counter:
   422                           	opt callstack 0
   423                           
   424                           ; 1 bytes @ 0xB
   425  00000C                     	ds	2
   426  00000E                     Movimiento@loquequieras2:
   427                           	opt callstack 0
   428                           
   429                           ; 5 bytes @ 0xD
   430  00000E                     	ds	1
   431  00000F                     UARTConfi@BAUD:
   432                           	opt callstack 0
   433  00000F                     coord@buffer:
   434                           	opt callstack 0
   435                           
   436                           ; 9 bytes @ 0xE
   437  00000F                     	ds	2
   438  000011                     _UARTConfi$1678:
   439                           	opt callstack 0
   440                           
   441                           ; 4 bytes @ 0x10
   442  000011                     	ds	2
   443  000013                     Movimiento@i:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x12
   447  000013                     	ds	2
   448  000015                     Movimiento@i_712:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x14
   452  000015                     	ds	3
   453  000018                     coord@read:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x17
   457  000018                     	ds	1
   458  000019                     coord@i:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x18
   462  000019                     	ds	2
   463  00001B                     cmd@i:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x1A
   467  00001B                     	ds	2
   468  00001D                     ??_verification:
   469                           
   470                           ; 1 bytes @ 0x1C
   471  00001D                     	ds	2
   472  00001F                     main@a:
   473                           	opt callstack 0
   474                           
   475                           ; 3 bytes @ 0x1E
   476  00001F                     	ds	3
   477  000022                     main@b:
   478                           	opt callstack 0
   479                           
   480                           ; 3 bytes @ 0x21
   481  000022                     	ds	3
   482  000025                     _main$1679:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x24
   486  000025                     	ds	2
   487  000027                     main@i:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x26
   491  000027                     	ds	2
   492  000029                     main@i_411:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x28
   496  000029                     	ds	2
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 34 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  i               2   40[COMRAM] int 
   508 ;;  i               2   38[COMRAM] int 
   509 ;;  b               3   33[COMRAM] unsigned char [3]
   510 ;;  a               3   30[COMRAM] unsigned char [3]
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:        12       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:        12       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:       12 bytes
   525 ;; Hardware stack levels required when called:    4
   526 ;; This function calls:
   527 ;;		_Configuracion
   528 ;;		_Movimiento
   529 ;;		_UARTWrite
   530 ;;		___lwdiv
   531 ;;		___lwmod
   532 ;;		_verification
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text0
   539  007E60                     __ptext0:
   540                           	opt callstack 0
   541  007E60                     _main:
   542                           	opt callstack 27
   543  007E60                     
   544                           ;main.c: 35:     Configuracion();
   545  007E60  ECFF  F03A         	call	_Configuracion	;wreg free
   546  007E64                     
   547                           ;main.c: 36:     CoordAntX=0;
   548  007E64  0E00               	movlw	0
   549  007E66  6E3C               	movwf	(_CoordAntX+1)^0,c
   550  007E68  0E00               	movlw	0
   551  007E6A  6E3B               	movwf	_CoordAntX^0,c
   552  007E6C                     
   553                           ;main.c: 37:     CoordAntY=0;
   554  007E6C  0E00               	movlw	0
   555  007E6E  6E3A               	movwf	(_CoordAntY+1)^0,c
   556  007E70  0E00               	movlw	0
   557  007E72  6E39               	movwf	_CoordAntY^0,c
   558  007E74                     
   559                           ;main.c: 38:     PORTDbits.RD2=1;
   560  007E74  8483               	bsf	131,2,c	;volatile
   561  007E76                     
   562                           ;main.c: 39:     PORTDbits.RD3=1;
   563  007E76  8683               	bsf	131,3,c	;volatile
   564  007E78                     l2198:
   565                           
   566                           ;main.c: 42:         x=1;
   567  007E78  0E00               	movlw	0
   568  007E7A  6E5A               	movwf	(_x+1)^0,c
   569  007E7C  0E01               	movlw	1
   570  007E7E  6E59               	movwf	_x^0,c
   571  007E80                     
   572                           ;main.c: 43:        verification();
   573  007E80  ECCC  F03C         	call	_verification	;wreg free
   574  007E84                     
   575                           ;main.c: 45:         Movimiento();
   576  007E84  EC8E  F03D         	call	_Movimiento	;wreg free
   577  007E88                     
   578                           ;main.c: 47:         char a[3];;main.c: 48:         char b[3];;main.c: 50:         a[0]=
      +                          (CoordAntX/100)+48;
   579  007E88  C03B  F006         	movff	_CoordAntX,___lwdiv@dividend
   580  007E8C  C03C  F007         	movff	_CoordAntX+1,___lwdiv@dividend+1
   581  007E90  0E00               	movlw	0
   582  007E92  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   583  007E94  0E64               	movlw	100
   584  007E96  6E08               	movwf	___lwdiv@divisor^0,c
   585  007E98  ECD2  F03B         	call	___lwdiv	;wreg free
   586  007E9C  5006               	movf	?___lwdiv^0,w,c
   587  007E9E  0F30               	addlw	48
   588  007EA0  6E1F               	movwf	main@a^0,c
   589  007EA2                     
   590                           ;main.c: 51:         a[1]=((CoordAntX%100)/10)+48;
   591  007EA2  0E00               	movlw	0
   592  007EA4  6E04               	movwf	(___lwmod@divisor+1)^0,c
   593  007EA6  0E64               	movlw	100
   594  007EA8  6E03               	movwf	___lwmod@divisor^0,c
   595  007EAA  C03B  F001         	movff	_CoordAntX,___lwmod@dividend
   596  007EAE  C03C  F002         	movff	_CoordAntX+1,___lwmod@dividend+1
   597  007EB2  EC2E  F03B         	call	___lwmod	;wreg free
   598  007EB6  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   599  007EBA  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   600  007EBE  0E00               	movlw	0
   601  007EC0  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   602  007EC2  0E0A               	movlw	10
   603  007EC4  6E08               	movwf	___lwdiv@divisor^0,c
   604  007EC6  ECD2  F03B         	call	___lwdiv	;wreg free
   605  007ECA  5006               	movf	?___lwdiv^0,w,c
   606  007ECC  0F30               	addlw	48
   607  007ECE  6E20               	movwf	(main@a+1)^0,c
   608  007ED0                     
   609                           ;main.c: 52:         a[2]=((CoordAntX%100)%10)+48;
   610  007ED0  0E00               	movlw	0
   611  007ED2  6E04               	movwf	(___lwmod@divisor+1)^0,c
   612  007ED4  0E64               	movlw	100
   613  007ED6  6E03               	movwf	___lwmod@divisor^0,c
   614  007ED8  C03B  F001         	movff	_CoordAntX,___lwmod@dividend
   615  007EDC  C03C  F002         	movff	_CoordAntX+1,___lwmod@dividend+1
   616  007EE0  EC2E  F03B         	call	___lwmod	;wreg free
   617  007EE4  C001  F025         	movff	?___lwmod,_main$1679
   618  007EE8  C002  F026         	movff	?___lwmod+1,_main$1679+1
   619  007EEC                     
   620                           ;main.c: 52:         a[2]=((CoordAntX%100)%10)+48;
   621  007EEC  C025  F001         	movff	_main$1679,___lwmod@dividend
   622  007EF0  C026  F002         	movff	_main$1679+1,___lwmod@dividend+1
   623  007EF4  0E00               	movlw	0
   624  007EF6  6E04               	movwf	(___lwmod@divisor+1)^0,c
   625  007EF8  0E0A               	movlw	10
   626  007EFA  6E03               	movwf	___lwmod@divisor^0,c
   627  007EFC  EC2E  F03B         	call	___lwmod	;wreg free
   628  007F00  5001               	movf	?___lwmod^0,w,c
   629  007F02  0F30               	addlw	48
   630  007F04  6E21               	movwf	(main@a+2)^0,c
   631  007F06                     
   632                           ;main.c: 54:         b[0]=(CoordAntY/100)+48;
   633  007F06  C039  F006         	movff	_CoordAntY,___lwdiv@dividend
   634  007F0A  C03A  F007         	movff	_CoordAntY+1,___lwdiv@dividend+1
   635  007F0E  0E00               	movlw	0
   636  007F10  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   637  007F12  0E64               	movlw	100
   638  007F14  6E08               	movwf	___lwdiv@divisor^0,c
   639  007F16  ECD2  F03B         	call	___lwdiv	;wreg free
   640  007F1A  5006               	movf	?___lwdiv^0,w,c
   641  007F1C  0F30               	addlw	48
   642  007F1E  6E22               	movwf	main@b^0,c
   643  007F20                     
   644                           ;main.c: 55:         b[1]=((CoordAntY%100)/10)+48;
   645  007F20  0E00               	movlw	0
   646  007F22  6E04               	movwf	(___lwmod@divisor+1)^0,c
   647  007F24  0E64               	movlw	100
   648  007F26  6E03               	movwf	___lwmod@divisor^0,c
   649  007F28  C039  F001         	movff	_CoordAntY,___lwmod@dividend
   650  007F2C  C03A  F002         	movff	_CoordAntY+1,___lwmod@dividend+1
   651  007F30  EC2E  F03B         	call	___lwmod	;wreg free
   652  007F34  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   653  007F38  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   654  007F3C  0E00               	movlw	0
   655  007F3E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   656  007F40  0E0A               	movlw	10
   657  007F42  6E08               	movwf	___lwdiv@divisor^0,c
   658  007F44  ECD2  F03B         	call	___lwdiv	;wreg free
   659  007F48  5006               	movf	?___lwdiv^0,w,c
   660  007F4A  0F30               	addlw	48
   661  007F4C  6E23               	movwf	(main@b+1)^0,c
   662  007F4E                     
   663                           ;main.c: 56:         b[2]=((CoordAntY%100)%10)+48;
   664  007F4E  0E00               	movlw	0
   665  007F50  6E04               	movwf	(___lwmod@divisor+1)^0,c
   666  007F52  0E64               	movlw	100
   667  007F54  6E03               	movwf	___lwmod@divisor^0,c
   668  007F56  C039  F001         	movff	_CoordAntY,___lwmod@dividend
   669  007F5A  C03A  F002         	movff	_CoordAntY+1,___lwmod@dividend+1
   670  007F5E  EC2E  F03B         	call	___lwmod	;wreg free
   671  007F62  C001  F025         	movff	?___lwmod,_main$1679
   672  007F66  C002  F026         	movff	?___lwmod+1,_main$1679+1
   673  007F6A                     
   674                           ;main.c: 56:         b[2]=((CoordAntY%100)%10)+48;
   675  007F6A  C025  F001         	movff	_main$1679,___lwmod@dividend
   676  007F6E  C026  F002         	movff	_main$1679+1,___lwmod@dividend+1
   677  007F72  0E00               	movlw	0
   678  007F74  6E04               	movwf	(___lwmod@divisor+1)^0,c
   679  007F76  0E0A               	movlw	10
   680  007F78  6E03               	movwf	___lwmod@divisor^0,c
   681  007F7A  EC2E  F03B         	call	___lwmod	;wreg free
   682  007F7E  5001               	movf	?___lwmod^0,w,c
   683  007F80  0F30               	addlw	48
   684  007F82  6E24               	movwf	(main@b+2)^0,c
   685  007F84                     
   686                           ;main.c: 58:         for(int i=0; i<3; i++){
   687  007F84  0E00               	movlw	0
   688  007F86  6E28               	movwf	(main@i+1)^0,c
   689  007F88  0E00               	movlw	0
   690  007F8A  6E27               	movwf	main@i^0,c
   691  007F8C                     l2226:
   692                           
   693                           ;main.c: 60:             UARTWrite(a[i]);
   694  007F8C  0E1F               	movlw	low main@a
   695  007F8E  2427               	addwf	main@i^0,w,c
   696  007F90  6ED9               	movwf	fsr2l,c
   697  007F92  0E00               	movlw	high main@a
   698  007F94  2028               	addwfc	(main@i+1)^0,w,c
   699  007F96  6EDA               	movwf	fsr2h,c
   700  007F98  50DF               	movf	indf2,w,c
   701  007F9A  EC03  F03A         	call	_UARTWrite
   702  007F9E                     
   703                           ;main.c: 61:         }
   704  007F9E  4A27               	infsnz	main@i^0,f,c
   705  007FA0  2A28               	incf	(main@i+1)^0,f,c
   706  007FA2  BE28               	btfsc	(main@i+1)^0,7,c
   707  007FA4  EFDD  F03F         	goto	u931
   708  007FA8  5028               	movf	(main@i+1)^0,w,c
   709  007FAA  E109               	bnz	u930
   710  007FAC  0E03               	movlw	3
   711  007FAE  5C27               	subwf	main@i^0,w,c
   712  007FB0  A0D8               	btfss	status,0,c
   713  007FB2  EFDD  F03F         	goto	u931
   714  007FB6  EFDF  F03F         	goto	u930
   715  007FBA                     u931:
   716  007FBA  EFC6  F03F         	goto	l2226
   717  007FBE                     u930:
   718  007FBE                     
   719                           ;main.c: 62:         for(int i=0; i<3; i++){
   720  007FBE  0E00               	movlw	0
   721  007FC0  6E2A               	movwf	(main@i_411+1)^0,c
   722  007FC2  0E00               	movlw	0
   723  007FC4  6E29               	movwf	main@i_411^0,c
   724  007FC6                     l2238:
   725                           
   726                           ;main.c: 64:             UARTWrite(b[i]);
   727  007FC6  0E22               	movlw	low main@b
   728  007FC8  2429               	addwf	main@i_411^0,w,c
   729  007FCA  6ED9               	movwf	fsr2l,c
   730  007FCC  0E00               	movlw	high main@b
   731  007FCE  202A               	addwfc	(main@i_411+1)^0,w,c
   732  007FD0  6EDA               	movwf	fsr2h,c
   733  007FD2  50DF               	movf	indf2,w,c
   734  007FD4  EC03  F03A         	call	_UARTWrite
   735  007FD8                     
   736                           ;main.c: 65:         }
   737  007FD8  4A29               	infsnz	main@i_411^0,f,c
   738  007FDA  2A2A               	incf	(main@i_411+1)^0,f,c
   739  007FDC  BE2A               	btfsc	(main@i_411+1)^0,7,c
   740  007FDE  EFFA  F03F         	goto	u941
   741  007FE2  502A               	movf	(main@i_411+1)^0,w,c
   742  007FE4  E109               	bnz	u940
   743  007FE6  0E03               	movlw	3
   744  007FE8  5C29               	subwf	main@i_411^0,w,c
   745  007FEA  A0D8               	btfss	status,0,c
   746  007FEC  EFFA  F03F         	goto	u941
   747  007FF0  EFFC  F03F         	goto	u940
   748  007FF4                     u941:
   749  007FF4  EFE3  F03F         	goto	l2238
   750  007FF8                     u940:
   751  007FF8  EF3C  F03F         	goto	l2198
   752  007FFC  EF00  F000         	goto	start
   753  008000                     __end_of_main:
   754                           	opt callstack 0
   755                           
   756 ;; *************** function _verification *****************
   757 ;; Defined at:
   758 ;;		line 8 in file "verification.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   772 ;;      Params:         0       0       0       0       0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0       0       0       0       0
   774 ;;      Temps:          2       0       0       0       0       0       0       0       0
   775 ;;      Totals:         2       0       0       0       0       0       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    3
   779 ;; This function calls:
   780 ;;		_Coord_Validated
   781 ;;		_Ins_Validated
   782 ;;		_Par_Validated
   783 ;;		_cmd
   784 ;;		_end
   785 ;;		_start
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text1
   792  007998                     __ptext1:
   793                           	opt callstack 0
   794  007998                     _verification:
   795                           	opt callstack 27
   796  007998                     
   797                           ;verification.c: 9:     NextState = iddle_State;
   798  007998  0E00               	movlw	0
   799  00799A  6E3E               	movwf	_NextState^0,c
   800                           
   801                           ;verification.c: 10:     while(x==1){
   802  00799C  EF12  F03D         	goto	l2098
   803  0079A0                     l2082:
   804                           
   805                           ;verification.c: 14:                 NextState= start();
   806  0079A0  EC5E  F03A         	call	_start	;wreg free
   807  0079A4  6E3E               	movwf	_NextState^0,c
   808                           
   809                           ;verification.c: 15:             };verification.c: 16:             break;
   810  0079A6  EF12  F03D         	goto	l2098
   811  0079AA                     l2084:
   812                           
   813                           ;verification.c: 18:                 NextState=cmd();
   814  0079AA  EC0C  F03C         	call	_cmd	;wreg free
   815  0079AE  6E3E               	movwf	_NextState^0,c
   816                           
   817                           ;verification.c: 19:             };verification.c: 20:             break;
   818  0079B0  EF12  F03D         	goto	l2098
   819  0079B4                     l2086:
   820                           
   821                           ;verification.c: 22:                 NextState=Par_Validated();
   822  0079B4  EC99  F03B         	call	_Par_Validated	;wreg free
   823  0079B8  6E3E               	movwf	_NextState^0,c
   824                           
   825                           ;verification.c: 23:             };verification.c: 24:             break;
   826  0079BA  EF12  F03D         	goto	l2098
   827  0079BE                     l2088:
   828                           
   829                           ;verification.c: 26:                 NextState=Ins_Validated();
   830  0079BE  EC87  F03C         	call	_Ins_Validated	;wreg free
   831  0079C2  6E3E               	movwf	_NextState^0,c
   832                           
   833                           ;verification.c: 27:             };verification.c: 28:             break;
   834  0079C4  EF12  F03D         	goto	l2098
   835  0079C8                     l2090:
   836                           
   837                           ;verification.c: 30:                 NextState=Coord_Validated();
   838  0079C8  EC46  F03C         	call	_Coord_Validated	;wreg free
   839  0079CC  6E3E               	movwf	_NextState^0,c
   840                           
   841                           ;verification.c: 31:             };verification.c: 32:             break;
   842  0079CE  EF12  F03D         	goto	l2098
   843  0079D2                     l2092:
   844                           
   845                           ;verification.c: 34:                 end();
   846  0079D2  EC81  F03A         	call	_end	;wreg free
   847                           
   848                           ;verification.c: 35:             }break;
   849  0079D6  EF12  F03D         	goto	l2098
   850  0079DA                     l2096:
   851  0079DA  503E               	movf	_NextState^0,w,c
   852  0079DC  6E1D               	movwf	??_verification^0,c
   853  0079DE  6A1E               	clrf	(??_verification+1)^0,c
   854                           
   855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   856                           ; Switch size 1, requested type "simple"
   857                           ; Number of cases is 1, Range of values is 0 to 0
   858                           ; switch strategies available:
   859                           ; Name         Instructions Cycles
   860                           ; simple_byte            4     3 (average)
   861                           ;	Chosen strategy is simple_byte
   862  0079E0  501E               	movf	(??_verification+1)^0,w,c
   863  0079E2  0A00               	xorlw	0	; case 0
   864  0079E4  B4D8               	btfsc	status,2,c
   865  0079E6  EFF7  F03C         	goto	l2256
   866  0079EA  EF12  F03D         	goto	l2098
   867  0079EE                     l2256:
   868                           
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 6, Range of values is 0 to 5
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte           19    10 (average)
   874                           ;	Chosen strategy is simple_byte
   875  0079EE  501D               	movf	??_verification^0,w,c
   876  0079F0  0A00               	xorlw	0	; case 0
   877  0079F2  B4D8               	btfsc	status,2,c
   878  0079F4  EFD0  F03C         	goto	l2082
   879  0079F8  0A01               	xorlw	1	; case 1
   880  0079FA  B4D8               	btfsc	status,2,c
   881  0079FC  EFD5  F03C         	goto	l2084
   882  007A00  0A03               	xorlw	3	; case 2
   883  007A02  B4D8               	btfsc	status,2,c
   884  007A04  EFDA  F03C         	goto	l2086
   885  007A08  0A01               	xorlw	1	; case 3
   886  007A0A  B4D8               	btfsc	status,2,c
   887  007A0C  EFDF  F03C         	goto	l2088
   888  007A10  0A07               	xorlw	7	; case 4
   889  007A12  B4D8               	btfsc	status,2,c
   890  007A14  EFE4  F03C         	goto	l2090
   891  007A18  0A01               	xorlw	1	; case 5
   892  007A1A  B4D8               	btfsc	status,2,c
   893  007A1C  EFE9  F03C         	goto	l2092
   894  007A20  EF12  F03D         	goto	l2098
   895  007A24                     l2098:
   896                           
   897                           ;verification.c: 10:     while(x==1){
   898  007A24  0459               	decf	_x^0,w,c
   899  007A26  105A               	iorwf	(_x+1)^0,w,c
   900  007A28  B4D8               	btfsc	status,2,c
   901  007A2A  EF19  F03D         	goto	u801
   902  007A2E  EF1B  F03D         	goto	u800
   903  007A32                     u801:
   904  007A32  EFED  F03C         	goto	l2096
   905  007A36                     u800:
   906  007A36  0012               	return		;funcret
   907  007A38                     __end_of_verification:
   908                           	opt callstack 0
   909                           
   910 ;; *************** function _start *****************
   911 ;; Defined at:
   912 ;;		line 17 in file "cases.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  i               2    1[COMRAM] int 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      unsigned char 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   926 ;;      Params:         0       0       0       0       0       0       0       0       0
   927 ;;      Locals:         2       0       0       0       0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0
   929 ;;      Totals:         2       0       0       0       0       0       0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    1
   933 ;; This function calls:
   934 ;;		_UARTWrite
   935 ;; This function is called by:
   936 ;;		_verification
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text2
   941  0074BC                     __ptext2:
   942                           	opt callstack 0
   943  0074BC                     _start:
   944                           	opt callstack 28
   945  0074BC                     
   946                           ;cases.c: 18:      UARTWrite(13);
   947  0074BC  0E0D               	movlw	13
   948  0074BE  EC03  F03A         	call	_UARTWrite
   949  0074C2                     
   950                           ;cases.c: 19:      for(int i=0;i<10;i++){
   951  0074C2  0E00               	movlw	0
   952  0074C4  6E03               	movwf	(start@i+1)^0,c
   953  0074C6  0E00               	movlw	0
   954  0074C8  6E02               	movwf	start@i^0,c
   955  0074CA                     l1820:
   956                           
   957                           ;cases.c: 20:         UARTWrite(init[i]);
   958  0074CA  0E6D               	movlw	low _init
   959  0074CC  2402               	addwf	start@i^0,w,c
   960  0074CE  6ED9               	movwf	fsr2l,c
   961  0074D0  0E00               	movlw	high _init
   962  0074D2  2003               	addwfc	(start@i+1)^0,w,c
   963  0074D4  6EDA               	movwf	fsr2h,c
   964  0074D6  50DF               	movf	indf2,w,c
   965  0074D8  EC03  F03A         	call	_UARTWrite
   966  0074DC                     
   967                           ;cases.c: 21:     }
   968  0074DC  4A02               	infsnz	start@i^0,f,c
   969  0074DE  2A03               	incf	(start@i+1)^0,f,c
   970  0074E0  BE03               	btfsc	(start@i+1)^0,7,c
   971  0074E2  EF7C  F03A         	goto	u641
   972  0074E6  5003               	movf	(start@i+1)^0,w,c
   973  0074E8  E109               	bnz	u640
   974  0074EA  0E0A               	movlw	10
   975  0074EC  5C02               	subwf	start@i^0,w,c
   976  0074EE  A0D8               	btfss	status,0,c
   977  0074F0  EF7C  F03A         	goto	u641
   978  0074F4  EF7E  F03A         	goto	u640
   979  0074F8                     u641:
   980  0074F8  EF65  F03A         	goto	l1820
   981  0074FC                     u640:
   982  0074FC                     
   983                           ;cases.c: 22:      PORTC = 0xff;
   984  0074FC  6882               	setf	130,c	;volatile
   985  0074FE                     
   986                           ;cases.c: 23:      return wait_cmd_State;
   987  0074FE  0E01               	movlw	1
   988  007500  0012               	return		;funcret
   989  007502                     __end_of_start:
   990                           	opt callstack 0
   991                           
   992 ;; *************** function _end *****************
   993 ;; Defined at:
   994 ;;		line 91 in file "cases.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  i               2    1[COMRAM] int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_UARTWrite
  1017 ;; This function is called by:
  1018 ;;		_verification
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text3
  1023  007502                     __ptext3:
  1024                           	opt callstack 0
  1025  007502                     _end:
  1026                           	opt callstack 28
  1027  007502                     
  1028                           ;cases.c: 92:     UARTWrite(13);
  1029  007502  0E0D               	movlw	13
  1030  007504  EC03  F03A         	call	_UARTWrite
  1031  007508                     
  1032                           ;cases.c: 93:     for(int i=0;i<7;i++){
  1033  007508  0E00               	movlw	0
  1034  00750A  6E03               	movwf	(end@i+1)^0,c
  1035  00750C  0E00               	movlw	0
  1036  00750E  6E02               	movwf	end@i^0,c
  1037  007510                     l1966:
  1038                           
  1039                           ;cases.c: 94:             UARTWrite(gracias[i]);
  1040  007510  0E77               	movlw	low _gracias
  1041  007512  2402               	addwf	end@i^0,w,c
  1042  007514  6ED9               	movwf	fsr2l,c
  1043  007516  0E00               	movlw	high _gracias
  1044  007518  2003               	addwfc	(end@i+1)^0,w,c
  1045  00751A  6EDA               	movwf	fsr2h,c
  1046  00751C  50DF               	movf	indf2,w,c
  1047  00751E  EC03  F03A         	call	_UARTWrite
  1048  007522                     
  1049                           ;cases.c: 95:     }
  1050  007522  4A02               	infsnz	end@i^0,f,c
  1051  007524  2A03               	incf	(end@i+1)^0,f,c
  1052  007526  BE03               	btfsc	(end@i+1)^0,7,c
  1053  007528  EF9F  F03A         	goto	u751
  1054  00752C  5003               	movf	(end@i+1)^0,w,c
  1055  00752E  E109               	bnz	u750
  1056  007530  0E07               	movlw	7
  1057  007532  5C02               	subwf	end@i^0,w,c
  1058  007534  A0D8               	btfss	status,0,c
  1059  007536  EF9F  F03A         	goto	u751
  1060  00753A  EFA1  F03A         	goto	u750
  1061  00753E                     u751:
  1062  00753E  EF88  F03A         	goto	l1966
  1063  007542                     u750:
  1064  007542                     
  1065                           ;cases.c: 96:      x=0;
  1066  007542  0E00               	movlw	0
  1067  007544  6E5A               	movwf	(_x+1)^0,c
  1068  007546  0E00               	movlw	0
  1069  007548  6E59               	movwf	_x^0,c
  1070  00754A  0012               	return		;funcret
  1071  00754C                     __end_of_end:
  1072                           	opt callstack 0
  1073                           
  1074 ;; *************** function _cmd *****************
  1075 ;; Defined at:
  1076 ;;		line 27 in file "cases.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  i               2   26[COMRAM] int 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      unsigned char 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0
  1091 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1093 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1094 ;;Total ram usage:        2 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    2
  1097 ;; This function calls:
  1098 ;;		_UARTWrite
  1099 ;;		_coord
  1100 ;; This function is called by:
  1101 ;;		_verification
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text4
  1106  007818                     __ptext4:
  1107                           	opt callstack 0
  1108  007818                     _cmd:
  1109                           	opt callstack 27
  1110  007818                     
  1111                           ;cases.c: 28:     UARTWrite(13);
  1112  007818  0E0D               	movlw	13
  1113  00781A  EC03  F03A         	call	_UARTWrite
  1114  00781E                     
  1115                           ;cases.c: 29:     PORTC = 0x00;
  1116  00781E  0E00               	movlw	0
  1117  007820  6E82               	movwf	130,c	;volatile
  1118  007822                     
  1119                           ;cases.c: 30:     for(int i=0;i<10;i++){
  1120  007822  0E00               	movlw	0
  1121  007824  6E1C               	movwf	(cmd@i+1)^0,c
  1122  007826  0E00               	movlw	0
  1123  007828  6E1B               	movwf	cmd@i^0,c
  1124  00782A                     l1840:
  1125                           
  1126                           ;cases.c: 31:         UARTWrite(e_c[i]);
  1127  00782A  0E60               	movlw	low _e_c
  1128  00782C  241B               	addwf	cmd@i^0,w,c
  1129  00782E  6ED9               	movwf	fsr2l,c
  1130  007830  0E00               	movlw	high _e_c
  1131  007832  201C               	addwfc	(cmd@i+1)^0,w,c
  1132  007834  6EDA               	movwf	fsr2h,c
  1133  007836  50DF               	movf	indf2,w,c
  1134  007838  EC03  F03A         	call	_UARTWrite
  1135  00783C                     
  1136                           ;cases.c: 32:     }
  1137  00783C  4A1B               	infsnz	cmd@i^0,f,c
  1138  00783E  2A1C               	incf	(cmd@i+1)^0,f,c
  1139  007840  BE1C               	btfsc	(cmd@i+1)^0,7,c
  1140  007842  EF2C  F03C         	goto	u651
  1141  007846  501C               	movf	(cmd@i+1)^0,w,c
  1142  007848  E109               	bnz	u650
  1143  00784A  0E0A               	movlw	10
  1144  00784C  5C1B               	subwf	cmd@i^0,w,c
  1145  00784E  A0D8               	btfss	status,0,c
  1146  007850  EF2C  F03C         	goto	u651
  1147  007854  EF2E  F03C         	goto	u650
  1148  007858                     u651:
  1149  007858  EF15  F03C         	goto	l1840
  1150  00785C                     u650:
  1151  00785C                     
  1152                           ;cases.c: 33:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
  1153  00785C  0E49               	movlw	low _Par1
  1154  00785E  6E01               	movwf	coord@P1^0,c
  1155  007860  0E00               	movlw	high _Par1
  1156  007862  6E02               	movwf	(coord@P1+1)^0,c
  1157  007864  0E48               	movlw	low _letter
  1158  007866  6E03               	movwf	coord@L^0,c
  1159  007868  0E00               	movlw	high _letter
  1160  00786A  6E04               	movwf	(coord@L+1)^0,c
  1161  00786C  0E45               	movlw	low _cord_x
  1162  00786E  6E05               	movwf	coord@x^0,c
  1163  007870  0E00               	movlw	high _cord_x
  1164  007872  6E06               	movwf	(coord@x+1)^0,c
  1165  007874  0E43               	movlw	low _cord_y
  1166  007876  6E07               	movwf	coord@y^0,c
  1167  007878  0E00               	movlw	high _cord_y
  1168  00787A  6E08               	movwf	(coord@y+1)^0,c
  1169  00787C  0E47               	movlw	low _Par2
  1170  00787E  6E09               	movwf	coord@P2^0,c
  1171  007880  0E00               	movlw	high _Par2
  1172  007882  6E0A               	movwf	(coord@P2+1)^0,c
  1173  007884  EC1C  F03D         	call	_coord	;wreg free
  1174  007888                     
  1175                           ;cases.c: 34:     return validate_Par_State;
  1176  007888  0E02               	movlw	2
  1177  00788A  0012               	return		;funcret
  1178  00788C                     __end_of_cmd:
  1179                           	opt callstack 0
  1180                           
  1181 ;; *************** function _coord *****************
  1182 ;; Defined at:
  1183 ;;		line 12 in file "coordenadas.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  P1              2    0[COMRAM] PTR unsigned char 
  1186 ;;		 -> Par1(1), 
  1187 ;;  L               2    2[COMRAM] PTR unsigned char 
  1188 ;;		 -> letter(1), 
  1189 ;;  x               2    4[COMRAM] PTR unsigned short 
  1190 ;;		 -> cord_x(2), 
  1191 ;;  y               2    6[COMRAM] PTR unsigned short 
  1192 ;;		 -> cord_y(2), 
  1193 ;;  P2              2    8[COMRAM] PTR unsigned char 
  1194 ;;		 -> Par2(1), 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  i               2   24[COMRAM] int 
  1197 ;;  buffer          9   14[COMRAM] unsigned char [9]
  1198 ;;  read            1   23[COMRAM] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  2    0[COMRAM] int 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1208 ;;      Params:        10       0       0       0       0       0       0       0       0
  1209 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1210 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1211 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1212 ;;Total ram usage:       26 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    1
  1215 ;; This function calls:
  1216 ;;		_UARTRead
  1217 ;; This function is called by:
  1218 ;;		_cmd
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text5
  1223  007A38                     __ptext5:
  1224                           	opt callstack 0
  1225  007A38                     _coord:
  1226                           	opt callstack 27
  1227  007A38                     
  1228                           ;coordenadas.c: 13:   char buffer [9];;coordenadas.c: 14:         char read;;coordenadas
      +                          .c: 16:         for(int i=0; i<=8; i++){
  1229  007A38  0E00               	movlw	0
  1230  007A3A  6E1A               	movwf	(coord@i+1)^0,c
  1231  007A3C  0E00               	movlw	0
  1232  007A3E  6E19               	movwf	coord@i^0,c
  1233  007A40                     l1734:
  1234                           
  1235                           ;coordenadas.c: 17:             read= UARTRead();
  1236  007A40  ECFA  F039         	call	_UARTRead	;wreg free
  1237  007A44  6E18               	movwf	coord@read^0,c
  1238  007A46                     
  1239                           ;coordenadas.c: 18:             buffer[i]=read;
  1240  007A46  0E0F               	movlw	low coord@buffer
  1241  007A48  2419               	addwf	coord@i^0,w,c
  1242  007A4A  6ED9               	movwf	fsr2l,c
  1243  007A4C  0E00               	movlw	high coord@buffer
  1244  007A4E  201A               	addwfc	(coord@i+1)^0,w,c
  1245  007A50  6EDA               	movwf	fsr2h,c
  1246  007A52  C018  FFDF         	movff	coord@read,indf2
  1247  007A56                     
  1248                           ;coordenadas.c: 19:         }
  1249  007A56  4A19               	infsnz	coord@i^0,f,c
  1250  007A58  2A1A               	incf	(coord@i+1)^0,f,c
  1251  007A5A  BE1A               	btfsc	(coord@i+1)^0,7,c
  1252  007A5C  EF39  F03D         	goto	u541
  1253  007A60  501A               	movf	(coord@i+1)^0,w,c
  1254  007A62  E109               	bnz	u540
  1255  007A64  0E09               	movlw	9
  1256  007A66  5C19               	subwf	coord@i^0,w,c
  1257  007A68  A0D8               	btfss	status,0,c
  1258  007A6A  EF39  F03D         	goto	u541
  1259  007A6E  EF3B  F03D         	goto	u540
  1260  007A72                     u541:
  1261  007A72  EF20  F03D         	goto	l1734
  1262  007A76                     u540:
  1263  007A76                     
  1264                           ;coordenadas.c: 20:         *P1= buffer[0];
  1265  007A76  C001  FFD9         	movff	coord@P1,fsr2l
  1266  007A7A  C002  FFDA         	movff	coord@P1+1,fsr2h
  1267  007A7E  C00F  FFDF         	movff	coord@buffer,indf2
  1268                           
  1269                           ;coordenadas.c: 21:         *L= buffer[1];
  1270  007A82  C003  FFD9         	movff	coord@L,fsr2l
  1271  007A86  C004  FFDA         	movff	coord@L+1,fsr2h
  1272  007A8A  C010  FFDF         	movff	coord@buffer+1,indf2
  1273  007A8E                     
  1274                           ;coordenadas.c: 22:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
  1275  007A8E  0E30               	movlw	48
  1276  007A90  6E0B               	movwf	??_coord^0,c
  1277  007A92  0EEB               	movlw	235
  1278  007A94  6E0C               	movwf	(??_coord+1)^0,c
  1279  007A96  5011               	movf	(coord@buffer+2)^0,w,c
  1280  007A98  0D64               	mullw	100
  1281  007A9A  CFF3 F00D          	movff	prodl,??_coord+2
  1282  007A9E  CFF4 F00E          	movff	prodh,??_coord+3
  1283  007AA2  5012               	movf	(coord@buffer+3)^0,w,c
  1284  007AA4  0D0A               	mullw	10
  1285  007AA6  50F3               	movf	243,w,c
  1286  007AA8  260D               	addwf	(??_coord+2)^0,f,c
  1287  007AAA  50F4               	movf	244,w,c
  1288  007AAC  220E               	addwfc	(??_coord+3)^0,f,c
  1289  007AAE  5013               	movf	(coord@buffer+4)^0,w,c
  1290  007AB0  260D               	addwf	(??_coord+2)^0,f,c
  1291  007AB2  0E00               	movlw	0
  1292  007AB4  220E               	addwfc	(??_coord+3)^0,f,c
  1293  007AB6  500B               	movf	??_coord^0,w,c
  1294  007AB8  260D               	addwf	(??_coord+2)^0,f,c
  1295  007ABA  500C               	movf	(??_coord+1)^0,w,c
  1296  007ABC  220E               	addwfc	(??_coord+3)^0,f,c
  1297  007ABE  C005  FFD9         	movff	coord@x,fsr2l
  1298  007AC2  C006  FFDA         	movff	coord@x+1,fsr2h
  1299  007AC6  C00D  FFDE         	movff	??_coord+2,postinc2
  1300  007ACA  C00E  FFDD         	movff	??_coord+3,postdec2
  1301  007ACE                     
  1302                           ;coordenadas.c: 23:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
  1303  007ACE  0E30               	movlw	48
  1304  007AD0  6E0B               	movwf	??_coord^0,c
  1305  007AD2  0EEB               	movlw	235
  1306  007AD4  6E0C               	movwf	(??_coord+1)^0,c
  1307  007AD6  5014               	movf	(coord@buffer+5)^0,w,c
  1308  007AD8  0D64               	mullw	100
  1309  007ADA  CFF3 F00D          	movff	prodl,??_coord+2
  1310  007ADE  CFF4 F00E          	movff	prodh,??_coord+3
  1311  007AE2  5015               	movf	(coord@buffer+6)^0,w,c
  1312  007AE4  0D0A               	mullw	10
  1313  007AE6  50F3               	movf	243,w,c
  1314  007AE8  260D               	addwf	(??_coord+2)^0,f,c
  1315  007AEA  50F4               	movf	244,w,c
  1316  007AEC  220E               	addwfc	(??_coord+3)^0,f,c
  1317  007AEE  5016               	movf	(coord@buffer+7)^0,w,c
  1318  007AF0  260D               	addwf	(??_coord+2)^0,f,c
  1319  007AF2  0E00               	movlw	0
  1320  007AF4  220E               	addwfc	(??_coord+3)^0,f,c
  1321  007AF6  500B               	movf	??_coord^0,w,c
  1322  007AF8  260D               	addwf	(??_coord+2)^0,f,c
  1323  007AFA  500C               	movf	(??_coord+1)^0,w,c
  1324  007AFC  220E               	addwfc	(??_coord+3)^0,f,c
  1325  007AFE  C007  FFD9         	movff	coord@y,fsr2l
  1326  007B02  C008  FFDA         	movff	coord@y+1,fsr2h
  1327  007B06  C00D  FFDE         	movff	??_coord+2,postinc2
  1328  007B0A  C00E  FFDD         	movff	??_coord+3,postdec2
  1329                           
  1330                           ;coordenadas.c: 24:   *P2= buffer[8];
  1331  007B0E  C009  FFD9         	movff	coord@P2,fsr2l
  1332  007B12  C00A  FFDA         	movff	coord@P2+1,fsr2h
  1333  007B16  C017  FFDF         	movff	coord@buffer+8,indf2
  1334  007B1A  0012               	return		;funcret
  1335  007B1C                     __end_of_coord:
  1336                           	opt callstack 0
  1337                           
  1338 ;; *************** function _UARTRead *****************
  1339 ;; Defined at:
  1340 ;;		line 32 in file "UART.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      unsigned char 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1354 ;;      Params:         0       0       0       0       0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1358 ;;Total ram usage:        0 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_coord
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text6
  1368  0073F4                     __ptext6:
  1369                           	opt callstack 0
  1370  0073F4                     _UARTRead:
  1371                           	opt callstack 27
  1372  0073F4                     l96:
  1373  0073F4  AA9E               	btfss	3998,5,c	;volatile
  1374  0073F6  EFFF  F039         	goto	u481
  1375  0073FA  EF01  F03A         	goto	u480
  1376  0073FE                     u481:
  1377  0073FE  EFFA  F039         	goto	l96
  1378  007402                     u480:
  1379  007402                     
  1380                           ;UART.c: 34:     return RCREG;
  1381  007402  50AE               	movf	174,w,c	;volatile
  1382  007404  0012               	return		;funcret
  1383  007406                     __end_of_UARTRead:
  1384                           	opt callstack 0
  1385                           
  1386 ;; *************** function _Par_Validated *****************
  1387 ;; Defined at:
  1388 ;;		line 37 in file "cases.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  i               2    1[COMRAM] int 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0
  1403 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1405 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1406 ;;Total ram usage:        2 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		_UARTWrite
  1411 ;; This function is called by:
  1412 ;;		_verification
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text7
  1417  007732                     __ptext7:
  1418                           	opt callstack 0
  1419  007732                     _Par_Validated:
  1420                           	opt callstack 28
  1421  007732                     
  1422                           ;cases.c: 38:     PORTC=0x00;
  1423  007732  0E00               	movlw	0
  1424  007734  6E82               	movwf	130,c	;volatile
  1425  007736                     
  1426                           ;cases.c: 39:     if(Par1==0X3C && Par2==0x3E){
  1427  007736  0E3C               	movlw	60
  1428  007738  1849               	xorwf	_Par1^0,w,c
  1429  00773A  A4D8               	btfss	status,2,c
  1430  00773C  EFA2  F03B         	goto	u661
  1431  007740  EFA4  F03B         	goto	u660
  1432  007744                     u661:
  1433  007744  EFB0  F03B         	goto	l1864
  1434  007748                     u660:
  1435  007748  0E3E               	movlw	62
  1436  00774A  1847               	xorwf	_Par2^0,w,c
  1437  00774C  A4D8               	btfss	status,2,c
  1438  00774E  EFAB  F03B         	goto	u671
  1439  007752  EFAD  F03B         	goto	u670
  1440  007756                     u671:
  1441  007756  EFB0  F03B         	goto	l1864
  1442  00775A                     u670:
  1443  00775A                     
  1444                           ;cases.c: 40:         return validate_Instruct_State;
  1445  00775A  0E03               	movlw	3
  1446  00775C  EFD1  F03B         	goto	l44
  1447  007760                     l1864:
  1448                           
  1449                           ;cases.c: 43:         UARTWrite(13);
  1450  007760  0E0D               	movlw	13
  1451  007762  EC03  F03A         	call	_UARTWrite
  1452  007766                     
  1453                           ;cases.c: 44:         for(int i=0;i<5;i++){
  1454  007766  0E00               	movlw	0
  1455  007768  6E03               	movwf	(Par_Validated@i+1)^0,c
  1456  00776A  0E00               	movlw	0
  1457  00776C  6E02               	movwf	Par_Validated@i^0,c
  1458  00776E                     l1872:
  1459                           
  1460                           ;cases.c: 45:             UARTWrite(Error[i]);
  1461  00776E  0E54               	movlw	low _Error
  1462  007770  2402               	addwf	Par_Validated@i^0,w,c
  1463  007772  6ED9               	movwf	fsr2l,c
  1464  007774  0E00               	movlw	high _Error
  1465  007776  2003               	addwfc	(Par_Validated@i+1)^0,w,c
  1466  007778  6EDA               	movwf	fsr2h,c
  1467  00777A  50DF               	movf	indf2,w,c
  1468  00777C  EC03  F03A         	call	_UARTWrite
  1469  007780                     
  1470                           ;cases.c: 46:         }
  1471  007780  4A02               	infsnz	Par_Validated@i^0,f,c
  1472  007782  2A03               	incf	(Par_Validated@i+1)^0,f,c
  1473  007784  BE03               	btfsc	(Par_Validated@i+1)^0,7,c
  1474  007786  EFCE  F03B         	goto	u681
  1475  00778A  5003               	movf	(Par_Validated@i+1)^0,w,c
  1476  00778C  E109               	bnz	u680
  1477  00778E  0E05               	movlw	5
  1478  007790  5C02               	subwf	Par_Validated@i^0,w,c
  1479  007792  A0D8               	btfss	status,0,c
  1480  007794  EFCE  F03B         	goto	u681
  1481  007798  EFD0  F03B         	goto	u680
  1482  00779C                     u681:
  1483  00779C  EFB7  F03B         	goto	l1872
  1484  0077A0                     u680:
  1485  0077A0                     
  1486                           ;cases.c: 47:         return wait_cmd_State;
  1487  0077A0  0E01               	movlw	1
  1488  0077A2                     l44:
  1489  0077A2  0012               	return		;funcret
  1490  0077A4                     __end_of_Par_Validated:
  1491                           	opt callstack 0
  1492                           
  1493 ;; *************** function _Ins_Validated *****************
  1494 ;; Defined at:
  1495 ;;		line 51 in file "cases.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  i               2    1[COMRAM] int 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         0       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        2 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    1
  1516 ;; This function calls:
  1517 ;;		_UARTWrite
  1518 ;; This function is called by:
  1519 ;;		_verification
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text8
  1524  00790E                     __ptext8:
  1525                           	opt callstack 0
  1526  00790E                     _Ins_Validated:
  1527                           	opt callstack 28
  1528  00790E                     
  1529                           ;cases.c: 52:     PORTC=0x00;
  1530  00790E  0E00               	movlw	0
  1531  007910  6E82               	movwf	130,c	;volatile
  1532  007912                     
  1533                           ;cases.c: 53:     if(letter==0x43){
  1534  007912  0E43               	movlw	67
  1535  007914  1848               	xorwf	_letter^0,w,c
  1536  007916  A4D8               	btfss	status,2,c
  1537  007918  EF90  F03C         	goto	u691
  1538  00791C  EF92  F03C         	goto	u690
  1539  007920                     u691:
  1540  007920  EF99  F03C         	goto	l1894
  1541  007924                     u690:
  1542  007924                     
  1543                           ;cases.c: 54:         PORTC=0X02;
  1544  007924  0E02               	movlw	2
  1545  007926  6E82               	movwf	130,c	;volatile
  1546                           
  1547                           ;cases.c: 55:         click=1;
  1548  007928  0E01               	movlw	1
  1549  00792A  6E3D               	movwf	_click^0,c
  1550  00792C                     l1888:
  1551                           
  1552                           ;cases.c: 56:         return validate_Coord_State;
  1553  00792C  0E04               	movlw	4
  1554  00792E  EFCB  F03C         	goto	l51
  1555  007932                     l1894:
  1556  007932  0E53               	movlw	83
  1557  007934  1848               	xorwf	_letter^0,w,c
  1558  007936  A4D8               	btfss	status,2,c
  1559  007938  EFA0  F03C         	goto	u701
  1560  00793C  EFA2  F03C         	goto	u700
  1561  007940                     u701:
  1562  007940  EFA8  F03C         	goto	l1904
  1563  007944                     u700:
  1564  007944                     
  1565                           ;cases.c: 60:         PORTC=0X02;
  1566  007944  0E02               	movlw	2
  1567  007946  6E82               	movwf	130,c	;volatile
  1568                           
  1569                           ;cases.c: 61:         click=0;
  1570  007948  0E00               	movlw	0
  1571  00794A  6E3D               	movwf	_click^0,c
  1572  00794C  EF96  F03C         	goto	l1888
  1573  007950                     l1904:
  1574                           
  1575                           ;cases.c: 65:         UARTWrite(13);
  1576  007950  0E0D               	movlw	13
  1577  007952  EC03  F03A         	call	_UARTWrite
  1578  007956                     
  1579                           ;cases.c: 66:         for(int i=0;i<5;i++){
  1580  007956  0E00               	movlw	0
  1581  007958  6E03               	movwf	(Ins_Validated@i+1)^0,c
  1582  00795A  0E00               	movlw	0
  1583  00795C  6E02               	movwf	Ins_Validated@i^0,c
  1584  00795E                     l1912:
  1585                           
  1586                           ;cases.c: 67:             UARTWrite(Error[i]);
  1587  00795E  0E54               	movlw	low _Error
  1588  007960  2402               	addwf	Ins_Validated@i^0,w,c
  1589  007962  6ED9               	movwf	fsr2l,c
  1590  007964  0E00               	movlw	high _Error
  1591  007966  2003               	addwfc	(Ins_Validated@i+1)^0,w,c
  1592  007968  6EDA               	movwf	fsr2h,c
  1593  00796A  50DF               	movf	indf2,w,c
  1594  00796C  EC03  F03A         	call	_UARTWrite
  1595  007970                     
  1596                           ;cases.c: 68:         }
  1597  007970  4A02               	infsnz	Ins_Validated@i^0,f,c
  1598  007972  2A03               	incf	(Ins_Validated@i+1)^0,f,c
  1599  007974  BE03               	btfsc	(Ins_Validated@i+1)^0,7,c
  1600  007976  EFC6  F03C         	goto	u711
  1601  00797A  5003               	movf	(Ins_Validated@i+1)^0,w,c
  1602  00797C  E109               	bnz	u710
  1603  00797E  0E05               	movlw	5
  1604  007980  5C02               	subwf	Ins_Validated@i^0,w,c
  1605  007982  A0D8               	btfss	status,0,c
  1606  007984  EFC6  F03C         	goto	u711
  1607  007988  EFC8  F03C         	goto	u710
  1608  00798C                     u711:
  1609  00798C  EFAF  F03C         	goto	l1912
  1610  007990                     u710:
  1611  007990                     
  1612                           ;cases.c: 69:         PORTC= 0X04;
  1613  007990  0E04               	movlw	4
  1614  007992  6E82               	movwf	130,c	;volatile
  1615  007994                     
  1616                           ;cases.c: 70:         return wait_cmd_State;
  1617  007994  0E01               	movlw	1
  1618  007996                     l51:
  1619  007996  0012               	return		;funcret
  1620  007998                     __end_of_Ins_Validated:
  1621                           	opt callstack 0
  1622                           
  1623 ;; *************** function _Coord_Validated *****************
  1624 ;; Defined at:
  1625 ;;		line 74 in file "cases.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  i               2    1[COMRAM] int 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      unsigned char 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1642 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:        2 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    1
  1646 ;; This function calls:
  1647 ;;		_UARTWrite
  1648 ;; This function is called by:
  1649 ;;		_verification
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text9
  1654  00788C                     __ptext9:
  1655                           	opt callstack 0
  1656  00788C                     _Coord_Validated:
  1657                           	opt callstack 28
  1658  00788C                     
  1659                           ;cases.c: 75:     PORTC=0x00;
  1660  00788C  0E00               	movlw	0
  1661  00788E  6E82               	movwf	130,c	;volatile
  1662  007890                     
  1663                           ;cases.c: 76:     if(cord_x<=300 && cord_y<=300){
  1664  007890  0E2D               	movlw	45
  1665  007892  5C45               	subwf	_cord_x^0,w,c
  1666  007894  0E01               	movlw	1
  1667  007896  5846               	subwfb	(_cord_x+1)^0,w,c
  1668  007898  B0D8               	btfsc	status,0,c
  1669  00789A  EF51  F03C         	goto	u721
  1670  00789E  EF53  F03C         	goto	u720
  1671  0078A2                     u721:
  1672  0078A2  EF63  F03C         	goto	l1938
  1673  0078A6                     u720:
  1674  0078A6  0E2D               	movlw	45
  1675  0078A8  5C43               	subwf	_cord_y^0,w,c
  1676  0078AA  0E01               	movlw	1
  1677  0078AC  5844               	subwfb	(_cord_y+1)^0,w,c
  1678  0078AE  B0D8               	btfsc	status,0,c
  1679  0078B0  EF5C  F03C         	goto	u731
  1680  0078B4  EF5E  F03C         	goto	u730
  1681  0078B8                     u731:
  1682  0078B8  EF63  F03C         	goto	l1938
  1683  0078BC                     u730:
  1684  0078BC                     
  1685                           ;cases.c: 77:         PORTC=0X02;
  1686  0078BC  0E02               	movlw	2
  1687  0078BE  6E82               	movwf	130,c	;volatile
  1688  0078C0                     
  1689                           ;cases.c: 78:         return end_State;
  1690  0078C0  0E05               	movlw	5
  1691  0078C2  EF86  F03C         	goto	l60
  1692  0078C6                     l1938:
  1693                           
  1694                           ;cases.c: 81:         UARTWrite(13);
  1695  0078C6  0E0D               	movlw	13
  1696  0078C8  EC03  F03A         	call	_UARTWrite
  1697  0078CC                     
  1698                           ;cases.c: 82:         for(int i=0;i<5;i++){
  1699  0078CC  0E00               	movlw	0
  1700  0078CE  6E03               	movwf	(Coord_Validated@i+1)^0,c
  1701  0078D0  0E00               	movlw	0
  1702  0078D2  6E02               	movwf	Coord_Validated@i^0,c
  1703  0078D4                     l1946:
  1704                           
  1705                           ;cases.c: 83:             UARTWrite(Error[i]);
  1706  0078D4  0E54               	movlw	low _Error
  1707  0078D6  2402               	addwf	Coord_Validated@i^0,w,c
  1708  0078D8  6ED9               	movwf	fsr2l,c
  1709  0078DA  0E00               	movlw	high _Error
  1710  0078DC  2003               	addwfc	(Coord_Validated@i+1)^0,w,c
  1711  0078DE  6EDA               	movwf	fsr2h,c
  1712  0078E0  50DF               	movf	indf2,w,c
  1713  0078E2  EC03  F03A         	call	_UARTWrite
  1714  0078E6                     
  1715                           ;cases.c: 84:         }
  1716  0078E6  4A02               	infsnz	Coord_Validated@i^0,f,c
  1717  0078E8  2A03               	incf	(Coord_Validated@i+1)^0,f,c
  1718  0078EA  BE03               	btfsc	(Coord_Validated@i+1)^0,7,c
  1719  0078EC  EF81  F03C         	goto	u741
  1720  0078F0  5003               	movf	(Coord_Validated@i+1)^0,w,c
  1721  0078F2  E109               	bnz	u740
  1722  0078F4  0E05               	movlw	5
  1723  0078F6  5C02               	subwf	Coord_Validated@i^0,w,c
  1724  0078F8  A0D8               	btfss	status,0,c
  1725  0078FA  EF81  F03C         	goto	u741
  1726  0078FE  EF83  F03C         	goto	u740
  1727  007902                     u741:
  1728  007902  EF6A  F03C         	goto	l1946
  1729  007906                     u740:
  1730  007906                     
  1731                           ;cases.c: 85:         PORTC= 0X04;
  1732  007906  0E04               	movlw	4
  1733  007908  6E82               	movwf	130,c	;volatile
  1734  00790A                     
  1735                           ;cases.c: 86:        return wait_cmd_State;
  1736  00790A  0E01               	movlw	1
  1737  00790C                     l60:
  1738  00790C  0012               	return		;funcret
  1739  00790E                     __end_of_Coord_Validated:
  1740                           	opt callstack 0
  1741                           
  1742 ;; *************** function ___lwmod *****************
  1743 ;; Defined at:
  1744 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  dividend        2    0[COMRAM] unsigned int 
  1747 ;;  divisor         2    2[COMRAM] unsigned int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  counter         1    4[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  2    0[COMRAM] unsigned int 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1759 ;;      Params:         4       0       0       0       0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1762 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1763 ;;Total ram usage:        5 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text10
  1773  00765C                     __ptext10:
  1774                           	opt callstack 0
  1775  00765C                     ___lwmod:
  1776                           	opt callstack 30
  1777  00765C  5003               	movf	___lwmod@divisor^0,w,c
  1778  00765E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1779  007660  B4D8               	btfsc	status,2,c
  1780  007662  EF35  F03B         	goto	u901
  1781  007666  EF37  F03B         	goto	u900
  1782  00766A                     u901:
  1783  00766A  EF5B  F03B         	goto	l970
  1784  00766E                     u900:
  1785  00766E  0E01               	movlw	1
  1786  007670  6E05               	movwf	___lwmod@counter^0,c
  1787  007672  EF3F  F03B         	goto	l2178
  1788  007676                     l2176:
  1789  007676  90D8               	bcf	status,0,c
  1790  007678  3603               	rlcf	___lwmod@divisor^0,f,c
  1791  00767A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1792  00767C  2A05               	incf	___lwmod@counter^0,f,c
  1793  00767E                     l2178:
  1794  00767E  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1795  007680  EF44  F03B         	goto	u911
  1796  007684  EF46  F03B         	goto	u910
  1797  007688                     u911:
  1798  007688  EF3B  F03B         	goto	l2176
  1799  00768C                     u910:
  1800  00768C                     l2180:
  1801  00768C  5003               	movf	___lwmod@divisor^0,w,c
  1802  00768E  5C01               	subwf	___lwmod@dividend^0,w,c
  1803  007690  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1804  007692  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1805  007694  A0D8               	btfss	status,0,c
  1806  007696  EF4F  F03B         	goto	u921
  1807  00769A  EF51  F03B         	goto	u920
  1808  00769E                     u921:
  1809  00769E  EF55  F03B         	goto	l2184
  1810  0076A2                     u920:
  1811  0076A2  5003               	movf	___lwmod@divisor^0,w,c
  1812  0076A4  5E01               	subwf	___lwmod@dividend^0,f,c
  1813  0076A6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1814  0076A8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1815  0076AA                     l2184:
  1816  0076AA  90D8               	bcf	status,0,c
  1817  0076AC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1818  0076AE  3203               	rrcf	___lwmod@divisor^0,f,c
  1819  0076B0  2E05               	decfsz	___lwmod@counter^0,f,c
  1820  0076B2  EF46  F03B         	goto	l2180
  1821  0076B6                     l970:
  1822  0076B6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1823  0076BA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1824  0076BE  0012               	return		;funcret
  1825  0076C0                     __end_of___lwmod:
  1826                           	opt callstack 0
  1827                           
  1828 ;; *************** function ___lwdiv *****************
  1829 ;; Defined at:
  1830 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  dividend        2    5[COMRAM] unsigned int 
  1833 ;;  divisor         2    7[COMRAM] unsigned int 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  quotient        2    9[COMRAM] unsigned int 
  1836 ;;  counter         1   11[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2    5[COMRAM] unsigned int 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1846 ;;      Params:         4       0       0       0       0       0       0       0       0
  1847 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1849 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1850 ;;Total ram usage:        7 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text11
  1860  0077A4                     __ptext11:
  1861                           	opt callstack 0
  1862  0077A4                     ___lwdiv:
  1863                           	opt callstack 30
  1864  0077A4  0E00               	movlw	0
  1865  0077A6  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1866  0077A8  0E00               	movlw	0
  1867  0077AA  6E0A               	movwf	___lwdiv@quotient^0,c
  1868  0077AC  5008               	movf	___lwdiv@divisor^0,w,c
  1869  0077AE  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1870  0077B0  B4D8               	btfsc	status,2,c
  1871  0077B2  EFDD  F03B         	goto	u871
  1872  0077B6  EFDF  F03B         	goto	u870
  1873  0077BA                     u871:
  1874  0077BA  EF07  F03C         	goto	l960
  1875  0077BE                     u870:
  1876  0077BE  0E01               	movlw	1
  1877  0077C0  6E0C               	movwf	___lwdiv@counter^0,c
  1878  0077C2  EFE7  F03B         	goto	l2158
  1879  0077C6                     l2156:
  1880  0077C6  90D8               	bcf	status,0,c
  1881  0077C8  3608               	rlcf	___lwdiv@divisor^0,f,c
  1882  0077CA  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1883  0077CC  2A0C               	incf	___lwdiv@counter^0,f,c
  1884  0077CE                     l2158:
  1885  0077CE  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1886  0077D0  EFEC  F03B         	goto	u881
  1887  0077D4  EFEE  F03B         	goto	u880
  1888  0077D8                     u881:
  1889  0077D8  EFE3  F03B         	goto	l2156
  1890  0077DC                     u880:
  1891  0077DC                     l2160:
  1892  0077DC  90D8               	bcf	status,0,c
  1893  0077DE  360A               	rlcf	___lwdiv@quotient^0,f,c
  1894  0077E0  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1895  0077E2  5008               	movf	___lwdiv@divisor^0,w,c
  1896  0077E4  5C06               	subwf	___lwdiv@dividend^0,w,c
  1897  0077E6  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1898  0077E8  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1899  0077EA  A0D8               	btfss	status,0,c
  1900  0077EC  EFFA  F03B         	goto	u891
  1901  0077F0  EFFC  F03B         	goto	u890
  1902  0077F4                     u891:
  1903  0077F4  EF01  F03C         	goto	l2168
  1904  0077F8                     u890:
  1905  0077F8  5008               	movf	___lwdiv@divisor^0,w,c
  1906  0077FA  5E06               	subwf	___lwdiv@dividend^0,f,c
  1907  0077FC  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1908  0077FE  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1909  007800  800A               	bsf	___lwdiv@quotient^0,0,c
  1910  007802                     l2168:
  1911  007802  90D8               	bcf	status,0,c
  1912  007804  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1913  007806  3208               	rrcf	___lwdiv@divisor^0,f,c
  1914  007808  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1915  00780A  EFEE  F03B         	goto	l2160
  1916  00780E                     l960:
  1917  00780E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1918  007812  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1919  007816  0012               	return		;funcret
  1920  007818                     __end_of___lwdiv:
  1921                           	opt callstack 0
  1922                           
  1923 ;; *************** function _Movimiento *****************
  1924 ;; Defined at:
  1925 ;;		line 9 in file "Movimiento.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  i               2   20[COMRAM] int 
  1930 ;;  i               2   18[COMRAM] int 
  1931 ;;  loquequieras    5   13[COMRAM] unsigned char [5]
  1932 ;;  loquequieras    5    8[COMRAM] unsigned char [5]
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2  130[None  ] int 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0
  1943 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1945 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:       16 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		_PWM
  1951 ;;		_UARTWrite
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text12
  1958  007B1C                     __ptext12:
  1959                           	opt callstack 0
  1960  007B1C                     _Movimiento:
  1961                           	opt callstack 27
  1962  007B1C                     
  1963                           ;Movimiento.c: 10:     if(click==1){
  1964  007B1C  043D               	decf	_click^0,w,c
  1965  007B1E  A4D8               	btfss	status,2,c
  1966  007B20  EF94  F03D         	goto	u811
  1967  007B24  EF96  F03D         	goto	u810
  1968  007B28                     u811:
  1969  007B28  EFCE  F03D         	goto	l2128
  1970  007B2C                     u810:
  1971  007B2C                     
  1972                           ;Movimiento.c: 11:         PWM();
  1973  007B2C  EC87  F03E         	call	_PWM	;wreg free
  1974  007B30                     
  1975                           ;Movimiento.c: 12:         PORTDbits.RD7=1;
  1976  007B30  8E83               	bsf	131,7,c	;volatile
  1977  007B32                     
  1978                           ;Movimiento.c: 13:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  1979  007B32  0E02               	movlw	2
  1980  007B34  6E08               	movwf	(??_Movimiento+1)^0,c
  1981  007B36  0E04               	movlw	4
  1982  007B38  6E07               	movwf	??_Movimiento^0,c
  1983  007B3A  0EBA               	movlw	186
  1984  007B3C                     u957:
  1985  007B3C  2EE8               	decfsz	wreg,f,c
  1986  007B3E  D7FE               	bra	u957
  1987  007B40  2E07               	decfsz	??_Movimiento^0,f,c
  1988  007B42  D7FC               	bra	u957
  1989  007B44  2E08               	decfsz	(??_Movimiento+1)^0,f,c
  1990  007B46  D7FA               	bra	u957
  1991  007B48  D000               	nop2	
  1992  007B4A                     
  1993                           ;Movimiento.c: 14:         PORTDbits.RD7=0;
  1994  007B4A  9E83               	bcf	131,7,c	;volatile
  1995  007B4C                     
  1996                           ;Movimiento.c: 15:         char loquequieras[5]="click";
  1997  007B4C  EE20  F04F         	lfsr	2,Movimiento@F3244
  1998  007B50  EE10  F009         	lfsr	1,Movimiento@loquequieras
  1999  007B54  0E04               	movlw	4
  2000  007B56                     u821:
  2001  007B56  CFDB FFE3          	movff	plusw2,plusw1
  2002  007B5A  06E8               	decf	wreg,f,c
  2003  007B5C  E2FC               	bc	u821
  2004  007B5E                     
  2005                           ;Movimiento.c: 16:        for(int i=0;i<5;i++){
  2006  007B5E  0E00               	movlw	0
  2007  007B60  6E14               	movwf	(Movimiento@i+1)^0,c
  2008  007B62  0E00               	movlw	0
  2009  007B64  6E13               	movwf	Movimiento@i^0,c
  2010  007B66                     l2122:
  2011                           
  2012                           ;Movimiento.c: 17:        UARTWrite(loquequieras[i]);
  2013  007B66  0E09               	movlw	low Movimiento@loquequieras
  2014  007B68  2413               	addwf	Movimiento@i^0,w,c
  2015  007B6A  6ED9               	movwf	fsr2l,c
  2016  007B6C  0E00               	movlw	high Movimiento@loquequieras
  2017  007B6E  2014               	addwfc	(Movimiento@i+1)^0,w,c
  2018  007B70  6EDA               	movwf	fsr2h,c
  2019  007B72  50DF               	movf	indf2,w,c
  2020  007B74  EC03  F03A         	call	_UARTWrite
  2021  007B78                     
  2022                           ;Movimiento.c: 18:        }
  2023  007B78  4A13               	infsnz	Movimiento@i^0,f,c
  2024  007B7A  2A14               	incf	(Movimiento@i+1)^0,f,c
  2025  007B7C  BE14               	btfsc	(Movimiento@i+1)^0,7,c
  2026  007B7E  EFCA  F03D         	goto	u831
  2027  007B82  5014               	movf	(Movimiento@i+1)^0,w,c
  2028  007B84  E109               	bnz	u830
  2029  007B86  0E05               	movlw	5
  2030  007B88  5C13               	subwf	Movimiento@i^0,w,c
  2031  007B8A  A0D8               	btfss	status,0,c
  2032  007B8C  EFCA  F03D         	goto	u831
  2033  007B90  EFCC  F03D         	goto	u830
  2034  007B94                     u831:
  2035  007B94  EFB3  F03D         	goto	l2122
  2036  007B98                     u830:
  2037  007B98  EF00  F03E         	goto	l376
  2038  007B9C                     l2128:
  2039  007B9C  503D               	movf	_click^0,w,c
  2040  007B9E  A4D8               	btfss	status,2,c
  2041  007BA0  EFD4  F03D         	goto	u841
  2042  007BA4  EFD6  F03D         	goto	u840
  2043  007BA8                     u841:
  2044  007BA8  EF00  F03E         	goto	l376
  2045  007BAC                     u840:
  2046  007BAC                     
  2047                           ;Movimiento.c: 22:         PORTDbits.RD7=1;
  2048  007BAC  8E83               	bsf	131,7,c	;volatile
  2049  007BAE                     
  2050                           ;Movimiento.c: 23:         PWM();
  2051  007BAE  EC87  F03E         	call	_PWM	;wreg free
  2052  007BB2                     
  2053                           ;Movimiento.c: 24:         PORTDbits.RD7=0;
  2054  007BB2  9E83               	bcf	131,7,c	;volatile
  2055  007BB4                     
  2056                           ;Movimiento.c: 25:         char loquequieras2[5]="slide";
  2057  007BB4  EE20  F04A         	lfsr	2,Movimiento@F3247
  2058  007BB8  EE10  F00E         	lfsr	1,Movimiento@loquequieras2
  2059  007BBC  0E04               	movlw	4
  2060  007BBE                     u851:
  2061  007BBE  CFDB FFE3          	movff	plusw2,plusw1
  2062  007BC2  06E8               	decf	wreg,f,c
  2063  007BC4  E2FC               	bc	u851
  2064  007BC6                     
  2065                           ;Movimiento.c: 26:        for(int i=0;i<5;i++){
  2066  007BC6  0E00               	movlw	0
  2067  007BC8  6E16               	movwf	(Movimiento@i_712+1)^0,c
  2068  007BCA  0E00               	movlw	0
  2069  007BCC  6E15               	movwf	Movimiento@i_712^0,c
  2070  007BCE                     l2144:
  2071                           
  2072                           ;Movimiento.c: 27:        UARTWrite(loquequieras2[i]);
  2073  007BCE  0E0E               	movlw	low Movimiento@loquequieras2
  2074  007BD0  2415               	addwf	Movimiento@i_712^0,w,c
  2075  007BD2  6ED9               	movwf	fsr2l,c
  2076  007BD4  0E00               	movlw	high Movimiento@loquequieras2
  2077  007BD6  2016               	addwfc	(Movimiento@i_712+1)^0,w,c
  2078  007BD8  6EDA               	movwf	fsr2h,c
  2079  007BDA  50DF               	movf	indf2,w,c
  2080  007BDC  EC03  F03A         	call	_UARTWrite
  2081  007BE0                     
  2082                           ;Movimiento.c: 28:        }
  2083  007BE0  4A15               	infsnz	Movimiento@i_712^0,f,c
  2084  007BE2  2A16               	incf	(Movimiento@i_712+1)^0,f,c
  2085  007BE4  BE16               	btfsc	(Movimiento@i_712+1)^0,7,c
  2086  007BE6  EFFE  F03D         	goto	u861
  2087  007BEA  5016               	movf	(Movimiento@i_712+1)^0,w,c
  2088  007BEC  E109               	bnz	u860
  2089  007BEE  0E05               	movlw	5
  2090  007BF0  5C15               	subwf	Movimiento@i_712^0,w,c
  2091  007BF2  A0D8               	btfss	status,0,c
  2092  007BF4  EFFE  F03D         	goto	u861
  2093  007BF8  EF00  F03E         	goto	u860
  2094  007BFC                     u861:
  2095  007BFC  EFE7  F03D         	goto	l2144
  2096  007C00                     u860:
  2097  007C00                     l376:
  2098  007C00  0012               	return		;funcret
  2099  007C02                     __end_of_Movimiento:
  2100                           	opt callstack 0
  2101                           
  2102 ;; *************** function _UARTWrite *****************
  2103 ;; Defined at:
  2104 ;;		line 26 in file "UART.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  data            1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  data            1    0[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        1 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_start
  2128 ;;		_cmd
  2129 ;;		_Par_Validated
  2130 ;;		_Ins_Validated
  2131 ;;		_Coord_Validated
  2132 ;;		_end
  2133 ;;		_main
  2134 ;;		_Movimiento
  2135 ;;		_HaltMotors
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text13
  2140  007406                     __ptext13:
  2141                           	opt callstack 0
  2142  007406                     _UARTWrite:
  2143                           	opt callstack 28
  2144                           
  2145                           ;incstack = 0
  2146                           ;UARTWrite@data stored from wreg
  2147  007406  6E01               	movwf	UARTWrite@data^0,c
  2148  007408                     l90:
  2149  007408  A89E               	btfss	158,4,c	;volatile
  2150  00740A  EF09  F03A         	goto	u531
  2151  00740E  EF0B  F03A         	goto	u530
  2152  007412                     u531:
  2153  007412  EF04  F03A         	goto	l90
  2154  007416                     u530:
  2155  007416                     
  2156                           ;UART.c: 28:     TXREG= data;
  2157  007416  C001  FFAD         	movff	UARTWrite@data,4013	;volatile
  2158  00741A  0012               	return		;funcret
  2159  00741C                     __end_of_UARTWrite:
  2160                           	opt callstack 0
  2161                           
  2162 ;; *************** function _PWM *****************
  2163 ;; Defined at:
  2164 ;;		line 19 in file "PWM.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    2
  2185 ;; This function calls:
  2186 ;;		_ContarPulsos
  2187 ;;		___wmul
  2188 ;; This function is called by:
  2189 ;;		_Movimiento
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text14
  2194  007D0E                     __ptext14:
  2195                           	opt callstack 0
  2196  007D0E                     _PWM:
  2197                           	opt callstack 27
  2198  007D0E                     
  2199                           ;PWM.c: 21:     BanderaDisX= 1;
  2200  007D0E  0E00               	movlw	0
  2201  007D10  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2202  007D12  0E01               	movlw	1
  2203  007D14  6E2D               	movwf	_BanderaDisX^0,c
  2204                           
  2205                           ;PWM.c: 22:     BanderaDisY= 1;
  2206  007D16  0E00               	movlw	0
  2207  007D18  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2208  007D1A  0E01               	movlw	1
  2209  007D1C  6E2B               	movwf	_BanderaDisY^0,c
  2210  007D1E                     
  2211                           ;PWM.c: 27:     if (CoordAntX==0) CoordRelatX=cord_x;
  2212  007D1E  503B               	movf	_CoordAntX^0,w,c
  2213  007D20  103C               	iorwf	(_CoordAntX+1)^0,w,c
  2214  007D22  A4D8               	btfss	status,2,c
  2215  007D24  EF96  F03E         	goto	u761
  2216  007D28  EF98  F03E         	goto	u760
  2217  007D2C                     u761:
  2218  007D2C  EF9E  F03E         	goto	l2000
  2219  007D30                     u760:
  2220  007D30  C045  F041         	movff	_cord_x,_CoordRelatX
  2221  007D34  C046  F042         	movff	_cord_x+1,_CoordRelatX+1
  2222  007D38  EFA4  F03E         	goto	l240
  2223  007D3C                     l2000:
  2224  007D3C  503B               	movf	_CoordAntX^0,w,c
  2225  007D3E  5C45               	subwf	_cord_x^0,w,c
  2226  007D40  6E41               	movwf	_CoordRelatX^0,c
  2227  007D42  503C               	movf	(_CoordAntX+1)^0,w,c
  2228  007D44  5846               	subwfb	(_cord_x+1)^0,w,c
  2229  007D46  6E42               	movwf	(_CoordRelatX+1)^0,c
  2230  007D48                     l240:
  2231                           
  2232                           ;PWM.c: 31:     if (CoordRelatX<0){
  2233  007D48  BE42               	btfsc	(_CoordRelatX+1)^0,7,c
  2234  007D4A  EFAB  F03E         	goto	u770
  2235  007D4E  EFA9  F03E         	goto	u771
  2236  007D52                     u771:
  2237  007D52  EFB7  F03E         	goto	l241
  2238  007D56                     u770:
  2239  007D56                     
  2240                           ;PWM.c: 32:         PORTDbits.RD0=0;
  2241  007D56  9083               	bcf	131,0,c	;volatile
  2242                           
  2243                           ;PWM.c: 33:         PORTDbits.RD1=0;
  2244  007D58  9283               	bcf	131,1,c	;volatile
  2245  007D5A                     
  2246                           ;PWM.c: 34:         CoordRelatX=CoordRelatX*(-1);
  2247  007D5A  6C41               	negf	_CoordRelatX^0,c
  2248  007D5C  1E42               	comf	(_CoordRelatX+1)^0,f,c
  2249  007D5E  B0D8               	btfsc	status,0,c
  2250  007D60  2A42               	incf	(_CoordRelatX+1)^0,f,c
  2251  007D62                     
  2252                           ;PWM.c: 35:         BanderaDisX= 0;
  2253  007D62  0E00               	movlw	0
  2254  007D64  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2255  007D66  0E00               	movlw	0
  2256  007D68  6E2D               	movwf	_BanderaDisX^0,c
  2257                           
  2258                           ;PWM.c: 36:     }
  2259  007D6A  EFBD  F03E         	goto	l2010
  2260  007D6E                     l241:
  2261                           
  2262                           ;PWM.c: 38:             PORTDbits.RD0=1;
  2263  007D6E  8083               	bsf	131,0,c	;volatile
  2264                           
  2265                           ;PWM.c: 39:             PORTDbits.RD1=1;
  2266  007D70  8283               	bsf	131,1,c	;volatile
  2267  007D72                     
  2268                           ;PWM.c: 40:             BanderaDisX= 1;
  2269  007D72  0E00               	movlw	0
  2270  007D74  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2271  007D76  0E01               	movlw	1
  2272  007D78  6E2D               	movwf	_BanderaDisX^0,c
  2273  007D7A                     l2010:
  2274                           
  2275                           ;PWM.c: 43:     PasosX=CoordRelatX*5;
  2276  007D7A  C041  F001         	movff	_CoordRelatX,___wmul@multiplier
  2277  007D7E  C042  F002         	movff	_CoordRelatX+1,___wmul@multiplier+1
  2278  007D82  0E00               	movlw	0
  2279  007D84  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2280  007D86  0E05               	movlw	5
  2281  007D88  6E03               	movwf	___wmul@multiplicand^0,c
  2282  007D8A  EC1D  F03A         	call	___wmul	;wreg free
  2283  007D8E  C001  F031         	movff	?___wmul,_PasosX
  2284  007D92  C002  F032         	movff	?___wmul+1,_PasosX+1
  2285  007D96                     
  2286                           ;PWM.c: 44:     ContarPulsos(PasosX);
  2287  007D96  C031  F001         	movff	_PasosX,ContarPulsos@pasos
  2288  007D9A  C032  F002         	movff	_PasosX+1,ContarPulsos@pasos+1
  2289  007D9E  ECD1  F03A         	call	_ContarPulsos	;wreg free
  2290  007DA2                     
  2291                           ;PWM.c: 47:     if(BanderaDisX= 0) CoordAntX= CoordAntX-CoordRelatX;
  2292  007DA2  0E00               	movlw	0
  2293  007DA4  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2294  007DA6  0E00               	movlw	0
  2295  007DA8  6E2D               	movwf	_BanderaDisX^0,c
  2296  007DAA                     
  2297                           ;PWM.c: 49:         if (BanderaDisX= 1) CoordAntX=CoordAntX+CoordRelatX;
  2298  007DAA  0E00               	movlw	0
  2299  007DAC  6E2E               	movwf	(_BanderaDisX+1)^0,c
  2300  007DAE  0E01               	movlw	1
  2301  007DB0  6E2D               	movwf	_BanderaDisX^0,c
  2302  007DB2  503B               	movf	_CoordAntX^0,w,c
  2303  007DB4  2441               	addwf	_CoordRelatX^0,w,c
  2304  007DB6  6E3B               	movwf	_CoordAntX^0,c
  2305  007DB8  503C               	movf	(_CoordAntX+1)^0,w,c
  2306  007DBA  2042               	addwfc	(_CoordRelatX+1)^0,w,c
  2307  007DBC  6E3C               	movwf	(_CoordAntX+1)^0,c
  2308  007DBE                     
  2309                           ;PWM.c: 56:     if (CoordAntY==0) CoordRelatY=cord_y;
  2310  007DBE  5039               	movf	_CoordAntY^0,w,c
  2311  007DC0  103A               	iorwf	(_CoordAntY+1)^0,w,c
  2312  007DC2  A4D8               	btfss	status,2,c
  2313  007DC4  EFE6  F03E         	goto	u781
  2314  007DC8  EFE8  F03E         	goto	u780
  2315  007DCC                     u781:
  2316  007DCC  EFEE  F03E         	goto	l2026
  2317  007DD0                     u780:
  2318  007DD0  C043  F03F         	movff	_cord_y,_CoordRelatY
  2319  007DD4  C044  F040         	movff	_cord_y+1,_CoordRelatY+1
  2320  007DD8  EFF4  F03E         	goto	l247
  2321  007DDC                     l2026:
  2322  007DDC  5039               	movf	_CoordAntY^0,w,c
  2323  007DDE  5C43               	subwf	_cord_y^0,w,c
  2324  007DE0  6E3F               	movwf	_CoordRelatY^0,c
  2325  007DE2  503A               	movf	(_CoordAntY+1)^0,w,c
  2326  007DE4  5844               	subwfb	(_cord_y+1)^0,w,c
  2327  007DE6  6E40               	movwf	(_CoordRelatY+1)^0,c
  2328  007DE8                     l247:
  2329                           
  2330                           ;PWM.c: 59:     if (CoordRelatY<0){
  2331  007DE8  BE40               	btfsc	(_CoordRelatY+1)^0,7,c
  2332  007DEA  EFFB  F03E         	goto	u790
  2333  007DEE  EFF9  F03E         	goto	u791
  2334  007DF2                     u791:
  2335  007DF2  EF07  F03F         	goto	l248
  2336  007DF6                     u790:
  2337  007DF6                     
  2338                           ;PWM.c: 60:         PORTDbits.RD0=0;
  2339  007DF6  9083               	bcf	131,0,c	;volatile
  2340                           
  2341                           ;PWM.c: 61:         PORTDbits.RD1=1;
  2342  007DF8  8283               	bsf	131,1,c	;volatile
  2343  007DFA                     
  2344                           ;PWM.c: 62:         CoordRelatY=CoordRelatY*(-1);
  2345  007DFA  6C3F               	negf	_CoordRelatY^0,c
  2346  007DFC  1E40               	comf	(_CoordRelatY+1)^0,f,c
  2347  007DFE  B0D8               	btfsc	status,0,c
  2348  007E00  2A40               	incf	(_CoordRelatY+1)^0,f,c
  2349  007E02                     
  2350                           ;PWM.c: 63:         BanderaDisY= 0;
  2351  007E02  0E00               	movlw	0
  2352  007E04  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2353  007E06  0E00               	movlw	0
  2354  007E08  6E2B               	movwf	_BanderaDisY^0,c
  2355                           
  2356                           ;PWM.c: 64:     }
  2357  007E0A  EF0D  F03F         	goto	l2036
  2358  007E0E                     l248:
  2359                           
  2360                           ;PWM.c: 66:         PORTDbits.RD0=1;
  2361  007E0E  8083               	bsf	131,0,c	;volatile
  2362                           
  2363                           ;PWM.c: 67:         PORTDbits.RD1=1;
  2364  007E10  8283               	bsf	131,1,c	;volatile
  2365  007E12                     
  2366                           ;PWM.c: 68:          BanderaDisY= 1;
  2367  007E12  0E00               	movlw	0
  2368  007E14  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2369  007E16  0E01               	movlw	1
  2370  007E18  6E2B               	movwf	_BanderaDisY^0,c
  2371  007E1A                     l2036:
  2372                           
  2373                           ;PWM.c: 71:     PasosY=CoordRelatY*5;
  2374  007E1A  C03F  F001         	movff	_CoordRelatY,___wmul@multiplier
  2375  007E1E  C040  F002         	movff	_CoordRelatY+1,___wmul@multiplier+1
  2376  007E22  0E00               	movlw	0
  2377  007E24  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2378  007E26  0E05               	movlw	5
  2379  007E28  6E03               	movwf	___wmul@multiplicand^0,c
  2380  007E2A  EC1D  F03A         	call	___wmul	;wreg free
  2381  007E2E  C001  F02F         	movff	?___wmul,_PasosY
  2382  007E32  C002  F030         	movff	?___wmul+1,_PasosY+1
  2383  007E36                     
  2384                           ;PWM.c: 72:     ContarPulsos(PasosY);
  2385  007E36  C02F  F001         	movff	_PasosY,ContarPulsos@pasos
  2386  007E3A  C030  F002         	movff	_PasosY+1,ContarPulsos@pasos+1
  2387  007E3E  ECD1  F03A         	call	_ContarPulsos	;wreg free
  2388  007E42                     
  2389                           ;PWM.c: 75:     if(BanderaDisY= 0) CoordAntY= CoordAntY-CoordRelatY;
  2390  007E42  0E00               	movlw	0
  2391  007E44  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2392  007E46  0E00               	movlw	0
  2393  007E48  6E2B               	movwf	_BanderaDisY^0,c
  2394  007E4A                     
  2395                           ;PWM.c: 77:         if (BanderaDisY= 1) CoordAntY=CoordAntY+CoordRelatY;
  2396  007E4A  0E00               	movlw	0
  2397  007E4C  6E2C               	movwf	(_BanderaDisY+1)^0,c
  2398  007E4E  0E01               	movlw	1
  2399  007E50  6E2B               	movwf	_BanderaDisY^0,c
  2400  007E52  5039               	movf	_CoordAntY^0,w,c
  2401  007E54  243F               	addwf	_CoordRelatY^0,w,c
  2402  007E56  6E39               	movwf	_CoordAntY^0,c
  2403  007E58  503A               	movf	(_CoordAntY+1)^0,w,c
  2404  007E5A  2040               	addwfc	(_CoordRelatY+1)^0,w,c
  2405  007E5C  6E3A               	movwf	(_CoordAntY+1)^0,c
  2406  007E5E  0012               	return		;funcret
  2407  007E60                     __end_of_PWM:
  2408                           	opt callstack 0
  2409                           
  2410 ;; *************** function ___wmul *****************
  2411 ;; Defined at:
  2412 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  multiplier      2    0[COMRAM] unsigned int 
  2415 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  product         2    4[COMRAM] unsigned int 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2    0[COMRAM] unsigned int 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, prodl, prodh
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2427 ;;      Params:         4       0       0       0       0       0       0       0       0
  2428 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2430 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2431 ;;Total ram usage:        6 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_PWM
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text15
  2441  00743A                     __ptext15:
  2442                           	opt callstack 0
  2443  00743A                     ___wmul:
  2444                           	opt callstack 28
  2445  00743A  5001               	movf	___wmul@multiplier^0,w,c
  2446  00743C  0203               	mulwf	___wmul@multiplicand^0,c
  2447  00743E  CFF3 F005          	movff	prodl,___wmul@product
  2448  007442  CFF4 F006          	movff	prodh,___wmul@product+1
  2449  007446  5001               	movf	___wmul@multiplier^0,w,c
  2450  007448  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2451  00744A  50F3               	movf	243,w,c
  2452  00744C  2606               	addwf	(___wmul@product+1)^0,f,c
  2453  00744E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2454  007450  0203               	mulwf	___wmul@multiplicand^0,c
  2455  007452  50F3               	movf	243,w,c
  2456  007454  2606               	addwf	(___wmul@product+1)^0,f,c
  2457  007456  C005  F001         	movff	___wmul@product,?___wmul
  2458  00745A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2459  00745E  0012               	return		;funcret
  2460  007460                     __end_of___wmul:
  2461                           	opt callstack 0
  2462                           
  2463 ;; *************** function _ContarPulsos *****************
  2464 ;; Defined at:
  2465 ;;		line 82 in file "PWM.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  pasos           2    0[COMRAM] int 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  2    0[COMRAM] int 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2479 ;;      Params:         2       0       0       0       0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2482 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2483 ;;Total ram usage:        2 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    1
  2486 ;; This function calls:
  2487 ;;		_OneShot
  2488 ;;		_ResetOneShot
  2489 ;; This function is called by:
  2490 ;;		_PWM
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text16
  2495  0075A2                     __ptext16:
  2496                           	opt callstack 0
  2497  0075A2                     _ContarPulsos:
  2498                           	opt callstack 27
  2499  0075A2                     
  2500                           ;PWM.c: 83:     PasosActuales=0;
  2501  0075A2  0E00               	movlw	0
  2502  0075A4  6E36               	movwf	(_PasosActuales+1)^0,c
  2503  0075A6  0E00               	movlw	0
  2504  0075A8  6E35               	movwf	_PasosActuales^0,c
  2505                           
  2506                           ;PWM.c: 84:     ons=0;
  2507  0075AA  0E00               	movlw	0
  2508  0075AC  6E34               	movwf	(_ons+1)^0,c
  2509  0075AE  0E00               	movlw	0
  2510  0075B0  6E33               	movwf	_ons^0,c
  2511  0075B2                     
  2512                           ;PWM.c: 85:     PORTDbits.RD2=0;
  2513  0075B2  9483               	bcf	131,2,c	;volatile
  2514  0075B4                     
  2515                           ;PWM.c: 86:     PORTDbits.RD3=0;
  2516  0075B4  9683               	bcf	131,3,c	;volatile
  2517                           
  2518                           ;PWM.c: 87:     while(PasosActuales< pasos)
  2519  0075B6  EFF1  F03A         	goto	l1760
  2520  0075BA                     l257:
  2521                           
  2522                           ;PWM.c: 88:     {;PWM.c: 89:         if (PORTCbits.CCP1==1) OneShot();
  2523  0075BA  A482               	btfss	130,2,c	;volatile
  2524  0075BC  EFE2  F03A         	goto	u551
  2525  0075C0  EFE4  F03A         	goto	u550
  2526  0075C4                     u551:
  2527  0075C4  EFE6  F03A         	goto	l1756
  2528  0075C8                     u550:
  2529  0075C8  EC45  F03A         	call	_OneShot	;wreg free
  2530  0075CC                     l1756:
  2531                           
  2532                           ;PWM.c: 90:         if(ons==1) ResetOneShot();
  2533  0075CC  0433               	decf	_ons^0,w,c
  2534  0075CE  1034               	iorwf	(_ons+1)^0,w,c
  2535  0075D0  A4D8               	btfss	status,2,c
  2536  0075D2  EFED  F03A         	goto	u561
  2537  0075D6  EFEF  F03A         	goto	u560
  2538  0075DA                     u561:
  2539  0075DA  EFF1  F03A         	goto	l1760
  2540  0075DE                     u560:
  2541  0075DE  EC30  F03A         	call	_ResetOneShot	;wreg free
  2542  0075E2                     l1760:
  2543                           
  2544                           ;PWM.c: 87:     while(PasosActuales< pasos)
  2545  0075E2  5001               	movf	ContarPulsos@pasos^0,w,c
  2546  0075E4  5C35               	subwf	_PasosActuales^0,w,c
  2547  0075E6  5002               	movf	(ContarPulsos@pasos+1)^0,w,c
  2548  0075E8  5836               	subwfb	(_PasosActuales+1)^0,w,c
  2549  0075EA  A0D8               	btfss	status,0,c
  2550  0075EC  EFFA  F03A         	goto	u571
  2551  0075F0  EFFC  F03A         	goto	u570
  2552  0075F4                     u571:
  2553  0075F4  EFDD  F03A         	goto	l257
  2554  0075F8                     u570:
  2555  0075F8                     
  2556                           ;PWM.c: 93:     PORTDbits.RD2=1;
  2557  0075F8  8483               	bsf	131,2,c	;volatile
  2558                           
  2559                           ;PWM.c: 94:     PORTDbits.RD3=1;
  2560  0075FA  8683               	bsf	131,3,c	;volatile
  2561  0075FC  0012               	return		;funcret
  2562  0075FE                     __end_of_ContarPulsos:
  2563                           	opt callstack 0
  2564                           
  2565 ;; *************** function _ResetOneShot *****************
  2566 ;; Defined at:
  2567 ;;		line 107 in file "PWM.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_ContarPulsos
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text17
  2595  007460                     __ptext17:
  2596                           	opt callstack 0
  2597  007460                     _ResetOneShot:
  2598                           	opt callstack 27
  2599  007460                     
  2600                           ;PWM.c: 108:     if(PORTCbits.CCP1==1)return;
  2601  007460  A482               	btfss	130,2,c	;volatile
  2602  007462  EF35  F03A         	goto	u511
  2603  007466  EF37  F03A         	goto	u510
  2604  00746A                     u511:
  2605  00746A  EF39  F03A         	goto	l269
  2606  00746E                     u510:
  2607  00746E  EF44  F03A         	goto	l270
  2608  007472                     l269:
  2609                           
  2610                           ;PWM.c: 109:     if(PORTCbits.CCP1==0)ons=0;
  2611  007472  B482               	btfsc	130,2,c	;volatile
  2612  007474  EF3E  F03A         	goto	u521
  2613  007478  EF40  F03A         	goto	u520
  2614  00747C                     u521:
  2615  00747C  EF44  F03A         	goto	l270
  2616  007480                     u520:
  2617  007480  0E00               	movlw	0
  2618  007482  6E34               	movwf	(_ons+1)^0,c
  2619  007484  0E00               	movlw	0
  2620  007486  6E33               	movwf	_ons^0,c
  2621  007488                     l270:
  2622  007488  0012               	return		;funcret
  2623  00748A                     __end_of_ResetOneShot:
  2624                           	opt callstack 0
  2625                           
  2626 ;; *************** function _OneShot *****************
  2627 ;; Defined at:
  2628 ;;		line 98 in file "PWM.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_ContarPulsos
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text18
  2656  00748A                     __ptext18:
  2657                           	opt callstack 0
  2658  00748A                     _OneShot:
  2659                           	opt callstack 27
  2660  00748A                     
  2661                           ;PWM.c: 99:     if(ons==1) return;
  2662  00748A  0433               	decf	_ons^0,w,c
  2663  00748C  1034               	iorwf	(_ons+1)^0,w,c
  2664  00748E  A4D8               	btfss	status,2,c
  2665  007490  EF4C  F03A         	goto	u491
  2666  007494  EF4E  F03A         	goto	u490
  2667  007498                     u491:
  2668  007498  EF50  F03A         	goto	l264
  2669  00749C                     u490:
  2670  00749C  EF5D  F03A         	goto	l265
  2671  0074A0                     l264:
  2672                           
  2673                           ;PWM.c: 100:     if(PORTCbits.CCP1==1)
  2674  0074A0  A482               	btfss	130,2,c	;volatile
  2675  0074A2  EF55  F03A         	goto	u501
  2676  0074A6  EF57  F03A         	goto	u500
  2677  0074AA                     u501:
  2678  0074AA  EF5D  F03A         	goto	l265
  2679  0074AE                     u500:
  2680  0074AE                     
  2681                           ;PWM.c: 101:     {;PWM.c: 102:         PasosActuales++;
  2682  0074AE  4A35               	infsnz	_PasosActuales^0,f,c
  2683  0074B0  2A36               	incf	(_PasosActuales+1)^0,f,c
  2684  0074B2                     
  2685                           ;PWM.c: 103:         ons=1;
  2686  0074B2  0E00               	movlw	0
  2687  0074B4  6E34               	movwf	(_ons+1)^0,c
  2688  0074B6  0E01               	movlw	1
  2689  0074B8  6E33               	movwf	_ons^0,c
  2690  0074BA                     l265:
  2691  0074BA  0012               	return		;funcret
  2692  0074BC                     __end_of_OneShot:
  2693                           	opt callstack 0
  2694                           
  2695 ;; *************** function _Configuracion *****************
  2696 ;; Defined at:
  2697 ;;		line 10 in file "CONFIGUR.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    2
  2718 ;; This function calls:
  2719 ;;		_UARTConfi
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text19
  2726  0075FE                     __ptext19:
  2727                           	opt callstack 0
  2728  0075FE                     _Configuracion:
  2729                           	opt callstack 28
  2730  0075FE                     
  2731                           ;CONFIGUR.c: 14:     OSCCON=0x72;
  2732  0075FE  0E72               	movlw	114
  2733  007600  6ED3               	movwf	211,c	;volatile
  2734  007602                     
  2735                           ;CONFIGUR.c: 18:    CMCON = 0xFF;
  2736  007602  68B4               	setf	180,c	;volatile
  2737  007604                     
  2738                           ;CONFIGUR.c: 19:    CVRCONbits.CVREN = 0;
  2739  007604  9EB5               	bcf	181,7,c	;volatile
  2740                           
  2741                           ;CONFIGUR.c: 20:    ADCON1 = 0x0F;
  2742  007606  0E0F               	movlw	15
  2743  007608  6EC1               	movwf	193,c	;volatile
  2744                           
  2745                           ;CONFIGUR.c: 24:    PORTD = 0x00;
  2746  00760A  0E00               	movlw	0
  2747  00760C  6E83               	movwf	131,c	;volatile
  2748                           
  2749                           ;CONFIGUR.c: 25:    LATD = 0x00;
  2750  00760E  0E00               	movlw	0
  2751  007610  6E8C               	movwf	140,c	;volatile
  2752                           
  2753                           ;CONFIGUR.c: 26:    TRISD = 0xF0;
  2754  007612  0EF0               	movlw	240
  2755  007614  6E95               	movwf	149,c	;volatile
  2756                           
  2757                           ;CONFIGUR.c: 28:    PORTC = 0x00;
  2758  007616  0E00               	movlw	0
  2759  007618  6E82               	movwf	130,c	;volatile
  2760                           
  2761                           ;CONFIGUR.c: 29:    LATC= 0x00;
  2762  00761A  0E00               	movlw	0
  2763  00761C  6E8B               	movwf	139,c	;volatile
  2764                           
  2765                           ;CONFIGUR.c: 30:    TRISC= 0x00;
  2766  00761E  0E00               	movlw	0
  2767  007620  6E94               	movwf	148,c	;volatile
  2768                           
  2769                           ;CONFIGUR.c: 32:    PORTB = 0x00;
  2770  007622  0E00               	movlw	0
  2771  007624  6E81               	movwf	129,c	;volatile
  2772                           
  2773                           ;CONFIGUR.c: 33:    LATB= 0x00;
  2774  007626  0E00               	movlw	0
  2775  007628  6E8A               	movwf	138,c	;volatile
  2776  00762A                     
  2777                           ;CONFIGUR.c: 34:    TRISB= 0xFF;
  2778  00762A  6893               	setf	147,c	;volatile
  2779  00762C                     
  2780                           ;CONFIGUR.c: 38:    UARTConfi(9600);
  2781  00762C  0E25               	movlw	37
  2782  00762E  6E10               	movwf	(UARTConfi@BAUD+1)^0,c
  2783  007630  0E80               	movlw	128
  2784  007632  6E0F               	movwf	UARTConfi@BAUD^0,c
  2785  007634  EC60  F03B         	call	_UARTConfi	;wreg free
  2786  007638                     
  2787                           ;CONFIGUR.c: 39:     TRISC=0X00;
  2788  007638  0E00               	movlw	0
  2789  00763A  6E94               	movwf	148,c	;volatile
  2790  00763C                     
  2791                           ;CONFIGUR.c: 43:      PR2 = 0xF9;
  2792  00763C  0EF9               	movlw	249
  2793  00763E  6ECB               	movwf	203,c	;volatile
  2794  007640                     
  2795                           ;CONFIGUR.c: 46:     CCP1CON = 0x0C;
  2796  007640  0E0C               	movlw	12
  2797  007642  6EBD               	movwf	189,c	;volatile
  2798  007644                     
  2799                           ;CONFIGUR.c: 47:     CCPR1L = 0x7D;
  2800  007644  0E7D               	movlw	125
  2801  007646  6EBE               	movwf	190,c	;volatile
  2802  007648                     
  2803                           ;CONFIGUR.c: 50:     CCP2CON = 0x0C;
  2804  007648  0E0C               	movlw	12
  2805  00764A  6EBA               	movwf	186,c	;volatile
  2806  00764C                     
  2807                           ;CONFIGUR.c: 51:     CCPR2L = 0x7D;
  2808  00764C  0E7D               	movlw	125
  2809  00764E  6EBB               	movwf	187,c	;volatile
  2810  007650                     
  2811                           ;CONFIGUR.c: 54:     T2CON = 0x03;
  2812  007650  0E03               	movlw	3
  2813  007652  6ECA               	movwf	202,c	;volatile
  2814  007654                     
  2815                           ;CONFIGUR.c: 55:     TMR2 = 0;
  2816  007654  0E00               	movlw	0
  2817  007656  6ECC               	movwf	204,c	;volatile
  2818  007658                     
  2819                           ;CONFIGUR.c: 56:     TMR2ON = 1;
  2820  007658  84CA               	bsf	4042,2,c	;volatile
  2821  00765A  0012               	return		;funcret
  2822  00765C                     __end_of_Configuracion:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _UARTConfi *****************
  2826 ;; Defined at:
  2827 ;;		line 7 in file "UART.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  BAUD            2   14[COMRAM] int 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2841 ;;      Params:         2       0       0       0       0       0       0       0       0
  2842 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2844 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    1
  2848 ;; This function calls:
  2849 ;;		___aldiv
  2850 ;; This function is called by:
  2851 ;;		_Configuracion
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text20
  2856  0076C0                     __ptext20:
  2857                           	opt callstack 0
  2858  0076C0                     _UARTConfi:
  2859                           	opt callstack 28
  2860  0076C0                     
  2861                           ;UART.c: 9:     TRISCbits.RC6=0;
  2862  0076C0  9C94               	bcf	148,6,c	;volatile
  2863                           
  2864                           ;UART.c: 10:     TRISCbits.RC7=1;
  2865  0076C2  8E94               	bsf	148,7,c	;volatile
  2866  0076C4                     
  2867                           ;UART.c: 12:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  2868  0076C4  C00F  F005         	movff	UARTConfi@BAUD,___aldiv@divisor
  2869  0076C8  C010  F006         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
  2870  0076CC  0E00               	movlw	0
  2871  0076CE  BE06               	btfsc	(___aldiv@divisor+1)^0,7,c
  2872  0076D0  0EFF               	movlw	-1
  2873  0076D2  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2874  0076D4  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2875  0076D6  0E00               	movlw	0
  2876  0076D8  6E01               	movwf	___aldiv@dividend^0,c
  2877  0076DA  0E12               	movlw	18
  2878  0076DC  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2879  0076DE  0E7A               	movlw	122
  2880  0076E0  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2881  0076E2  0E00               	movlw	0
  2882  0076E4  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2883  0076E6  EC01  F03E         	call	___aldiv	;wreg free
  2884  0076EA  C001  F011         	movff	?___aldiv,_UARTConfi$1678
  2885  0076EE  C002  F012         	movff	?___aldiv+1,_UARTConfi$1678+1
  2886  0076F2  C003  F013         	movff	?___aldiv+2,_UARTConfi$1678+2
  2887  0076F6  C004  F014         	movff	?___aldiv+3,_UARTConfi$1678+3
  2888                           
  2889                           ;UART.c: 12:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  2890  0076FA  C011  F001         	movff	_UARTConfi$1678,___aldiv@dividend
  2891  0076FE  C012  F002         	movff	_UARTConfi$1678+1,___aldiv@dividend+1
  2892  007702  C013  F003         	movff	_UARTConfi$1678+2,___aldiv@dividend+2
  2893  007706  C014  F004         	movff	_UARTConfi$1678+3,___aldiv@dividend+3
  2894  00770A  0E40               	movlw	64
  2895  00770C  6E05               	movwf	___aldiv@divisor^0,c
  2896  00770E  0E00               	movlw	0
  2897  007710  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2898  007712  0E00               	movlw	0
  2899  007714  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2900  007716  0E00               	movlw	0
  2901  007718  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2902  00771A  EC01  F03E         	call	___aldiv	;wreg free
  2903  00771E  0401               	decf	?___aldiv^0,w,c
  2904  007720  6EAF               	movwf	175,c	;volatile
  2905  007722                     
  2906                           ;UART.c: 13:     TXSTAbits.BRGH = 0;
  2907  007722  94AC               	bcf	172,2,c	;volatile
  2908  007724                     
  2909                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  2910  007724  98AC               	bcf	172,4,c	;volatile
  2911  007726                     
  2912                           ;UART.c: 15:     RCSTAbits.SPEN = 1;
  2913  007726  8EAB               	bsf	171,7,c	;volatile
  2914  007728                     
  2915                           ;UART.c: 18:     TXSTAbits.TX9 = 0;
  2916  007728  9CAC               	bcf	172,6,c	;volatile
  2917  00772A                     
  2918                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  2919  00772A  8AAC               	bsf	172,5,c	;volatile
  2920  00772C                     
  2921                           ;UART.c: 22:     RCSTAbits.RC9 = 0;
  2922  00772C  9CAB               	bcf	171,6,c	;volatile
  2923  00772E                     
  2924                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  2925  00772E  88AB               	bsf	171,4,c	;volatile
  2926  007730  0012               	return		;funcret
  2927  007732                     __end_of_UARTConfi:
  2928                           	opt callstack 0
  2929                           
  2930 ;; *************** function ___aldiv *****************
  2931 ;; Defined at:
  2932 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  dividend        4    0[COMRAM] long 
  2935 ;;  divisor         4    4[COMRAM] long 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  quotient        4   10[COMRAM] long 
  2938 ;;  sign            1    9[COMRAM] unsigned char 
  2939 ;;  counter         1    8[COMRAM] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  4    0[COMRAM] long 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2949 ;;      Params:         8       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2952 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:       14 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_UARTConfi
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text21
  2963  007C02                     __ptext21:
  2964                           	opt callstack 0
  2965  007C02                     ___aldiv:
  2966                           	opt callstack 28
  2967  007C02  0E00               	movlw	0
  2968  007C04  6E0A               	movwf	___aldiv@sign^0,c
  2969  007C06  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2970  007C08  EF0A  F03E         	goto	u580
  2971  007C0C  EF08  F03E         	goto	u581
  2972  007C10                     u581:
  2973  007C10  EF14  F03E         	goto	l1776
  2974  007C14                     u580:
  2975  007C14  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2976  007C16  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2977  007C18  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2978  007C1A  6C05               	negf	___aldiv@divisor^0,c
  2979  007C1C  0E00               	movlw	0
  2980  007C1E  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2981  007C20  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2982  007C22  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2983  007C24  0E01               	movlw	1
  2984  007C26  6E0A               	movwf	___aldiv@sign^0,c
  2985  007C28                     l1776:
  2986  007C28  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2987  007C2A  EF1B  F03E         	goto	u590
  2988  007C2E  EF19  F03E         	goto	u591
  2989  007C32                     u591:
  2990  007C32  EF25  F03E         	goto	l1782
  2991  007C36                     u590:
  2992  007C36  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2993  007C38  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2994  007C3A  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2995  007C3C  6C01               	negf	___aldiv@dividend^0,c
  2996  007C3E  0E00               	movlw	0
  2997  007C40  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2998  007C42  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2999  007C44  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3000  007C46  0E01               	movlw	1
  3001  007C48  1A0A               	xorwf	___aldiv@sign^0,f,c
  3002  007C4A                     l1782:
  3003  007C4A  0E00               	movlw	0
  3004  007C4C  6E0B               	movwf	___aldiv@quotient^0,c
  3005  007C4E  0E00               	movlw	0
  3006  007C50  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3007  007C52  0E00               	movlw	0
  3008  007C54  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3009  007C56  0E00               	movlw	0
  3010  007C58  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3011  007C5A  5005               	movf	___aldiv@divisor^0,w,c
  3012  007C5C  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3013  007C5E  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3014  007C60  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3015  007C62  B4D8               	btfsc	status,2,c
  3016  007C64  EF36  F03E         	goto	u601
  3017  007C68  EF38  F03E         	goto	u600
  3018  007C6C                     u601:
  3019  007C6C  EF6E  F03E         	goto	l1804
  3020  007C70                     u600:
  3021  007C70  0E01               	movlw	1
  3022  007C72  6E09               	movwf	___aldiv@counter^0,c
  3023  007C74  EF42  F03E         	goto	l1790
  3024  007C78                     l1788:
  3025  007C78  90D8               	bcf	status,0,c
  3026  007C7A  3605               	rlcf	___aldiv@divisor^0,f,c
  3027  007C7C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3028  007C7E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3029  007C80  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3030  007C82  2A09               	incf	___aldiv@counter^0,f,c
  3031  007C84                     l1790:
  3032  007C84  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3033  007C86  EF47  F03E         	goto	u611
  3034  007C8A  EF49  F03E         	goto	u610
  3035  007C8E                     u611:
  3036  007C8E  EF3C  F03E         	goto	l1788
  3037  007C92                     u610:
  3038  007C92                     l1792:
  3039  007C92  90D8               	bcf	status,0,c
  3040  007C94  360B               	rlcf	___aldiv@quotient^0,f,c
  3041  007C96  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3042  007C98  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3043  007C9A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3044  007C9C  5005               	movf	___aldiv@divisor^0,w,c
  3045  007C9E  5C01               	subwf	___aldiv@dividend^0,w,c
  3046  007CA0  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3047  007CA2  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3048  007CA4  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3049  007CA6  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3050  007CA8  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3051  007CAA  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3052  007CAC  A0D8               	btfss	status,0,c
  3053  007CAE  EF5B  F03E         	goto	u621
  3054  007CB2  EF5D  F03E         	goto	u620
  3055  007CB6                     u621:
  3056  007CB6  EF66  F03E         	goto	l1800
  3057  007CBA                     u620:
  3058  007CBA  5005               	movf	___aldiv@divisor^0,w,c
  3059  007CBC  5E01               	subwf	___aldiv@dividend^0,f,c
  3060  007CBE  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3061  007CC0  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3062  007CC2  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3063  007CC4  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3064  007CC6  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3065  007CC8  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3066  007CCA  800B               	bsf	___aldiv@quotient^0,0,c
  3067  007CCC                     l1800:
  3068  007CCC  90D8               	bcf	status,0,c
  3069  007CCE  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3070  007CD0  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3071  007CD2  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3072  007CD4  3205               	rrcf	___aldiv@divisor^0,f,c
  3073  007CD6  2E09               	decfsz	___aldiv@counter^0,f,c
  3074  007CD8  EF49  F03E         	goto	l1792
  3075  007CDC                     l1804:
  3076  007CDC  500A               	movf	___aldiv@sign^0,w,c
  3077  007CDE  B4D8               	btfsc	status,2,c
  3078  007CE0  EF74  F03E         	goto	u631
  3079  007CE4  EF76  F03E         	goto	u630
  3080  007CE8                     u631:
  3081  007CE8  EF7E  F03E         	goto	l1808
  3082  007CEC                     u630:
  3083  007CEC  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3084  007CEE  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3085  007CF0  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3086  007CF2  6C0B               	negf	___aldiv@quotient^0,c
  3087  007CF4  0E00               	movlw	0
  3088  007CF6  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3089  007CF8  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3090  007CFA  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3091  007CFC                     l1808:
  3092  007CFC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3093  007D00  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3094  007D04  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3095  007D08  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3096  007D0C  0012               	return		;funcret
  3097  007D0E                     __end_of___aldiv:
  3098                           	opt callstack 0
  3099  0000                     
  3100                           	psect	rparam
  3101  0000                     tosu	equ	0xFFF
  3102                           tosh	equ	0xFFE
  3103                           tosl	equ	0xFFD
  3104                           stkptr	equ	0xFFC
  3105                           pclatu	equ	0xFFB
  3106                           pclath	equ	0xFFA
  3107                           pcl	equ	0xFF9
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           indf0	equ	0xFEF
  3115                           postinc0	equ	0xFEE
  3116                           postdec0	equ	0xFED
  3117                           preinc0	equ	0xFEC
  3118                           plusw0	equ	0xFEB
  3119                           fsr0h	equ	0xFEA
  3120                           fsr0l	equ	0xFE9
  3121                           wreg	equ	0xFE8
  3122                           indf1	equ	0xFE7
  3123                           postinc1	equ	0xFE6
  3124                           postdec1	equ	0xFE5
  3125                           preinc1	equ	0xFE4
  3126                           plusw1	equ	0xFE3
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           bsr	equ	0xFE0
  3130                           indf2	equ	0xFDF
  3131                           postinc2	equ	0xFDE
  3132                           postdec2	equ	0xFDD
  3133                           preinc2	equ	0xFDC
  3134                           plusw2	equ	0xFDB
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        45
    BSS         31
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      90
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_verification
    _verification->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite
    ___lwdiv->___lwmod
    _PWM->___wmul
    _Configuracion->_UARTConfi
    _UARTConfi->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    5108
                                             30 COMRAM    12    12      0
                      _Configuracion
                         _Movimiento
                          _UARTWrite
                            ___lwdiv
                            ___lwmod
                       _verification
 ---------------------------------------------------------------------------------
 (1) _verification                                         2     2      0    1351
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _end                                                  2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0     901
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (3) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (4) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Par_Validated                                        2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Ins_Validated                                        2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _Coord_Validated                                      2     2      0      90
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1071
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                          16    16      0     843
                                              6 COMRAM    16    16      0
                                _PWM
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (3) _UARTWrite                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM                                                  0     0      0     637
                       _ContarPulsos
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _ContarPulsos                                         2     0      2     174
                                              0 COMRAM     2     0      2
                            _OneShot
                       _ResetOneShot
 ---------------------------------------------------------------------------------
 (4) _ResetOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _OneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0     725
                          _UARTConfi
 ---------------------------------------------------------------------------------
 (2) _UARTConfi                                            6     4      2     725
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
     _UARTConfi
       ___aldiv
   _Movimiento
     _PWM
       _ContarPulsos
         _OneShot
         _ResetOneShot
       ___wmul
     _UARTWrite
   _UARTWrite
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _verification
     _Coord_Validated
       _UARTWrite
     _Ins_Validated
       _UARTWrite
     _Par_Validated
       _UARTWrite
     _cmd
       _UARTWrite
       _coord
         _UARTRead
     _end
       _UARTWrite
     _start
       _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      5A       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      78      20        0.0%
DATA                 0      0      78       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 02 21:09:50 2019

                       _x 0059                        l40 788A                        l34 74FC  
                      l51 7996                        l35 7500                        l60 790C  
                      l44 77A2                        l90 7408                        l68 754A  
                      l93 741A                        l87 7730                        l96 73F4  
                      l99 7404               __CFG_BOR$ON 000000       ___wmul@multiplicand 0003  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000                       l122 7B1A  
                     l240 7D48                       l241 7D6E                       l260 75F8  
                     l316 7A36                       l261 75FC                       l253 7E5E  
                     l270 7488                       l247 7DE8                       l264 74A0  
                     l248 7E0E                       l265 74BA                       l257 75BA  
                     l269 7472                       l376 7C00                       l466 765A  
                     l548 7D0C                       l469 745E                       l960 780E  
                     l970 76B6                       l967 7816                       l977 76BE  
            __CFG_CPB$OFF 000000                       u500 74AE                       u501 74AA  
                     u510 746E                       _PR2 000FCB                       u511 746A  
                     u600 7C70                       u520 7480                       u601 7C6C  
                     u521 747C                       u610 7C92                       u530 7416  
            __CFG_CPD$OFF 000000                       u611 7C8E                       u531 7412  
                     u620 7CBA                       u700 7944                       u540 7A76  
                     u621 7CB6                       u701 7940                       u541 7A72  
                     u630 7CEC                       u550 75C8                       u710 7990  
                     u631 7CE8                       u551 75C4                       u711 798C  
                     u560 75DE                       u720 78A6                       u480 7402  
                     u640 74FC                       u800 7A36                       u561 75DA  
                     u721 78A2                       u481 73FE                       u641 74F8  
                     u801 7A32                       u490 749C                       u570 75F8  
                     u810 7B2C                       u730 78BC                       u650 785C  
                     u491 7498                       u571 75F4                       u811 7B28  
                     u731 78B8                       u651 7858                       u580 7C14  
                     u900 766E                       u740 7906                       u660 7748  
                     u581 7C10                       u821 7B56                       u901 766A  
                     u741 7902                       u661 7744                       u590 7C36  
                     u830 7B98                       u910 768C                       u670 775A  
                     u750 7542                       u591 7C32                       u831 7B94  
                     u911 7688                       u671 7756                       u751 753E  
                     u760 7D30                       u840 7BAC                       u920 76A2  
                     u680 77A0                       u761 7D2C                       u841 7BA8  
                     u921 769E                       u681 779C                       u770 7D56  
                     u690 7924                       u930 7FBE                       u771 7D52  
                     u851 7BBE                       u691 7920                       u931 7FBA  
                     u780 7DD0                       u860 7C00                       u940 7FF8  
                     u781 7DCC                       u861 7BFC                       u941 7FF4  
                     u790 7DF6                       u870 77BE                       u791 7DF2  
                     u871 77BA                       u880 77DC                       u881 77D8  
                     u890 77F8                       u891 77F4                       u957 7B3C  
                     _PWM 7D0E            ??_ContarPulsos 0003                       _e_c 0060  
                     _cmd 7818                       _end 7502                       _ons 0033  
                     wreg 000FE8              __CFG_LVP$OFF 000000                      ?_PWM 0001  
             coord@buffer 000F              __CFG_WDT$OFF 000000                      l2000 7D3C  
                    l2010 7D7A                      l2002 7D56                      l2020 7DB2  
                    l2012 7D96                      l2004 7D5A                      l2030 7DFA  
                    l2022 7DBE                      l2014 7DA2                      l2006 7D62  
                    l2110 7B32                      l2040 7E42                      l2032 7E02  
                    l2024 7DD0                      l2008 7D72                      l2112 7B4A  
                    l2104 7B1C                      l2200 7E80                      l2050 75FE  
                    l2034 7E12                      l2026 7DDC                      l2018 7DAA  
                    l2130 7BAC                      l2122 7B66                      l2114 7B4C  
                    l2106 7B2C                      l2210 7EEC                      l2202 7E84  
                    l2060 7638                      l2052 7602                      l2044 7E4A  
                    l2036 7E1A                      l2028 7DF6                      l2132 7BAE  
                    l2124 7B78                      l2116 7B5E                      l2108 7B30  
                    l2220 7F84                      l2212 7F06                      l2204 7E88  
                    l2070 764C                      l2062 763C                      l2054 7604  
                    l2046 7E52                      l2038 7E36                      l2134 7BB2  
                    l2126 7B7C                      l2150 77A4                      l2230 7FA2  
                    l2214 7F20                      l2206 7EA2                      l2072 7650  
                    l2064 7640                      l2056 762A                      l2144 7BCE  
                    l2136 7BB4                      l2128 7B9C                      l2160 77DC  
                    l2152 77AC                      l2080 7998                      l2240 7FD8  
                    l2232 7FBE                      l2216 7F4E                      l2208 7ED0  
                    l2074 7654                      l2066 7644                      l2058 762C  
                    l2146 7BE0                      l2138 7BC6                      l2170 7808  
                    l2162 77E2                      l2154 77BE                      l2090 79C8  
                    l2082 79A0                      l2242 7FDC                      l2226 7F8C  
                    l2218 7F6A                      ?_cmd 0001                      l2076 7658  
                    l2068 7648                      l2148 7BE4                      l2164 77F8  
                    l2156 77C6                      l2180 768C                      l2172 765C  
                    l1700 73F4                      l2092 79D2                      l2084 79AA  
                    l2228 7F9E                      l1710 74AE                      l2166 7800  
                    l2158 77CE                      l2182 76A2                      l2174 766E  
                    l1702 7402                      l2086 79B4                      l2238 7FC6  
                    l2190 7E64                      l1800 7CCC                      l1712 74B2  
                    l1720 7480                      l2168 7802                      l2184 76AA  
                    l2176 7676                      l2256 79EE                      l2096 79DA  
                    l2088 79BE                      l2192 7E6C                      l1802 7CD6  
                    l1706 748A                      l2186 76B0                      l2178 767E  
                    l2098 7A24                      l2194 7E74                      l1804 7CDC  
                    l1716 7460                      l1724 7408                      l1740 7A5A  
                    l1820 74CA                      l1812 74BC                      l2196 7E76  
                    l2188 7E60                      ?_end 0001                      l1806 7CEC  
                    l1750 75B2                      l1726 7416                      l1742 7A76  
                    l1734 7A40                      l1830 7818                      l1822 74DC  
                    l1814 74C2                      l2198 7E78                      l1808 7CFC  
                    l1760 75E2                      l1752 75B4                      l1920 7994  
                    l1912 795E                      l1904 7950                      l1744 7A8E  
                    l1736 7A46                      l1728 7A38                      l1840 782A  
                    l1832 781E                      l1824 74E0                      l1770 7C06  
                    l1754 75C8                      l1762 743A                      l1930 78BC  
                    l1914 7970                      l1906 7956                      l1746 7ACE  
                    l1738 7A56                      l1842 783C                      l1834 7822  
                    l1826 74FE                      l1780 7C46                      l1772 7C14  
                    l1756 75CC                      l1748 75A2                      l1764 7456  
                    l1940 78CC                      l1932 78C0                      l1924 788C  
                    l1916 7974                      l1852 7732                      l1844 7840  
                    l1790 7C84                      l1782 7C4A                      l1774 7C24  
                    l1758 75DE                      l1950 78EA                      l1926 7890  
                    l1918 7990                      l1854 7736                      l1846 785C  
                    l1792 7C92                      l1784 7C5A                      l1776 7C28  
                    l1768 7C02                      l1952 7906                      l1928 78A6  
                    l1872 776E                      l1856 7748                      l1864 7760  
                    l1848 7888                      l1960 7508                      l1794 7C9C  
                    l1786 7C70                      l1778 7C36                      l1954 790A  
                    l1946 78D4                      l1938 78C6                      l1882 790E  
                    l1874 7780                      l1866 7766                      l1858 775A  
                    l1970 7526                      l1796 7CBA                      l1788 7C78  
                    l1980 7722                      l1948 78E6                      l1884 7912  
                    l1876 7784                      l1972 7542                      l1798 7CCA  
                    l1990 772C                      l1982 7724                      l1886 7924  
                    l1894 7932                      l1878 77A0                      l1966 7510  
                    l1958 7502                      l1992 772E                      l1984 7726  
                    l1976 76C0                      l1896 7944                      l1888 792C  
                    l1968 7522                      l1986 7728                      l1978 76C4  
                    l1994 7D0E                      l1988 772A                      l1996 7D1E  
                    l1998 7D30                      _LATB 000F8A                      _LATC 000F8B  
                    _LATD 000F8C                      _RCIF 007CF5                      _TMR2 000FCC  
             _BanderaDisX 002D               _BanderaDisY 002B                      _Par1 0049  
                    _Par2 0047                      cmd@i 001B                      _main 7E60  
                    _init 006D                      end@i 0002                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
       ??_Coord_Validated 0002                      prodh 000FF4                      prodl 000FF3  
                    start 0000             __CFG_IESO$OFF 000000              ___param_bank 000000  
                   ??_PWM 0007           __end_of_OneShot 74BC             _Ins_Validated 790E  
                   ??_cmd 001B                     ??_end 0002           Movimiento@F3244 004F  
         Movimiento@F3247 004A            __CFG_CCP2MX$ON 000000           __end_of___aldiv 7D0E  
                   ?_main 0001                     _CMCON 000FB4                     _T2CON 000FCA  
         __end_of___lwdiv 7818           __end_of___lwmod 76C0                     _RCREG 000FAE  
           _Par_Validated 7732                     _SPBRG 000FAF                     _PORTB 000F81  
                   _PORTC 000F82                     _PORTD 000F83                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISD 000F95                     _TXREG 000FAD  
         Movimiento@i_712 0015             __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
      __size_of_UARTConfi 0072                     _Error 0054            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000          __end_of_UARTRead 7406             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000        __size_of_UARTWrite 0016  
          __CFG_EBTRB$OFF 000000                     _click 003D                     _coord 7A38  
                   _start 74BC                     main@a 001F                     main@b 0022  
                   main@i 0027                     tablat 000FF5                     plusw1 000FE3  
                   plusw2 000FDB                     status 000FD8            __CFG_ICPRT$OFF 000000  
          __CFG_PBADEN$ON 000000            __CFG_MCLRE$OFF 000000           __initialization 754C  
            __end_of_main 8000            ?_Ins_Validated 0001                    ??_main 001F  
          ?_Par_Validated 0001             __activetblptr 000002                    _ADCON1 000FC1  
                  ?_coord 0001                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
                  ?_start 0001                    _OSCCON 000FD3                    _TMR2ON 007E52  
               ??_OneShot 0001      __end_of_ContarPulsos 75FE            __CFG_XINST$OFF 000000  
                  _PasosX 0031                    _PasosY 002F         __end_of_UARTConfi 7732  
              _Movimiento 7B1C               _CoordRelatX 0041               _CoordRelatY 003F  
               ??___aldiv 0009         __end_of_UARTWrite 741C                    ___wmul 743A  
          __CFG_STVREN$ON 000000                 ??___lwdiv 000A                 ??___lwmod 0005  
                  _cord_x 0045                    _cord_y 0043                    _letter 0048  
                  clear_0 7592                    coord@L 0003                    coord@i 0019  
                  coord@x 0005                    coord@y 0007              __pdataCOMRAM 004A  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
                  start@i 0002                __accesstop 0060   __end_of__initialization 7598  
           ___rparam_used 000001           ??_Ins_Validated 0002            __pcstackCOMRAM 0001  
            __pidataBANK0 741C                 ?_UARTRead 0001             __end_of_coord 7B1C  
           __end_of_start 7502           ??_Par_Validated 0002             ?_ResetOneShot 0001  
          _UARTConfi$1678 0011             _PasosActuales 0035           _Coord_Validated 788C  
                 ??_coord 000B                   ??_start 0002     __end_of_Configuracion 765C  
              __pnvCOMRAM 0059               ?_Movimiento 0001                   ?___wmul 0001  
              ??_UARTRead 0001                   _CCP1CON 000FBD                   _CCP2CON 000FBA  
          ??_ResetOneShot 0001          Coord_Validated@i 0002     __size_of_ContarPulsos 005C  
             Movimiento@i 0013           __CFG_VREGEN$OFF 000000                   _OneShot 748A  
                 __Hparam 0000                   __Lparam 0000                   ___aldiv 7C02  
         __size_of___wmul 0026                   ___lwdiv 77A4                   ___lwmod 765C  
                 __pcinit 754C                   __ramtop 0800                   __ptext0 7E60  
                 __ptext1 7998                   __ptext2 74BC                   __ptext3 7502  
                 __ptext4 7818                   __ptext5 7A38                   __ptext6 73F4  
                 __ptext7 7732                   __ptext8 790E                   __ptext9 788C  
 __end_of_Coord_Validated 790E                   _gracias 0077              __size_of_PWM 0152  
            __size_of_cmd 0074              __size_of_end 004A              _ContarPulsos 75A2  
        ___aldiv@dividend 0001    Movimiento@loquequieras 0009                   coord@P1 0001  
                 coord@P2 0009       __size_of_Movimiento 00E6      end_of_initialization 7598  
           __Lmediumconst 0000                 _RCSTAbits 000FAB          ___aldiv@quotient 000B  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc2 000FDE                 _UARTConfi 76C0                 _UARTWrite 7406  
               _PORTCbits 000F82                 _PORTDbits 000F83                 _TRISCbits 000F94  
           ?_verification 0001                 _TXSTAbits 000FAC      __end_of_ResetOneShot 748A  
              ?_UARTConfi 000F            __end_of___wmul 7460             __pidataCOMRAM 73E5  
               _CoordAntX 003B                 _CoordAntY 0039         __size_of_UARTRead 0012  
              ?_UARTWrite 0001          ?_Coord_Validated 0001       start_initialization 754C  
             __end_of_PWM 7E60               __end_of_cmd 788C               __end_of_end 754C  
          ??_verification 001D             UARTConfi@BAUD 000F                 _NextState 003E  
            ??_Movimiento 0007     __end_of_Ins_Validated 7998                  ??___wmul 0005  
             __pdataBANK0 0060          __CFG_LPT1OSC$OFF 000000     __end_of_Par_Validated 77A4  
             __pbssCOMRAM 002B        __end_of_Movimiento 7C02                  ?_OneShot 0001  
               _main$1679 0025          ___lwdiv@dividend 0006                  ?___aldiv 0001  
                ?___lwdiv 0006                  ?___lwmod 0001               ??_UARTConfi 0011  
             ??_UARTWrite 0001    __size_of_Configuracion 005E          ___lwdiv@quotient 000A  
          __size_of_coord 00E4     __size_of_ResetOneShot 002A            __size_of_start 0046  
         ___aldiv@divisor 0005           ___aldiv@counter 0009            ___wmul@product 0005  
                _PIR1bits 000F9E                  _RCONbits 000FD0          __CFG_WDTPS$32768 000000  
                _UARTRead 73F4      __end_of_verification 7A38                 main@i_411 0029  
       ___wmul@multiplier 0001              _ResetOneShot 7460                 coord@read 0018  
           UARTWrite@data 0001               _INTCON2bits 000FF1               _INTCON3bits 000FF0  
               copy_data0 7560                 copy_data1 7580             _Configuracion 75FE  
                __Hrparam 0000          __size_of_OneShot 0032                  __Lrparam 0000  
        __size_of___aldiv 010C          __size_of___lwdiv 0074          __size_of___lwmod 0064  
       ContarPulsos@pasos 0001           ___lwdiv@divisor 0008           ___lwdiv@counter 000C  
                __ptext10 765C                  __ptext11 77A4                  __ptext20 76C0  
                __ptext12 7B1C                  __ptext21 7C02                  __ptext13 7406  
                __ptext14 7D0E                  __ptext15 743A                  __ptext16 75A2  
                __ptext17 7460                  __ptext18 748A                  __ptext19 75FE  
          Ins_Validated@i 0002            ?_Configuracion 0001             __size_of_main 01A0  
 Movimiento@loquequieras2 000E                _CVRCONbits 000FB5                _INTCONbits 000FF2  
          Par_Validated@i 0002  __size_of_Coord_Validated 0082          ___lwmod@dividend 0001  
   __size_of_verification 00A0       __CFG_FOSC$INTOSC_EC 000000           ___lwmod@divisor 0003  
           ?_ContarPulsos 0001           ___lwmod@counter 0005              ___aldiv@sign 000A  
         ??_Configuracion 0015    __size_of_Ins_Validated 008A              _verification 7998  
         _pasosRecorridos 0037    __size_of_Par_Validated 0072  
