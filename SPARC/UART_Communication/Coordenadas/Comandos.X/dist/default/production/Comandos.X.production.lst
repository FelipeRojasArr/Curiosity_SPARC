

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 27 21:35:40 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  007A3B                     __pidataCOMRAM:
    62                           	opt callstack 0
    63                           
    64                           ;initializer for _e_c
    65  007A3B  45                 	db	69
    66  007A3C  6E                 	db	110
    67  007A3D  74                 	db	116
    68  007A3E  65                 	db	101
    69  007A3F  72                 	db	114
    70  007A40  5F                 	db	95
    71  007A41  63                 	db	99
    72  007A42  6F                 	db	111
    73  007A43  6D                 	db	109
    74  007A44  6D                 	db	109
    75  007A45  61                 	db	97
    76  007A46  6E                 	db	110
    77  007A47  64                 	db	100
    78                           
    79                           ;initializer for _init
    80  007A48  57                 	db	87
    81  007A49  61                 	db	97
    82  007A4A  69                 	db	105
    83  007A4B  74                 	db	116
    84  007A4C  69                 	db	105
    85  007A4D  6E                 	db	110
    86  007A4E  67                 	db	103
    87  007A4F  2E                 	db	46
    88  007A50  2E                 	db	46
    89  007A51  2E                 	db	46
    90                           
    91                           ;initializer for _Error3
    92  007A52  45                 	db	69
    93  007A53  72                 	db	114
    94  007A54  72                 	db	114
    95  007A55  6F                 	db	111
    96  007A56  72                 	db	114
    97  007A57  33                 	db	51
    98                           
    99                           ;initializer for _Error2
   100  007A58  45                 	db	69
   101  007A59  72                 	db	114
   102  007A5A  72                 	db	114
   103  007A5B  6F                 	db	111
   104  007A5C  72                 	db	114
   105  007A5D  32                 	db	50
   106                           
   107                           ;initializer for _Error
   108  007A5E  45                 	db	69
   109  007A5F  72                 	db	114
   110  007A60  72                 	db	114
   111  007A61  6F                 	db	111
   112  007A62  72                 	db	114
   113  007A63  31                 	db	49
   114                           
   115                           ;initializer for _okay
   116  007A64  4F                 	db	79
   117  007A65  6B                 	db	107
   118  007A66  61                 	db	97
   119  007A67  79                 	db	121
   120  0000                     _TRISC	set	3988
   121  0000                     _OSCCON	set	4051
   122  0000                     _RCREG	set	4014
   123  0000                     _TXREG	set	4013
   124  0000                     _PIR1bits	set	3998
   125  0000                     _RCSTAbits	set	4011
   126  0000                     _TXSTAbits	set	4012
   127  0000                     _SPBRG	set	4015
   128  0000                     _TRISCbits	set	3988
   129  0000                     _PORTC	set	3970
   130  0000                     _RCIF	set	31989
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  007A68                     __pcinit:
   136                           	opt callstack 0
   137  007A68                     start_initialization:
   138                           	opt callstack 0
   139  007A68                     __initialization:
   140                           	opt callstack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (45 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  007A68  0E3B               	movlw	low __pidataCOMRAM
   145  007A6A  6EF6               	movwf	tblptrl,c
   146  007A6C  0E7A               	movlw	high __pidataCOMRAM
   147  007A6E  6EF7               	movwf	tblptrh,c
   148  007A70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  007A72  6EF8               	movwf	tblptru,c
   150  007A74  EE00  F001         	lfsr	0,__pdataCOMRAM
   151  007A78  EE10 F02D          	lfsr	1,45
   152  007A7C                     copy_data0:
   153  007A7C  0009               	tblrd		*+
   154  007A7E  CFF5 FFEE          	movff	tablat,postinc0
   155  007A82  50E5               	movf	postdec1,w,c
   156  007A84  50E1               	movf	fsr1l,w,c
   157  007A86  E1FA               	bnz	copy_data0
   158                           
   159                           ; Clear objects allocated to COMRAM (8 bytes)
   160  007A88  EE00  F04C         	lfsr	0,__pbssCOMRAM
   161  007A8C  0E08               	movlw	8
   162  007A8E                     clear_0:
   163  007A8E  6AEE               	clrf	postinc0,c
   164  007A90  06E8               	decf	wreg,f,c
   165  007A92  E1FD               	bnz	clear_0
   166  007A94                     end_of_initialization:
   167                           	opt callstack 0
   168  007A94                     __end_of__initialization:
   169                           	opt callstack 0
   170  007A94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171  007A96  6EF8               	movwf	tblptru,c
   172  007A98  0100               	movlb	0
   173  007A9A  EFB5  F03E         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMRAM
   176  00004C                     __pbssCOMRAM:
   177                           	opt callstack 0
   178  00004C                     _NextState:
   179                           	opt callstack 0
   180  00004C                     	ds	1
   181  00004D                     _cord_y:
   182                           	opt callstack 0
   183  00004D                     	ds	2
   184  00004F                     _cord_x:
   185                           	opt callstack 0
   186  00004F                     	ds	2
   187  000051                     _Par2:
   188                           	opt callstack 0
   189  000051                     	ds	1
   190  000052                     _letter:
   191                           	opt callstack 0
   192  000052                     	ds	1
   193  000053                     _Par1:
   194                           	opt callstack 0
   195  000053                     	ds	1
   196                           
   197                           	psect	dataCOMRAM
   198  000001                     __pdataCOMRAM:
   199                           	opt callstack 0
   200  000001                     _e_c:
   201                           	opt callstack 0
   202  000001                     	ds	13
   203  00000E                     _init:
   204                           	opt callstack 0
   205  00000E                     	ds	10
   206  000018                     _Error3:
   207                           	opt callstack 0
   208  000018                     	ds	6
   209  00001E                     _Error2:
   210                           	opt callstack 0
   211  00001E                     	ds	6
   212  000024                     _Error:
   213                           	opt callstack 0
   214  000024                     	ds	6
   215  00002A                     _okay:
   216                           	opt callstack 0
   217  00002A                     	ds	4
   218                           
   219                           	psect	cstackCOMRAM
   220  00002E                     __pcstackCOMRAM:
   221                           	opt callstack 0
   222  00002E                     ?___aldiv:
   223                           	opt callstack 0
   224  00002E                     UARTWrite@data:
   225                           	opt callstack 0
   226  00002E                     coord@P1:
   227                           	opt callstack 0
   228  00002E                     ___aldiv@dividend:
   229                           	opt callstack 0
   230                           
   231                           ; 4 bytes @ 0x0
   232  00002E                     	ds	1
   233  00002F                     start@i:
   234                           	opt callstack 0
   235  00002F                     Par_Validated@i:
   236                           	opt callstack 0
   237  00002F                     Ins_Validated@i:
   238                           	opt callstack 0
   239  00002F                     Coord_Validated@i:
   240                           	opt callstack 0
   241  00002F                     end@i:
   242                           	opt callstack 0
   243                           
   244                           ; 2 bytes @ 0x1
   245  00002F                     	ds	1
   246  000030                     coord@L:
   247                           	opt callstack 0
   248                           
   249                           ; 2 bytes @ 0x2
   250  000030                     	ds	2
   251  000032                     coord@x:
   252                           	opt callstack 0
   253  000032                     ___aldiv@divisor:
   254                           	opt callstack 0
   255                           
   256                           ; 4 bytes @ 0x4
   257  000032                     	ds	2
   258  000034                     coord@y:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x6
   262  000034                     	ds	2
   263  000036                     ___aldiv@counter:
   264                           	opt callstack 0
   265  000036                     coord@P2:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x8
   269  000036                     	ds	1
   270  000037                     ___aldiv@sign:
   271                           	opt callstack 0
   272                           
   273                           ; 1 bytes @ 0x9
   274  000037                     	ds	1
   275  000038                     ??_coord:
   276  000038                     ___aldiv@quotient:
   277                           	opt callstack 0
   278                           
   279                           ; 4 bytes @ 0xA
   280  000038                     	ds	4
   281  00003C                     UARTConfi@BAUD:
   282                           	opt callstack 0
   283  00003C                     coord@buffer:
   284                           	opt callstack 0
   285                           
   286                           ; 9 bytes @ 0xE
   287  00003C                     	ds	2
   288  00003E                     _UARTConfi$956:
   289                           	opt callstack 0
   290                           
   291                           ; 4 bytes @ 0x10
   292  00003E                     	ds	7
   293  000045                     coord@read:
   294                           	opt callstack 0
   295                           
   296                           ; 1 bytes @ 0x17
   297  000045                     	ds	1
   298  000046                     coord@i:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0x18
   302  000046                     	ds	2
   303  000048                     cmd@i:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0x1A
   307  000048                     	ds	2
   308  00004A                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x1C
   311  00004A                     	ds	2
   312                           
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 20 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0
   334 ;;      Temps:          2       0       0       0       0       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels required when called:    3
   338 ;; This function calls:
   339 ;;		_Coord_Validated
   340 ;;		_Ins_Validated
   341 ;;		_Par_Validated
   342 ;;		_UARTConfi
   343 ;;		_cmd
   344 ;;		_end
   345 ;;		_start
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  007D6A                     __ptext0:
   353                           	opt callstack 0
   354  007D6A                     _main:
   355                           	opt callstack 28
   356  007D6A                     
   357                           ;main.c: 21:     OSCCON=0x72;
   358  007D6A  0E72               	movlw	114
   359  007D6C  6ED3               	movwf	211,c	;volatile
   360  007D6E                     
   361                           ;main.c: 22:     UARTConfi(9600);
   362  007D6E  0E25               	movlw	37
   363  007D70  6E3D               	movwf	(UARTConfi@BAUD+1)^0,c
   364  007D72  0E80               	movlw	128
   365  007D74  6E3C               	movwf	UARTConfi@BAUD^0,c
   366  007D76  EC8F  F03D         	call	_UARTConfi	;wreg free
   367  007D7A                     
   368                           ;main.c: 23:     TRISC=0X00;
   369  007D7A  0E00               	movlw	0
   370  007D7C  6E94               	movwf	148,c	;volatile
   371  007D7E                     
   372                           ;main.c: 26:     NextState = iddle_State;
   373  007D7E  0E00               	movlw	0
   374  007D80  6E4C               	movwf	_NextState^0,c
   375  007D82  EFE1  F03E         	goto	l1241
   376  007D86                     l1227:
   377                           
   378                           ;main.c: 34:                 NextState= start();
   379  007D86  EC6F  F03D         	call	_start	;wreg free
   380  007D8A  6E4C               	movwf	_NextState^0,c
   381                           
   382                           ;main.c: 35:             }break;
   383  007D8C  EFE1  F03E         	goto	l1241
   384  007D90                     l1229:
   385                           
   386                           ;main.c: 38:                 NextState=cmd();
   387  007D90  EC3C  F03E         	call	_cmd	;wreg free
   388  007D94  6E4C               	movwf	_NextState^0,c
   389                           
   390                           ;main.c: 39:             }break;
   391  007D96  EFE1  F03E         	goto	l1241
   392  007D9A                     l1231:
   393                           
   394                           ;main.c: 42:                 NextState=Par_Validated();
   395  007D9A  EC02  F03E         	call	_Par_Validated	;wreg free
   396  007D9E  6E4C               	movwf	_NextState^0,c
   397                           
   398                           ;main.c: 43:             }break;
   399  007DA0  EFE1  F03E         	goto	l1241
   400  007DA4                     l1233:
   401                           
   402                           ;main.c: 46:                 NextState=Ins_Validated();
   403  007DA4  ECC8  F03D         	call	_Ins_Validated	;wreg free
   404  007DA8  6E4C               	movwf	_NextState^0,c
   405                           
   406                           ;main.c: 47:             }break;
   407  007DAA  EFE1  F03E         	goto	l1241
   408  007DAE                     l1235:
   409                           
   410                           ;main.c: 50:                 NextState=Coord_Validated();
   411  007DAE  EC77  F03E         	call	_Coord_Validated	;wreg free
   412  007DB2  6E4C               	movwf	_NextState^0,c
   413                           
   414                           ;main.c: 51:             }break;
   415  007DB4  EFE1  F03E         	goto	l1241
   416  007DB8                     l1237:
   417                           
   418                           ;main.c: 54:                 NextState=end();
   419  007DB8  EC4F  F03D         	call	_end	;wreg free
   420  007DBC  6E4C               	movwf	_NextState^0,c
   421                           
   422                           ;main.c: 55:             }break;
   423  007DBE  EFE1  F03E         	goto	l1241
   424  007DC2                     l150:
   425  007DC2                     l1241:
   426  007DC2  504C               	movf	_NextState^0,w,c
   427  007DC4  6E4A               	movwf	??_main^0,c
   428  007DC6  6A4B               	clrf	(??_main+1)^0,c
   429                           
   430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   431                           ; Switch size 1, requested type "simple"
   432                           ; Number of cases is 1, Range of values is 0 to 0
   433                           ; switch strategies available:
   434                           ; Name         Instructions Cycles
   435                           ; simple_byte            4     3 (average)
   436                           ;	Chosen strategy is simple_byte
   437  007DC8  504B               	movf	(??_main+1)^0,w,c
   438  007DCA  0A00               	xorlw	0	; case 0
   439  007DCC  B4D8               	btfsc	status,2,c
   440  007DCE  EFEB  F03E         	goto	l1251
   441  007DD2  EFE1  F03E         	goto	l150
   442  007DD6                     l1251:
   443                           
   444                           ; Switch size 1, requested type "simple"
   445                           ; Number of cases is 6, Range of values is 0 to 6
   446                           ; switch strategies available:
   447                           ; Name         Instructions Cycles
   448                           ; simple_byte           19    10 (average)
   449                           ;	Chosen strategy is simple_byte
   450  007DD6  504A               	movf	??_main^0,w,c
   451  007DD8  0A00               	xorlw	0	; case 0
   452  007DDA  B4D8               	btfsc	status,2,c
   453  007DDC  EFC3  F03E         	goto	l1227
   454  007DE0  0A01               	xorlw	1	; case 1
   455  007DE2  B4D8               	btfsc	status,2,c
   456  007DE4  EFC8  F03E         	goto	l1229
   457  007DE8  0A03               	xorlw	3	; case 2
   458  007DEA  B4D8               	btfsc	status,2,c
   459  007DEC  EFCD  F03E         	goto	l1231
   460  007DF0  0A01               	xorlw	1	; case 3
   461  007DF2  B4D8               	btfsc	status,2,c
   462  007DF4  EFD2  F03E         	goto	l1233
   463  007DF8  0A07               	xorlw	7	; case 4
   464  007DFA  B4D8               	btfsc	status,2,c
   465  007DFC  EFD7  F03E         	goto	l1235
   466  007E00  0A02               	xorlw	2	; case 6
   467  007E02  B4D8               	btfsc	status,2,c
   468  007E04  EFDC  F03E         	goto	l1237
   469  007E08  EFE1  F03E         	goto	l150
   470  007E0C  EF00  F000         	goto	start
   471  007E10                     __end_of_main:
   472                           	opt callstack 0
   473                           
   474 ;; *************** function _start *****************
   475 ;; Defined at:
   476 ;;		line 18 in file "cases.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  i               2    1[COMRAM] int 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      unsigned char 
   483 ;; Registers used:
   484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         2       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0
   493 ;;      Totals:         2       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    1
   497 ;; This function calls:
   498 ;;		_UARTWrite
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  007ADE                     __ptext1:
   506                           	opt callstack 0
   507  007ADE                     _start:
   508                           	opt callstack 29
   509  007ADE                     
   510                           ;cases.c: 19:      for(int i=0;i<10;i++){
   511  007ADE  0E00               	movlw	0
   512  007AE0  6E30               	movwf	(start@i+1)^0,c
   513  007AE2  0E00               	movlw	0
   514  007AE4  6E2F               	movwf	start@i^0,c
   515  007AE6                     l917:
   516                           
   517                           ;cases.c: 20:         UARTWrite(init[i]);
   518  007AE6  0E0E               	movlw	low _init
   519  007AE8  242F               	addwf	start@i^0,w,c
   520  007AEA  6ED9               	movwf	fsr2l,c
   521  007AEC  0E00               	movlw	high _init
   522  007AEE  2030               	addwfc	(start@i+1)^0,w,c
   523  007AF0  6EDA               	movwf	fsr2h,c
   524  007AF2  50DF               	movf	indf2,w,c
   525  007AF4  EC12  F03D         	call	_UARTWrite
   526  007AF8                     
   527                           ;cases.c: 21:     }
   528  007AF8  4A2F               	infsnz	start@i^0,f,c
   529  007AFA  2A30               	incf	(start@i+1)^0,f,c
   530  007AFC  BE30               	btfsc	(start@i+1)^0,7,c
   531  007AFE  EF8A  F03D         	goto	u101
   532  007B02  5030               	movf	(start@i+1)^0,w,c
   533  007B04  E109               	bnz	u100
   534  007B06  0E0A               	movlw	10
   535  007B08  5C2F               	subwf	start@i^0,w,c
   536  007B0A  A0D8               	btfss	status,0,c
   537  007B0C  EF8A  F03D         	goto	u101
   538  007B10  EF8C  F03D         	goto	u100
   539  007B14                     u101:
   540  007B14  EF73  F03D         	goto	l917
   541  007B18                     u100:
   542  007B18                     
   543                           ;cases.c: 22:      PORTC = 0xff;
   544  007B18  6882               	setf	130,c	;volatile
   545  007B1A                     
   546                           ;cases.c: 23:      return wait_cmd_State;
   547  007B1A  0E01               	movlw	1
   548  007B1C  0012               	return		;funcret
   549  007B1E                     __end_of_start:
   550                           	opt callstack 0
   551                           
   552 ;; *************** function _end *****************
   553 ;; Defined at:
   554 ;;		line 84 in file "cases.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  i               2    1[COMRAM] int 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      unsigned char 
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   568 ;;      Params:         0       0       0       0       0       0       0       0       0
   569 ;;      Locals:         2       0       0       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0
   571 ;;      Totals:         2       0       0       0       0       0       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		_UARTWrite
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text2
   583  007A9E                     __ptext2:
   584                           	opt callstack 0
   585  007A9E                     _end:
   586                           	opt callstack 29
   587  007A9E                     
   588                           ;cases.c: 85:     for(int i=0;i<4;i++){
   589  007A9E  0E00               	movlw	0
   590  007AA0  6E30               	movwf	(end@i+1)^0,c
   591  007AA2  0E00               	movlw	0
   592  007AA4  6E2F               	movwf	end@i^0,c
   593  007AA6                     l1053:
   594                           
   595                           ;cases.c: 86:         UARTWrite(okay[i]);
   596  007AA6  0E2A               	movlw	low _okay
   597  007AA8  242F               	addwf	end@i^0,w,c
   598  007AAA  6ED9               	movwf	fsr2l,c
   599  007AAC  0E00               	movlw	high _okay
   600  007AAE  2030               	addwfc	(end@i+1)^0,w,c
   601  007AB0  6EDA               	movwf	fsr2h,c
   602  007AB2  50DF               	movf	indf2,w,c
   603  007AB4  EC12  F03D         	call	_UARTWrite
   604  007AB8                     
   605                           ;cases.c: 87:     }
   606  007AB8  4A2F               	infsnz	end@i^0,f,c
   607  007ABA  2A30               	incf	(end@i+1)^0,f,c
   608  007ABC  BE30               	btfsc	(end@i+1)^0,7,c
   609  007ABE  EF6A  F03D         	goto	u211
   610  007AC2  5030               	movf	(end@i+1)^0,w,c
   611  007AC4  E109               	bnz	u210
   612  007AC6  0E04               	movlw	4
   613  007AC8  5C2F               	subwf	end@i^0,w,c
   614  007ACA  A0D8               	btfss	status,0,c
   615  007ACC  EF6A  F03D         	goto	u211
   616  007AD0  EF6C  F03D         	goto	u210
   617  007AD4                     u211:
   618  007AD4  EF53  F03D         	goto	l1053
   619  007AD8                     u210:
   620  007AD8                     
   621                           ;cases.c: 88:     PORTC=0XFF;
   622  007AD8  6882               	setf	130,c	;volatile
   623  007ADA                     
   624                           ;cases.c: 89:     return wait_cmd_State;
   625  007ADA  0E01               	movlw	1
   626  007ADC  0012               	return		;funcret
   627  007ADE                     __end_of_end:
   628                           	opt callstack 0
   629                           
   630 ;; *************** function _cmd *****************
   631 ;; Defined at:
   632 ;;		line 27 in file "cases.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  i               2   26[COMRAM] int 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      unsigned char 
   639 ;; Registers used:
   640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         0       0       0       0       0       0       0       0       0
   647 ;;      Locals:         2       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         2       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        2 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    2
   653 ;; This function calls:
   654 ;;		_UARTWrite
   655 ;;		_coord
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  007C78                     __ptext3:
   663                           	opt callstack 0
   664  007C78                     _cmd:
   665                           	opt callstack 28
   666  007C78                     
   667                           ;cases.c: 28:     UARTWrite(13);
   668  007C78  0E0D               	movlw	13
   669  007C7A  EC12  F03D         	call	_UARTWrite
   670  007C7E                     
   671                           ;cases.c: 29:     PORTC = 0x00;
   672  007C7E  0E00               	movlw	0
   673  007C80  6E82               	movwf	130,c	;volatile
   674  007C82                     
   675                           ;cases.c: 30:     for(int i=0;i<10;i++){
   676  007C82  0E00               	movlw	0
   677  007C84  6E49               	movwf	(cmd@i+1)^0,c
   678  007C86  0E00               	movlw	0
   679  007C88  6E48               	movwf	cmd@i^0,c
   680  007C8A                     l1187:
   681                           
   682                           ;cases.c: 31:         UARTWrite(e_c[i]);
   683  007C8A  0E01               	movlw	low _e_c
   684  007C8C  2448               	addwf	cmd@i^0,w,c
   685  007C8E  6ED9               	movwf	fsr2l,c
   686  007C90  0E00               	movlw	high _e_c
   687  007C92  2049               	addwfc	(cmd@i+1)^0,w,c
   688  007C94  6EDA               	movwf	fsr2h,c
   689  007C96  50DF               	movf	indf2,w,c
   690  007C98  EC12  F03D         	call	_UARTWrite
   691  007C9C                     
   692                           ;cases.c: 32:     }
   693  007C9C  4A48               	infsnz	cmd@i^0,f,c
   694  007C9E  2A49               	incf	(cmd@i+1)^0,f,c
   695  007CA0  BE49               	btfsc	(cmd@i+1)^0,7,c
   696  007CA2  EF5C  F03E         	goto	u291
   697  007CA6  5049               	movf	(cmd@i+1)^0,w,c
   698  007CA8  E109               	bnz	u290
   699  007CAA  0E0A               	movlw	10
   700  007CAC  5C48               	subwf	cmd@i^0,w,c
   701  007CAE  A0D8               	btfss	status,0,c
   702  007CB0  EF5C  F03E         	goto	u291
   703  007CB4  EF5E  F03E         	goto	u290
   704  007CB8                     u291:
   705  007CB8  EF45  F03E         	goto	l1187
   706  007CBC                     u290:
   707  007CBC                     
   708                           ;cases.c: 33:     coord(&Par1,&letter,&cord_x, &cord_y, &Par2);
   709  007CBC  0E53               	movlw	low _Par1
   710  007CBE  6E2E               	movwf	coord@P1^0,c
   711  007CC0  0E00               	movlw	high _Par1
   712  007CC2  6E2F               	movwf	(coord@P1+1)^0,c
   713  007CC4  0E52               	movlw	low _letter
   714  007CC6  6E30               	movwf	coord@L^0,c
   715  007CC8  0E00               	movlw	high _letter
   716  007CCA  6E31               	movwf	(coord@L+1)^0,c
   717  007CCC  0E4F               	movlw	low _cord_x
   718  007CCE  6E32               	movwf	coord@x^0,c
   719  007CD0  0E00               	movlw	high _cord_x
   720  007CD2  6E33               	movwf	(coord@x+1)^0,c
   721  007CD4  0E4D               	movlw	low _cord_y
   722  007CD6  6E34               	movwf	coord@y^0,c
   723  007CD8  0E00               	movlw	high _cord_y
   724  007CDA  6E35               	movwf	(coord@y+1)^0,c
   725  007CDC  0E51               	movlw	low _Par2
   726  007CDE  6E36               	movwf	coord@P2^0,c
   727  007CE0  0E00               	movlw	high _Par2
   728  007CE2  6E37               	movwf	(coord@P2+1)^0,c
   729  007CE4  EC08  F03F         	call	_coord	;wreg free
   730  007CE8                     
   731                           ;cases.c: 34:     PORTC =0Xff;
   732  007CE8  6882               	setf	130,c	;volatile
   733  007CEA                     
   734                           ;cases.c: 35:     return validate_Par_State;
   735  007CEA  0E02               	movlw	2
   736  007CEC  0012               	return		;funcret
   737  007CEE                     __end_of_cmd:
   738                           	opt callstack 0
   739                           
   740 ;; *************** function _coord *****************
   741 ;; Defined at:
   742 ;;		line 9 in file "coordenadas.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  P1              2    0[COMRAM] PTR unsigned char 
   745 ;;		 -> Par1(1), 
   746 ;;  L               2    2[COMRAM] PTR unsigned char 
   747 ;;		 -> letter(1), 
   748 ;;  x               2    4[COMRAM] PTR unsigned short 
   749 ;;		 -> cord_x(2), 
   750 ;;  y               2    6[COMRAM] PTR unsigned short 
   751 ;;		 -> cord_y(2), 
   752 ;;  P2              2    8[COMRAM] PTR unsigned char 
   753 ;;		 -> Par2(1), 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  i               2   24[COMRAM] int 
   756 ;;  buffer          9   14[COMRAM] unsigned char [9]
   757 ;;  read            1   23[COMRAM] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[COMRAM] int 
   760 ;; Registers used:
   761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   767 ;;      Params:        10       0       0       0       0       0       0       0       0
   768 ;;      Locals:        12       0       0       0       0       0       0       0       0
   769 ;;      Temps:          4       0       0       0       0       0       0       0       0
   770 ;;      Totals:        26       0       0       0       0       0       0       0       0
   771 ;;Total ram usage:       26 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    1
   774 ;; This function calls:
   775 ;;		_UARTRead
   776 ;; This function is called by:
   777 ;;		_cmd
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text4
   782  007E10                     __ptext4:
   783                           	opt callstack 0
   784  007E10                     _coord:
   785                           	opt callstack 28
   786  007E10                     
   787                           ;coordenadas.c: 10:   char buffer [9];;coordenadas.c: 11:         char read;;coordenadas
      +                          .c: 13:         for(int i=0; i<=8; i++){
   788  007E10  0E00               	movlw	0
   789  007E12  6E47               	movwf	(coord@i+1)^0,c
   790  007E14  0E00               	movlw	0
   791  007E16  6E46               	movwf	coord@i^0,c
   792  007E18                     l1119:
   793                           
   794                           ;coordenadas.c: 14:             read= UARTRead();
   795  007E18  EC09  F03D         	call	_UARTRead	;wreg free
   796  007E1C  6E45               	movwf	coord@read^0,c
   797  007E1E                     
   798                           ;coordenadas.c: 15:             buffer[i]=read;
   799  007E1E  0E3C               	movlw	low coord@buffer
   800  007E20  2446               	addwf	coord@i^0,w,c
   801  007E22  6ED9               	movwf	fsr2l,c
   802  007E24  0E00               	movlw	high coord@buffer
   803  007E26  2047               	addwfc	(coord@i+1)^0,w,c
   804  007E28  6EDA               	movwf	fsr2h,c
   805  007E2A  C045  FFDF         	movff	coord@read,indf2
   806  007E2E                     
   807                           ;coordenadas.c: 16:         }
   808  007E2E  4A46               	infsnz	coord@i^0,f,c
   809  007E30  2A47               	incf	(coord@i+1)^0,f,c
   810  007E32  BE47               	btfsc	(coord@i+1)^0,7,c
   811  007E34  EF25  F03F         	goto	u221
   812  007E38  5047               	movf	(coord@i+1)^0,w,c
   813  007E3A  E109               	bnz	u220
   814  007E3C  0E09               	movlw	9
   815  007E3E  5C46               	subwf	coord@i^0,w,c
   816  007E40  A0D8               	btfss	status,0,c
   817  007E42  EF25  F03F         	goto	u221
   818  007E46  EF27  F03F         	goto	u220
   819  007E4A                     u221:
   820  007E4A  EF0C  F03F         	goto	l1119
   821  007E4E                     u220:
   822  007E4E                     
   823                           ;coordenadas.c: 17:         *P1= buffer[0];
   824  007E4E  C02E  FFD9         	movff	coord@P1,fsr2l
   825  007E52  C02F  FFDA         	movff	coord@P1+1,fsr2h
   826  007E56  C03C  FFDF         	movff	coord@buffer,indf2
   827                           
   828                           ;coordenadas.c: 18:         *L= buffer[1];
   829  007E5A  C030  FFD9         	movff	coord@L,fsr2l
   830  007E5E  C031  FFDA         	movff	coord@L+1,fsr2h
   831  007E62  C03D  FFDF         	movff	coord@buffer+1,indf2
   832  007E66                     
   833                           ;coordenadas.c: 19:   *x = 1*(buffer[4]-48) + 10*(buffer[3]-48) + 100*(buffer[2]-48);
   834  007E66  0E30               	movlw	48
   835  007E68  6E38               	movwf	??_coord^0,c
   836  007E6A  0EEB               	movlw	235
   837  007E6C  6E39               	movwf	(??_coord+1)^0,c
   838  007E6E  503E               	movf	(coord@buffer+2)^0,w,c
   839  007E70  0D64               	mullw	100
   840  007E72  CFF3 F03A          	movff	prodl,??_coord+2
   841  007E76  CFF4 F03B          	movff	prodh,??_coord+3
   842  007E7A  503F               	movf	(coord@buffer+3)^0,w,c
   843  007E7C  0D0A               	mullw	10
   844  007E7E  50F3               	movf	243,w,c
   845  007E80  263A               	addwf	(??_coord+2)^0,f,c
   846  007E82  50F4               	movf	244,w,c
   847  007E84  223B               	addwfc	(??_coord+3)^0,f,c
   848  007E86  5040               	movf	(coord@buffer+4)^0,w,c
   849  007E88  263A               	addwf	(??_coord+2)^0,f,c
   850  007E8A  0E00               	movlw	0
   851  007E8C  223B               	addwfc	(??_coord+3)^0,f,c
   852  007E8E  5038               	movf	??_coord^0,w,c
   853  007E90  263A               	addwf	(??_coord+2)^0,f,c
   854  007E92  5039               	movf	(??_coord+1)^0,w,c
   855  007E94  223B               	addwfc	(??_coord+3)^0,f,c
   856  007E96  C032  FFD9         	movff	coord@x,fsr2l
   857  007E9A  C033  FFDA         	movff	coord@x+1,fsr2h
   858  007E9E  C03A  FFDE         	movff	??_coord+2,postinc2
   859  007EA2  C03B  FFDD         	movff	??_coord+3,postdec2
   860  007EA6                     
   861                           ;coordenadas.c: 20:   *y = 1*(buffer[7]-48) + 10*(buffer[6]-48) + 100*(buffer[5]-48);
   862  007EA6  0E30               	movlw	48
   863  007EA8  6E38               	movwf	??_coord^0,c
   864  007EAA  0EEB               	movlw	235
   865  007EAC  6E39               	movwf	(??_coord+1)^0,c
   866  007EAE  5041               	movf	(coord@buffer+5)^0,w,c
   867  007EB0  0D64               	mullw	100
   868  007EB2  CFF3 F03A          	movff	prodl,??_coord+2
   869  007EB6  CFF4 F03B          	movff	prodh,??_coord+3
   870  007EBA  5042               	movf	(coord@buffer+6)^0,w,c
   871  007EBC  0D0A               	mullw	10
   872  007EBE  50F3               	movf	243,w,c
   873  007EC0  263A               	addwf	(??_coord+2)^0,f,c
   874  007EC2  50F4               	movf	244,w,c
   875  007EC4  223B               	addwfc	(??_coord+3)^0,f,c
   876  007EC6  5043               	movf	(coord@buffer+7)^0,w,c
   877  007EC8  263A               	addwf	(??_coord+2)^0,f,c
   878  007ECA  0E00               	movlw	0
   879  007ECC  223B               	addwfc	(??_coord+3)^0,f,c
   880  007ECE  5038               	movf	??_coord^0,w,c
   881  007ED0  263A               	addwf	(??_coord+2)^0,f,c
   882  007ED2  5039               	movf	(??_coord+1)^0,w,c
   883  007ED4  223B               	addwfc	(??_coord+3)^0,f,c
   884  007ED6  C034  FFD9         	movff	coord@y,fsr2l
   885  007EDA  C035  FFDA         	movff	coord@y+1,fsr2h
   886  007EDE  C03A  FFDE         	movff	??_coord+2,postinc2
   887  007EE2  C03B  FFDD         	movff	??_coord+3,postdec2
   888                           
   889                           ;coordenadas.c: 21:   *P2= buffer[8];
   890  007EE6  C036  FFD9         	movff	coord@P2,fsr2l
   891  007EEA  C037  FFDA         	movff	coord@P2+1,fsr2h
   892  007EEE  C044  FFDF         	movff	coord@buffer+8,indf2
   893  007EF2  0012               	return		;funcret
   894  007EF4                     __end_of_coord:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _UARTRead *****************
   898 ;; Defined at:
   899 ;;		line 30 in file "UART.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      unsigned char 
   906 ;; Registers used:
   907 ;;		wreg, status,2
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         0       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_coord
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text5
   927  007A12                     __ptext5:
   928                           	opt callstack 0
   929  007A12                     _UARTRead:
   930                           	opt callstack 28
   931  007A12                     l94:
   932  007A12  AA9E               	btfss	3998,5,c	;volatile
   933  007A14  EF0E  F03D         	goto	u11
   934  007A18  EF10  F03D         	goto	u10
   935  007A1C                     u11:
   936  007A1C  EF09  F03D         	goto	l94
   937  007A20                     u10:
   938  007A20                     
   939                           ;UART.c: 32:     return RCREG;
   940  007A20  50AE               	movf	174,w,c	;volatile
   941  007A22  0012               	return		;funcret
   942  007A24                     __end_of_UARTRead:
   943                           	opt callstack 0
   944                           
   945 ;; *************** function _UARTConfi *****************
   946 ;; Defined at:
   947 ;;		line 5 in file "UART.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  BAUD            2   14[COMRAM] int 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         2       0       0       0       0       0       0       0       0
   962 ;;      Locals:         4       0       0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0
   964 ;;      Totals:         6       0       0       0       0       0       0       0       0
   965 ;;Total ram usage:        6 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    1
   968 ;; This function calls:
   969 ;;		___aldiv
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text6
   976  007B1E                     __ptext6:
   977                           	opt callstack 0
   978  007B1E                     _UARTConfi:
   979                           	opt callstack 29
   980  007B1E                     
   981                           ;UART.c: 7:     TRISCbits.RC6=0;
   982  007B1E  9C94               	bcf	148,6,c	;volatile
   983                           
   984                           ;UART.c: 8:     TRISCbits.RC7=1;
   985  007B20  8E94               	bsf	148,7,c	;volatile
   986  007B22                     
   987                           ;UART.c: 10:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
   988  007B22  C03C  F032         	movff	UARTConfi@BAUD,___aldiv@divisor
   989  007B26  C03D  F033         	movff	UARTConfi@BAUD+1,___aldiv@divisor+1
   990  007B2A  0E00               	movlw	0
   991  007B2C  BE33               	btfsc	(___aldiv@divisor+1)^0,7,c
   992  007B2E  0EFF               	movlw	-1
   993  007B30  6E34               	movwf	(___aldiv@divisor+2)^0,c
   994  007B32  6E35               	movwf	(___aldiv@divisor+3)^0,c
   995  007B34  0E00               	movlw	0
   996  007B36  6E2E               	movwf	___aldiv@dividend^0,c
   997  007B38  0E12               	movlw	18
   998  007B3A  6E2F               	movwf	(___aldiv@dividend+1)^0,c
   999  007B3C  0E7A               	movlw	122
  1000  007B3E  6E30               	movwf	(___aldiv@dividend+2)^0,c
  1001  007B40  0E00               	movlw	0
  1002  007B42  6E31               	movwf	(___aldiv@dividend+3)^0,c
  1003  007B44  EC7A  F03F         	call	___aldiv	;wreg free
  1004  007B48  C02E  F03E         	movff	?___aldiv,_UARTConfi$956
  1005  007B4C  C02F  F03F         	movff	?___aldiv+1,_UARTConfi$956+1
  1006  007B50  C030  F040         	movff	?___aldiv+2,_UARTConfi$956+2
  1007  007B54  C031  F041         	movff	?___aldiv+3,_UARTConfi$956+3
  1008                           
  1009                           ;UART.c: 10:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  1010  007B58  C03E  F02E         	movff	_UARTConfi$956,___aldiv@dividend
  1011  007B5C  C03F  F02F         	movff	_UARTConfi$956+1,___aldiv@dividend+1
  1012  007B60  C040  F030         	movff	_UARTConfi$956+2,___aldiv@dividend+2
  1013  007B64  C041  F031         	movff	_UARTConfi$956+3,___aldiv@dividend+3
  1014  007B68  0E40               	movlw	64
  1015  007B6A  6E32               	movwf	___aldiv@divisor^0,c
  1016  007B6C  0E00               	movlw	0
  1017  007B6E  6E33               	movwf	(___aldiv@divisor+1)^0,c
  1018  007B70  0E00               	movlw	0
  1019  007B72  6E34               	movwf	(___aldiv@divisor+2)^0,c
  1020  007B74  0E00               	movlw	0
  1021  007B76  6E35               	movwf	(___aldiv@divisor+3)^0,c
  1022  007B78  EC7A  F03F         	call	___aldiv	;wreg free
  1023  007B7C  042E               	decf	?___aldiv^0,w,c
  1024  007B7E  6EAF               	movwf	175,c	;volatile
  1025  007B80                     
  1026                           ;UART.c: 11:     TXSTAbits.BRGH = 0;
  1027  007B80  94AC               	bcf	172,2,c	;volatile
  1028  007B82                     
  1029                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  1030  007B82  98AC               	bcf	172,4,c	;volatile
  1031  007B84                     
  1032                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  1033  007B84  8EAB               	bsf	171,7,c	;volatile
  1034  007B86                     
  1035                           ;UART.c: 16:     TXSTAbits.TX9 = 0;
  1036  007B86  9CAC               	bcf	172,6,c	;volatile
  1037  007B88                     
  1038                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1039  007B88  8AAC               	bsf	172,5,c	;volatile
  1040  007B8A                     
  1041                           ;UART.c: 20:     RCSTAbits.RC9 = 0;
  1042  007B8A  9CAB               	bcf	171,6,c	;volatile
  1043  007B8C                     
  1044                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1045  007B8C  88AB               	bsf	171,4,c	;volatile
  1046  007B8E  0012               	return		;funcret
  1047  007B90                     __end_of_UARTConfi:
  1048                           	opt callstack 0
  1049                           
  1050 ;; *************** function ___aldiv *****************
  1051 ;; Defined at:
  1052 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  dividend        4    0[COMRAM] long 
  1055 ;;  divisor         4    4[COMRAM] long 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  quotient        4   10[COMRAM] long 
  1058 ;;  sign            1    9[COMRAM] unsigned char 
  1059 ;;  counter         1    8[COMRAM] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  4    0[COMRAM] long 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1069 ;;      Params:         8       0       0       0       0       0       0       0       0
  1070 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1072 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1073 ;;Total ram usage:       14 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_UARTConfi
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text7
  1083  007EF4                     __ptext7:
  1084                           	opt callstack 0
  1085  007EF4                     ___aldiv:
  1086                           	opt callstack 29
  1087  007EF4  0E00               	movlw	0
  1088  007EF6  6E37               	movwf	___aldiv@sign^0,c
  1089  007EF8  BE35               	btfsc	(___aldiv@divisor+3)^0,7,c
  1090  007EFA  EF83  F03F         	goto	u230
  1091  007EFE  EF81  F03F         	goto	u231
  1092  007F02                     u231:
  1093  007F02  EF8D  F03F         	goto	l1141
  1094  007F06                     u230:
  1095  007F06  1E35               	comf	(___aldiv@divisor+3)^0,f,c
  1096  007F08  1E34               	comf	(___aldiv@divisor+2)^0,f,c
  1097  007F0A  1E33               	comf	(___aldiv@divisor+1)^0,f,c
  1098  007F0C  6C32               	negf	___aldiv@divisor^0,c
  1099  007F0E  0E00               	movlw	0
  1100  007F10  2233               	addwfc	(___aldiv@divisor+1)^0,f,c
  1101  007F12  2234               	addwfc	(___aldiv@divisor+2)^0,f,c
  1102  007F14  2235               	addwfc	(___aldiv@divisor+3)^0,f,c
  1103  007F16  0E01               	movlw	1
  1104  007F18  6E37               	movwf	___aldiv@sign^0,c
  1105  007F1A                     l1141:
  1106  007F1A  BE31               	btfsc	(___aldiv@dividend+3)^0,7,c
  1107  007F1C  EF94  F03F         	goto	u240
  1108  007F20  EF92  F03F         	goto	u241
  1109  007F24                     u241:
  1110  007F24  EF9E  F03F         	goto	l1147
  1111  007F28                     u240:
  1112  007F28  1E31               	comf	(___aldiv@dividend+3)^0,f,c
  1113  007F2A  1E30               	comf	(___aldiv@dividend+2)^0,f,c
  1114  007F2C  1E2F               	comf	(___aldiv@dividend+1)^0,f,c
  1115  007F2E  6C2E               	negf	___aldiv@dividend^0,c
  1116  007F30  0E00               	movlw	0
  1117  007F32  222F               	addwfc	(___aldiv@dividend+1)^0,f,c
  1118  007F34  2230               	addwfc	(___aldiv@dividend+2)^0,f,c
  1119  007F36  2231               	addwfc	(___aldiv@dividend+3)^0,f,c
  1120  007F38  0E01               	movlw	1
  1121  007F3A  1A37               	xorwf	___aldiv@sign^0,f,c
  1122  007F3C                     l1147:
  1123  007F3C  0E00               	movlw	0
  1124  007F3E  6E38               	movwf	___aldiv@quotient^0,c
  1125  007F40  0E00               	movlw	0
  1126  007F42  6E39               	movwf	(___aldiv@quotient+1)^0,c
  1127  007F44  0E00               	movlw	0
  1128  007F46  6E3A               	movwf	(___aldiv@quotient+2)^0,c
  1129  007F48  0E00               	movlw	0
  1130  007F4A  6E3B               	movwf	(___aldiv@quotient+3)^0,c
  1131  007F4C  5032               	movf	___aldiv@divisor^0,w,c
  1132  007F4E  1033               	iorwf	(___aldiv@divisor+1)^0,w,c
  1133  007F50  1034               	iorwf	(___aldiv@divisor+2)^0,w,c
  1134  007F52  1035               	iorwf	(___aldiv@divisor+3)^0,w,c
  1135  007F54  B4D8               	btfsc	status,2,c
  1136  007F56  EFAF  F03F         	goto	u251
  1137  007F5A  EFB1  F03F         	goto	u250
  1138  007F5E                     u251:
  1139  007F5E  EFE7  F03F         	goto	l1169
  1140  007F62                     u250:
  1141  007F62  0E01               	movlw	1
  1142  007F64  6E36               	movwf	___aldiv@counter^0,c
  1143  007F66  EFBB  F03F         	goto	l1155
  1144  007F6A                     l1153:
  1145  007F6A  90D8               	bcf	status,0,c
  1146  007F6C  3632               	rlcf	___aldiv@divisor^0,f,c
  1147  007F6E  3633               	rlcf	(___aldiv@divisor+1)^0,f,c
  1148  007F70  3634               	rlcf	(___aldiv@divisor+2)^0,f,c
  1149  007F72  3635               	rlcf	(___aldiv@divisor+3)^0,f,c
  1150  007F74  2A36               	incf	___aldiv@counter^0,f,c
  1151  007F76                     l1155:
  1152  007F76  AE35               	btfss	(___aldiv@divisor+3)^0,7,c
  1153  007F78  EFC0  F03F         	goto	u261
  1154  007F7C  EFC2  F03F         	goto	u260
  1155  007F80                     u261:
  1156  007F80  EFB5  F03F         	goto	l1153
  1157  007F84                     u260:
  1158  007F84                     l1157:
  1159  007F84  90D8               	bcf	status,0,c
  1160  007F86  3638               	rlcf	___aldiv@quotient^0,f,c
  1161  007F88  3639               	rlcf	(___aldiv@quotient+1)^0,f,c
  1162  007F8A  363A               	rlcf	(___aldiv@quotient+2)^0,f,c
  1163  007F8C  363B               	rlcf	(___aldiv@quotient+3)^0,f,c
  1164  007F8E  5032               	movf	___aldiv@divisor^0,w,c
  1165  007F90  5C2E               	subwf	___aldiv@dividend^0,w,c
  1166  007F92  5033               	movf	(___aldiv@divisor+1)^0,w,c
  1167  007F94  582F               	subwfb	(___aldiv@dividend+1)^0,w,c
  1168  007F96  5034               	movf	(___aldiv@divisor+2)^0,w,c
  1169  007F98  5830               	subwfb	(___aldiv@dividend+2)^0,w,c
  1170  007F9A  5035               	movf	(___aldiv@divisor+3)^0,w,c
  1171  007F9C  5831               	subwfb	(___aldiv@dividend+3)^0,w,c
  1172  007F9E  A0D8               	btfss	status,0,c
  1173  007FA0  EFD4  F03F         	goto	u271
  1174  007FA4  EFD6  F03F         	goto	u270
  1175  007FA8                     u271:
  1176  007FA8  EFDF  F03F         	goto	l1165
  1177  007FAC                     u270:
  1178  007FAC  5032               	movf	___aldiv@divisor^0,w,c
  1179  007FAE  5E2E               	subwf	___aldiv@dividend^0,f,c
  1180  007FB0  5033               	movf	(___aldiv@divisor+1)^0,w,c
  1181  007FB2  5A2F               	subwfb	(___aldiv@dividend+1)^0,f,c
  1182  007FB4  5034               	movf	(___aldiv@divisor+2)^0,w,c
  1183  007FB6  5A30               	subwfb	(___aldiv@dividend+2)^0,f,c
  1184  007FB8  5035               	movf	(___aldiv@divisor+3)^0,w,c
  1185  007FBA  5A31               	subwfb	(___aldiv@dividend+3)^0,f,c
  1186  007FBC  8038               	bsf	___aldiv@quotient^0,0,c
  1187  007FBE                     l1165:
  1188  007FBE  90D8               	bcf	status,0,c
  1189  007FC0  3235               	rrcf	(___aldiv@divisor+3)^0,f,c
  1190  007FC2  3234               	rrcf	(___aldiv@divisor+2)^0,f,c
  1191  007FC4  3233               	rrcf	(___aldiv@divisor+1)^0,f,c
  1192  007FC6  3232               	rrcf	___aldiv@divisor^0,f,c
  1193  007FC8  2E36               	decfsz	___aldiv@counter^0,f,c
  1194  007FCA  EFC2  F03F         	goto	l1157
  1195  007FCE                     l1169:
  1196  007FCE  5037               	movf	___aldiv@sign^0,w,c
  1197  007FD0  B4D8               	btfsc	status,2,c
  1198  007FD2  EFED  F03F         	goto	u281
  1199  007FD6  EFEF  F03F         	goto	u280
  1200  007FDA                     u281:
  1201  007FDA  EFF7  F03F         	goto	l1173
  1202  007FDE                     u280:
  1203  007FDE  1E3B               	comf	(___aldiv@quotient+3)^0,f,c
  1204  007FE0  1E3A               	comf	(___aldiv@quotient+2)^0,f,c
  1205  007FE2  1E39               	comf	(___aldiv@quotient+1)^0,f,c
  1206  007FE4  6C38               	negf	___aldiv@quotient^0,c
  1207  007FE6  0E00               	movlw	0
  1208  007FE8  2239               	addwfc	(___aldiv@quotient+1)^0,f,c
  1209  007FEA  223A               	addwfc	(___aldiv@quotient+2)^0,f,c
  1210  007FEC  223B               	addwfc	(___aldiv@quotient+3)^0,f,c
  1211  007FEE                     l1173:
  1212  007FEE  C038  F02E         	movff	___aldiv@quotient,?___aldiv
  1213  007FF2  C039  F02F         	movff	___aldiv@quotient+1,?___aldiv+1
  1214  007FF6  C03A  F030         	movff	___aldiv@quotient+2,?___aldiv+2
  1215  007FFA  C03B  F031         	movff	___aldiv@quotient+3,?___aldiv+3
  1216  007FFE  0012               	return		;funcret
  1217  008000                     __end_of___aldiv:
  1218                           	opt callstack 0
  1219                           
  1220 ;; *************** function _Par_Validated *****************
  1221 ;; Defined at:
  1222 ;;		line 38 in file "cases.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  i               2    1[COMRAM] int 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      unsigned char 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        2 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    1
  1243 ;; This function calls:
  1244 ;;		_UARTWrite
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text8
  1251  007C04                     __ptext8:
  1252                           	opt callstack 0
  1253  007C04                     _Par_Validated:
  1254                           	opt callstack 29
  1255  007C04                     
  1256                           ;cases.c: 39:     PORTC=0x00;
  1257  007C04  0E00               	movlw	0
  1258  007C06  6E82               	movwf	130,c	;volatile
  1259  007C08                     
  1260                           ;cases.c: 40:     if(Par1==0X3C && Par2==0x3E){
  1261  007C08  0E3C               	movlw	60
  1262  007C0A  1853               	xorwf	_Par1^0,w,c
  1263  007C0C  A4D8               	btfss	status,2,c
  1264  007C0E  EF0B  F03E         	goto	u121
  1265  007C12  EF0D  F03E         	goto	u120
  1266  007C16                     u121:
  1267  007C16  EF1B  F03E         	goto	l965
  1268  007C1A                     u120:
  1269  007C1A  0E3E               	movlw	62
  1270  007C1C  1851               	xorwf	_Par2^0,w,c
  1271  007C1E  A4D8               	btfss	status,2,c
  1272  007C20  EF14  F03E         	goto	u131
  1273  007C24  EF16  F03E         	goto	u130
  1274  007C28                     u131:
  1275  007C28  EF1B  F03E         	goto	l965
  1276  007C2C                     u130:
  1277  007C2C                     
  1278                           ;cases.c: 41:         PORTC=0X02;
  1279  007C2C  0E02               	movlw	2
  1280  007C2E  6E82               	movwf	130,c	;volatile
  1281  007C30                     
  1282                           ;cases.c: 42:         return validate_Instruct_State;
  1283  007C30  0E03               	movlw	3
  1284  007C32  EF3B  F03E         	goto	l42
  1285  007C36                     l965:
  1286                           
  1287                           ;cases.c: 45:         for(int i=0;i<6;i++){
  1288  007C36  0E00               	movlw	0
  1289  007C38  6E30               	movwf	(Par_Validated@i+1)^0,c
  1290  007C3A  0E00               	movlw	0
  1291  007C3C  6E2F               	movwf	Par_Validated@i^0,c
  1292  007C3E                     l971:
  1293                           
  1294                           ;cases.c: 46:             UARTWrite(Error[i]);
  1295  007C3E  0E24               	movlw	low _Error
  1296  007C40  242F               	addwf	Par_Validated@i^0,w,c
  1297  007C42  6ED9               	movwf	fsr2l,c
  1298  007C44  0E00               	movlw	high _Error
  1299  007C46  2030               	addwfc	(Par_Validated@i+1)^0,w,c
  1300  007C48  6EDA               	movwf	fsr2h,c
  1301  007C4A  50DF               	movf	indf2,w,c
  1302  007C4C  EC12  F03D         	call	_UARTWrite
  1303  007C50                     
  1304                           ;cases.c: 47:         }
  1305  007C50  4A2F               	infsnz	Par_Validated@i^0,f,c
  1306  007C52  2A30               	incf	(Par_Validated@i+1)^0,f,c
  1307  007C54  BE30               	btfsc	(Par_Validated@i+1)^0,7,c
  1308  007C56  EF36  F03E         	goto	u141
  1309  007C5A  5030               	movf	(Par_Validated@i+1)^0,w,c
  1310  007C5C  E109               	bnz	u140
  1311  007C5E  0E06               	movlw	6
  1312  007C60  5C2F               	subwf	Par_Validated@i^0,w,c
  1313  007C62  A0D8               	btfss	status,0,c
  1314  007C64  EF36  F03E         	goto	u141
  1315  007C68  EF38  F03E         	goto	u140
  1316  007C6C                     u141:
  1317  007C6C  EF1F  F03E         	goto	l971
  1318  007C70                     u140:
  1319  007C70                     
  1320                           ;cases.c: 48:         PORTC= 0X04;
  1321  007C70  0E04               	movlw	4
  1322  007C72  6E82               	movwf	130,c	;volatile
  1323  007C74                     
  1324                           ;cases.c: 49:         return wait_cmd_State;
  1325  007C74  0E01               	movlw	1
  1326  007C76                     l42:
  1327  007C76  0012               	return		;funcret
  1328  007C78                     __end_of_Par_Validated:
  1329                           	opt callstack 0
  1330                           
  1331 ;; *************** function _Ins_Validated *****************
  1332 ;; Defined at:
  1333 ;;		line 53 in file "cases.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  i               2    1[COMRAM] int 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        2 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    1
  1354 ;; This function calls:
  1355 ;;		_UARTWrite
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text9
  1362  007B90                     __ptext9:
  1363                           	opt callstack 0
  1364  007B90                     _Ins_Validated:
  1365                           	opt callstack 29
  1366  007B90                     
  1367                           ;cases.c: 54:     PORTC=0x00;
  1368  007B90  0E00               	movlw	0
  1369  007B92  6E82               	movwf	130,c	;volatile
  1370  007B94                     
  1371                           ;cases.c: 55:     if(letter==0x43 || letter== 0x53){
  1372  007B94  0E43               	movlw	67
  1373  007B96  1852               	xorwf	_letter^0,w,c
  1374  007B98  B4D8               	btfsc	status,2,c
  1375  007B9A  EFD1  F03D         	goto	u151
  1376  007B9E  EFD3  F03D         	goto	u150
  1377  007BA2                     u151:
  1378  007BA2  EFDC  F03D         	goto	l989
  1379  007BA6                     u150:
  1380  007BA6  0E53               	movlw	83
  1381  007BA8  1852               	xorwf	_letter^0,w,c
  1382  007BAA  A4D8               	btfss	status,2,c
  1383  007BAC  EFDA  F03D         	goto	u161
  1384  007BB0  EFDC  F03D         	goto	u160
  1385  007BB4                     u161:
  1386  007BB4  EFE1  F03D         	goto	l997
  1387  007BB8                     u160:
  1388  007BB8                     l989:
  1389                           
  1390                           ;cases.c: 56:         PORTC=0X02;
  1391  007BB8  0E02               	movlw	2
  1392  007BBA  6E82               	movwf	130,c	;volatile
  1393  007BBC                     
  1394                           ;cases.c: 57:         return validate_Coord_State;
  1395  007BBC  0E04               	movlw	4
  1396  007BBE  EF01  F03E         	goto	l51
  1397  007BC2                     l997:
  1398                           
  1399                           ;cases.c: 60:         for(int i=0;i<6;i++){
  1400  007BC2  0E00               	movlw	0
  1401  007BC4  6E30               	movwf	(Ins_Validated@i+1)^0,c
  1402  007BC6  0E00               	movlw	0
  1403  007BC8  6E2F               	movwf	Ins_Validated@i^0,c
  1404  007BCA                     l1003:
  1405                           
  1406                           ;cases.c: 61:             UARTWrite(Error2[i]);
  1407  007BCA  0E1E               	movlw	low _Error2
  1408  007BCC  242F               	addwf	Ins_Validated@i^0,w,c
  1409  007BCE  6ED9               	movwf	fsr2l,c
  1410  007BD0  0E00               	movlw	high _Error2
  1411  007BD2  2030               	addwfc	(Ins_Validated@i+1)^0,w,c
  1412  007BD4  6EDA               	movwf	fsr2h,c
  1413  007BD6  50DF               	movf	indf2,w,c
  1414  007BD8  EC12  F03D         	call	_UARTWrite
  1415  007BDC                     
  1416                           ;cases.c: 62:         }
  1417  007BDC  4A2F               	infsnz	Ins_Validated@i^0,f,c
  1418  007BDE  2A30               	incf	(Ins_Validated@i+1)^0,f,c
  1419  007BE0  BE30               	btfsc	(Ins_Validated@i+1)^0,7,c
  1420  007BE2  EFFC  F03D         	goto	u171
  1421  007BE6  5030               	movf	(Ins_Validated@i+1)^0,w,c
  1422  007BE8  E109               	bnz	u170
  1423  007BEA  0E06               	movlw	6
  1424  007BEC  5C2F               	subwf	Ins_Validated@i^0,w,c
  1425  007BEE  A0D8               	btfss	status,0,c
  1426  007BF0  EFFC  F03D         	goto	u171
  1427  007BF4  EFFE  F03D         	goto	u170
  1428  007BF8                     u171:
  1429  007BF8  EFE5  F03D         	goto	l1003
  1430  007BFC                     u170:
  1431  007BFC                     
  1432                           ;cases.c: 63:         PORTC= 0X04;
  1433  007BFC  0E04               	movlw	4
  1434  007BFE  6E82               	movwf	130,c	;volatile
  1435  007C00                     
  1436                           ;cases.c: 64:         return wait_cmd_State;
  1437  007C00  0E01               	movlw	1
  1438  007C02                     l51:
  1439  007C02  0012               	return		;funcret
  1440  007C04                     __end_of_Ins_Validated:
  1441                           	opt callstack 0
  1442                           
  1443 ;; *************** function _Coord_Validated *****************
  1444 ;; Defined at:
  1445 ;;		line 68 in file "cases.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  i               2    1[COMRAM] int 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      unsigned char 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0
  1460 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1462 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    1
  1466 ;; This function calls:
  1467 ;;		_UARTWrite
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text10
  1474  007CEE                     __ptext10:
  1475                           	opt callstack 0
  1476  007CEE                     _Coord_Validated:
  1477                           	opt callstack 29
  1478  007CEE                     
  1479                           ;cases.c: 69:     PORTC=0x00;
  1480  007CEE  0E00               	movlw	0
  1481  007CF0  6E82               	movwf	130,c	;volatile
  1482  007CF2                     
  1483                           ;cases.c: 70:     if(cord_x<=300 && cord_y<=300){
  1484  007CF2  0E2D               	movlw	45
  1485  007CF4  5C4F               	subwf	_cord_x^0,w,c
  1486  007CF6  0E01               	movlw	1
  1487  007CF8  5850               	subwfb	(_cord_x+1)^0,w,c
  1488  007CFA  B0D8               	btfsc	status,0,c
  1489  007CFC  EF82  F03E         	goto	u181
  1490  007D00  EF84  F03E         	goto	u180
  1491  007D04                     u181:
  1492  007D04  EF94  F03E         	goto	l1029
  1493  007D08                     u180:
  1494  007D08  0E2D               	movlw	45
  1495  007D0A  5C4D               	subwf	_cord_y^0,w,c
  1496  007D0C  0E01               	movlw	1
  1497  007D0E  584E               	subwfb	(_cord_y+1)^0,w,c
  1498  007D10  B0D8               	btfsc	status,0,c
  1499  007D12  EF8D  F03E         	goto	u191
  1500  007D16  EF8F  F03E         	goto	u190
  1501  007D1A                     u191:
  1502  007D1A  EF94  F03E         	goto	l1029
  1503  007D1E                     u190:
  1504  007D1E                     
  1505                           ;cases.c: 71:         PORTC=0X02;
  1506  007D1E  0E02               	movlw	2
  1507  007D20  6E82               	movwf	130,c	;volatile
  1508  007D22                     
  1509                           ;cases.c: 72:         return end_State;
  1510  007D22  0E06               	movlw	6
  1511  007D24  EFB4  F03E         	goto	l58
  1512  007D28                     l1029:
  1513                           
  1514                           ;cases.c: 75:         for(int i=0;i<6;i++){
  1515  007D28  0E00               	movlw	0
  1516  007D2A  6E30               	movwf	(Coord_Validated@i+1)^0,c
  1517  007D2C  0E00               	movlw	0
  1518  007D2E  6E2F               	movwf	Coord_Validated@i^0,c
  1519  007D30                     l1035:
  1520                           
  1521                           ;cases.c: 76:             UARTWrite(Error2[i]);
  1522  007D30  0E1E               	movlw	low _Error2
  1523  007D32  242F               	addwf	Coord_Validated@i^0,w,c
  1524  007D34  6ED9               	movwf	fsr2l,c
  1525  007D36  0E00               	movlw	high _Error2
  1526  007D38  2030               	addwfc	(Coord_Validated@i+1)^0,w,c
  1527  007D3A  6EDA               	movwf	fsr2h,c
  1528  007D3C  50DF               	movf	indf2,w,c
  1529  007D3E  EC12  F03D         	call	_UARTWrite
  1530  007D42                     
  1531                           ;cases.c: 77:         }
  1532  007D42  4A2F               	infsnz	Coord_Validated@i^0,f,c
  1533  007D44  2A30               	incf	(Coord_Validated@i+1)^0,f,c
  1534  007D46  BE30               	btfsc	(Coord_Validated@i+1)^0,7,c
  1535  007D48  EFAF  F03E         	goto	u201
  1536  007D4C  5030               	movf	(Coord_Validated@i+1)^0,w,c
  1537  007D4E  E109               	bnz	u200
  1538  007D50  0E06               	movlw	6
  1539  007D52  5C2F               	subwf	Coord_Validated@i^0,w,c
  1540  007D54  A0D8               	btfss	status,0,c
  1541  007D56  EFAF  F03E         	goto	u201
  1542  007D5A  EFB1  F03E         	goto	u200
  1543  007D5E                     u201:
  1544  007D5E  EF98  F03E         	goto	l1035
  1545  007D62                     u200:
  1546  007D62                     
  1547                           ;cases.c: 78:         PORTC= 0X04;
  1548  007D62  0E04               	movlw	4
  1549  007D64  6E82               	movwf	130,c	;volatile
  1550  007D66                     
  1551                           ;cases.c: 79:        return wait_cmd_State;
  1552  007D66  0E01               	movlw	1
  1553  007D68                     l58:
  1554  007D68  0012               	return		;funcret
  1555  007D6A                     __end_of_Coord_Validated:
  1556                           	opt callstack 0
  1557                           
  1558 ;; *************** function _UARTWrite *****************
  1559 ;; Defined at:
  1560 ;;		line 24 in file "UART.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  data            1    wreg     unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  data            1    0[COMRAM] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0
  1575 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1577 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:        1 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_start
  1584 ;;		_cmd
  1585 ;;		_Par_Validated
  1586 ;;		_Ins_Validated
  1587 ;;		_Coord_Validated
  1588 ;;		_end
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text11
  1593  007A24                     __ptext11:
  1594                           	opt callstack 0
  1595  007A24                     _UARTWrite:
  1596                           	opt callstack 29
  1597                           
  1598                           ;incstack = 0
  1599                           ;UARTWrite@data stored from wreg
  1600  007A24  6E2E               	movwf	UARTWrite@data^0,c
  1601  007A26                     l88:
  1602  007A26  A89E               	btfss	158,4,c	;volatile
  1603  007A28  EF18  F03D         	goto	u21
  1604  007A2C  EF1A  F03D         	goto	u20
  1605  007A30                     u21:
  1606  007A30  EF13  F03D         	goto	l88
  1607  007A34                     u20:
  1608  007A34                     
  1609                           ;UART.c: 26:     TXREG= data;
  1610  007A34  C02E  FFAD         	movff	UARTWrite@data,4013	;volatile
  1611  007A38  0012               	return		;funcret
  1612  007A3A                     __end_of_UARTWrite:
  1613                           	opt callstack 0
  1614  0000                     
  1615                           	psect	rparam
  1616  0000                     tosu	equ	0xFFF
  1617                           tosh	equ	0xFFE
  1618                           tosl	equ	0xFFD
  1619                           stkptr	equ	0xFFC
  1620                           pclatu	equ	0xFFB
  1621                           pclath	equ	0xFFA
  1622                           pcl	equ	0xFF9
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           prodh	equ	0xFF4
  1628                           prodl	equ	0xFF3
  1629                           indf0	equ	0xFEF
  1630                           postinc0	equ	0xFEE
  1631                           postdec0	equ	0xFED
  1632                           preinc0	equ	0xFEC
  1633                           plusw0	equ	0xFEB
  1634                           fsr0h	equ	0xFEA
  1635                           fsr0l	equ	0xFE9
  1636                           wreg	equ	0xFE8
  1637                           indf1	equ	0xFE7
  1638                           postinc1	equ	0xFE6
  1639                           postdec1	equ	0xFE5
  1640                           preinc1	equ	0xFE4
  1641                           plusw1	equ	0xFE3
  1642                           fsr1h	equ	0xFE2
  1643                           fsr1l	equ	0xFE1
  1644                           bsr	equ	0xFE0
  1645                           indf2	equ	0xFDF
  1646                           postinc2	equ	0xFDE
  1647                           postdec2	equ	0xFDD
  1648                           preinc2	equ	0xFDC
  1649                           plusw2	equ	0xFDB
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        45
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      83
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    coord@P2	PTR unsigned char  size(2) Largest target is 1
		 -> Par2(COMRAM[1]), 

    coord@y	PTR unsigned short  size(2) Largest target is 2
		 -> cord_y(COMRAM[2]), 

    coord@x	PTR unsigned short  size(2) Largest target is 2
		 -> cord_x(COMRAM[2]), 

    coord@L	PTR unsigned char  size(2) Largest target is 1
		 -> letter(COMRAM[1]), 

    coord@P1	PTR unsigned char  size(2) Largest target is 1
		 -> Par1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_cmd
    _start->_UARTWrite
    _end->_UARTWrite
    _cmd->_coord
    _UARTConfi->___aldiv
    _Par_Validated->_UARTWrite
    _Ins_Validated->_UARTWrite
    _Coord_Validated->_UARTWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1919
                                             28 COMRAM     2     2      0
                    _Coord_Validated
                      _Ins_Validated
                      _Par_Validated
                          _UARTConfi
                                _cmd
                                _end
                              _start
 ---------------------------------------------------------------------------------
 (1) _start                                                2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (1) _end                                                  2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  2     2      0     894
                                             26 COMRAM     2     2      0
                          _UARTWrite
                              _coord
 ---------------------------------------------------------------------------------
 (2) _coord                                               26    16     10     811
                                              0 COMRAM    26    16     10
                           _UARTRead
 ---------------------------------------------------------------------------------
 (3) _UARTRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTConfi                                            6     4      2     725
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Par_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (1) _Ins_Validated                                        2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (1) _Coord_Validated                                      2     2      0      60
                                              1 COMRAM     2     2      0
                          _UARTWrite
 ---------------------------------------------------------------------------------
 (2) _UARTWrite                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Coord_Validated
     _UARTWrite
   _Ins_Validated
     _UARTWrite
   _Par_Validated
     _UARTWrite
   _UARTConfi
     ___aldiv
   _cmd
     _UARTWrite
     _coord
       _UARTRead
   _end
     _UARTWrite
   _start
     _UARTWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      53       1       87.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53      20        0.0%
DATA                 0      0      53       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 27 21:35:40 2019

                      l32 7B18                        l33 7B1C                        l42 7C76  
                      l51 7C02                        l38 7CEC                        l65 7AD8  
                      l58 7D68                        l66 7ADC                        l91 7A38  
                      l85 7B8E                        l94 7A12                        l88 7A26  
                      l97 7A22                        u10 7A20                        u11 7A1C  
                      u20 7A34                        u21 7A30                       l114 7EF2  
                     l150 7DC2                       l243 7FFE                       l911 7ADE  
                     l921 7AFC                       l843 7A26                       l923 7B1A  
                     l845 7A34                       l837 7A12                       l917 7AE6  
                     l951 7C04                       l839 7A20                       l919 7AF8  
                     l953 7C08                       l971 7C3E                       l955 7C1A  
                     l973 7C50                       l957 7C2C                       l965 7C36  
                     l991 7BBC                       l983 7B90                       l975 7C54  
                     l959 7C30                       l985 7B94                       l977 7C70  
                     l987 7BA6                       l979 7C74                       l997 7BC2  
                     l989 7BB8                       u100 7B18                       u101 7B14  
                     u200 7D62                       u120 7C1A                       u201 7D5E  
                     u121 7C16                       u130 7C2C                       u210 7AD8  
                     u131 7C28                       u211 7AD4                       u140 7C70  
                     u220 7E4E                       u141 7C6C                       u221 7E4A  
                     u150 7BA6                       u230 7F06                       u151 7BA2  
                     u231 7F02                       u160 7BB8                       u240 7F28  
                     u161 7BB4                       u241 7F24                       u170 7BFC  
                     u250 7F62                       u171 7BF8                       u251 7F5E  
                     u180 7D08                       u260 7F84                       u181 7D04  
                     u261 7F80                       u190 7D1E                       u270 7FAC  
                     u191 7D1A                       u271 7FA8                       u280 7FDE  
                     u281 7FDA                       u290 7CBC                       u291 7CB8  
                     _e_c 0001                       _cmd 7C78                       _end 7A9E  
                     wreg 000FE8              __CFG_LVP$OFF 000000               coord@buffer 003C  
            __CFG_WDT$OFF 000000                      l1011 7C00                      l1003 7BCA  
                    l1021 7D1E                      l1005 7BDC                      l1023 7D22  
                    l1015 7CEE                      l1007 7BE0                      l1041 7D62  
                    l1017 7CF2                      l1009 7BFC                      l1201 7B1E  
                    l1121 7E1E                      l1113 7E10                      l1043 7D66  
                    l1035 7D30                      l1019 7D08                      l1211 7B86  
                    l1203 7B22                      l1131 7EA6                      l1123 7E2E  
                    l1037 7D42                      l1029 7D28                      l1141 7F1A  
                    l1133 7EF4                      l1213 7B88                      l1205 7B80  
                    l1125 7E32                      l1053 7AA6                      l1221 7D6E  
                    l1039 7D46                      l1151 7F62                      l1143 7F28  
                    l1135 7EF8                      l1215 7B8A                      l1207 7B82  
                    l1127 7E4E                      l1119 7E18                      l1055 7AB8  
                    l1047 7A9E                      l1231 7D9A                      l1223 7D7A  
                    l1161 7FAC                      l1153 7F6A                      l1145 7F38  
                    l1137 7F06                      l1217 7B8C                      l1209 7B84  
                    l1129 7E66                      l1057 7ABC                      l1233 7DA4  
                    l1241 7DC2                      l1225 7D7E                      l1171 7FDE  
                    l1163 7FBC                      l1155 7F76                      l1147 7F3C  
                    l1139 7F16                      l1059 7ADA                      l1251 7DD6  
                    l1235 7DAE                      l1227 7D86                      l1219 7D6A  
                    l1173 7FEE                      l1165 7FBE                      l1157 7F84  
                    l1149 7F4C                      l1181 7C82                      l1237 7DB8  
                    l1229 7D90                      l1167 7FC8                      l1159 7F8E  
                    l1191 7CA0                      l1169 7FCE                      l1193 7CBC  
                    l1177 7C78                      ?_cmd 002E                      l1195 7CE8  
                    l1187 7C8A                      l1179 7C7E                      l1197 7CEA  
                    l1189 7C9C                      ?_end 002E                      _RCIF 007CF5  
                    _Par1 0053                      _Par2 0051                      cmd@i 0048  
                    _main 7D6A                      _init 000E                      end@i 002F  
                    _okay 002A                      fsr2h 000FDA                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9         ??_Coord_Validated 002F  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
            ___param_bank 000000             _Ins_Validated 7B90                     ??_cmd 0048  
                   ??_end 002F             __CFG_PLLDIV$2 000000           __end_of___aldiv 8000  
                   ?_main 002E                     _RCREG 000FAE             _Par_Validated 7C04  
                   _SPBRG 000FAF                     _PORTC 000F82                     _TRISC 000F94  
                   _TXREG 000FAD        __size_of_UARTConfi 0072                     _Error 0024  
        __end_of_UARTRead 7A24        __size_of_UARTWrite 0016                     _coord 7E10  
                   _start 7ADE                     tablat 000FF5                     status 000FD8  
          __CFG_MCLRE$OFF 000000           __initialization 7A68              __end_of_main 7E10  
          ?_Ins_Validated 002E                    ??_main 004A            ?_Par_Validated 002E  
           __activetblptr 000002                    ?_coord 002E                    ?_start 002E  
                  _OSCCON 000FD3                    _Error2 001E                    _Error3 0018  
       __end_of_UARTConfi 7B90                 ??___aldiv 0036         __end_of_UARTWrite 7A3A  
                  _cord_x 004F                    _cord_y 004D                    _letter 0052  
                  clear_0 7A8E                    coord@L 0030                    coord@i 0046  
                  coord@x 0032                    coord@y 0034              __pdataCOMRAM 0001  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
                  start@i 002F                __accesstop 0060   __end_of__initialization 7A94  
         __CFG_PBADEN$OFF 000000             ___rparam_used 000001           ??_Ins_Validated 002F  
          __pcstackCOMRAM 002E                 ?_UARTRead 002E             __end_of_coord 7EF4  
           __end_of_start 7B1E           ??_Par_Validated 002F           _Coord_Validated 7CEE  
                 ??_coord 0038                   ??_start 002F                ??_UARTRead 002E  
        Coord_Validated@i 002F                   __Hparam 0000                   __Lparam 0000  
                 ___aldiv 7EF4                   __pcinit 7A68                   __ramtop 0800  
                 __ptext0 7D6A                   __ptext1 7ADE                   __ptext2 7A9E  
                 __ptext3 7C78                   __ptext4 7E10                   __ptext5 7A12  
                 __ptext6 7B1E                   __ptext7 7EF4                   __ptext8 7C04  
                 __ptext9 7B90   __end_of_Coord_Validated 7D6A              __size_of_cmd 0076  
            __size_of_end 0040          ___aldiv@dividend 002E                   coord@P1 002E  
                 coord@P2 0036      end_of_initialization 7A94             __Lmediumconst 0000  
               _RCSTAbits 000FAB          ___aldiv@quotient 0038                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _UARTConfi 7B1E                 _UARTWrite 7A24                 _TRISCbits 000F94  
               _TXSTAbits 000FAC                ?_UARTConfi 003C             __pidataCOMRAM 7A3B  
       __size_of_UARTRead 0012                ?_UARTWrite 002E          ?_Coord_Validated 002E  
     start_initialization 7A68               __end_of_cmd 7CEE               __end_of_end 7ADE  
           UARTConfi@BAUD 003C                 _NextState 004C     __end_of_Ins_Validated 7C04  
   __end_of_Par_Validated 7C78               __pbssCOMRAM 004C             _UARTConfi$956 003E  
                ?___aldiv 002E               ??_UARTConfi 003E               ??_UARTWrite 002E  
          __size_of_coord 00E4            __size_of_start 0040           ___aldiv@divisor 0032  
         ___aldiv@counter 0036                  _PIR1bits 000F9E                  _UARTRead 7A12  
               coord@read 0045             UARTWrite@data 002E                 copy_data0 7A7C  
                __Hrparam 0000                  __Lrparam 0000          __size_of___aldiv 010C  
                __ptext10 7CEE                  __ptext11 7A24            Ins_Validated@i 002F  
           __size_of_main 00A6            Par_Validated@i 002F  __size_of_Coord_Validated 007C  
     __CFG_FOSC$INTOSC_HS 000000              ___aldiv@sign 0037    __size_of_Ins_Validated 0074  
  __size_of_Par_Validated 0074  
